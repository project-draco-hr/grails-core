{
  ConfigObject config=new ConfigSlurper().parse("dataSource {\n" + "\t\t\tdbCreate = \"create-drop\" // one of 'create', 'create-drop','update'\n" + "\t\t\turl = \"jdbc:hsqldb:mem:devDB\" \n"+ "\tpooled = false\n"+ "\tdriverClassName = \"org.hsqldb.jdbcDriver\"\n"+ "\tusername = \"sa\"\n"+ "\tpassword = \"\"\n"+ "}");
  ConfigurationHolder.setConfig(config);
  ExpandoMetaClass.enableGlobally();
  grailsApplication.initialise();
  MockApplicationContext parent=new MockApplicationContext();
  parent.registerMockBean(GrailsApplication.APPLICATION_ID,grailsApplication);
  parent.registerMockBean("messageSource",new StaticMessageSource());
  parent.registerMockBean(PluginMetaManager.BEAN_ID,new DefaultPluginMetaManager(new Resource[0]));
  GrailsRuntimeConfigurator configurator=new GrailsRuntimeConfigurator(grailsApplication,parent);
  ApplicationContext appCtx=configurator.configure(new MockServletContext());
  this.sessionFactory=(SessionFactory)appCtx.getBean("sessionFactory");
  if (!TransactionSynchronizationManager.hasResource(this.sessionFactory)) {
    Session hibSession=this.sessionFactory.openSession();
    TransactionSynchronizationManager.bindResource(this.sessionFactory,new SessionHolder(hibSession));
  }
  super.onSetUp();
}
