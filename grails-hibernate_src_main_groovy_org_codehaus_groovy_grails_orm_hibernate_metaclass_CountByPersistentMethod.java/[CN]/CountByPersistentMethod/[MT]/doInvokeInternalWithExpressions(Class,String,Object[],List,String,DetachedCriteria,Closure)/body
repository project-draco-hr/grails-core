{
  final String operator=OPERATOR_OR.equals(operatorInUse) ? OPERATOR_OR : OPERATOR_AND;
  return getHibernateTemplate().execute(new HibernateCallback<Object>(){
    public Object doInHibernate(    Session session) throws HibernateException, SQLException {
      final Criteria crit=getCriteria(datastore,application,session,detachedCriteria,additionalCriteria,clazz);
      crit.setProjection(Projections.rowCount());
      Map argsMap=(arguments.length > 1 && (arguments[1] instanceof Map)) ? (Map)arguments[1] : Collections.EMPTY_MAP;
      GrailsHibernateUtil.populateArgumentsForCriteria(application,clazz,crit,argsMap);
      populateCriteriaWithExpressions(crit,operator,expressions);
      return crit.uniqueResult();
    }
  }
);
}
