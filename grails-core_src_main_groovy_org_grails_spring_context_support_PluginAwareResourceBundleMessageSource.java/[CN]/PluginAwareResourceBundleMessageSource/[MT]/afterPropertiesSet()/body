{
  if (pluginCacheMillis == Long.MIN_VALUE) {
    pluginCacheMillis=cacheMillis;
  }
  if (localResourceLoader == null) {
    return;
  }
  Resource[] resources;
  if (Environment.isDevelopmentMode()) {
    File[] propertiesFiles=new File(BuildSettings.BASE_DIR,GRAILS_APP_I18N_PATH_COMPONENT).listFiles(new FilenameFilter(){
      @Override public boolean accept(      File dir,      String name){
        return name.endsWith(".properties");
      }
    }
);
    if (propertiesFiles != null && propertiesFiles.length > 0) {
      List<Resource> resourceList=new ArrayList<Resource>(propertiesFiles.length);
      for (      File propertiesFile : propertiesFiles) {
        resourceList.add(new FileSystemResource(propertiesFile));
      }
      resources=resourceList.toArray(new Resource[resourceList.size()]);
    }
 else {
      resources=new Resource[0];
    }
  }
 else {
    resources=resourceResolver.getResources("classpath*:**/*.properties");
  }
  List<String> basenames=new ArrayList<String>();
  for (  Resource resource : resources) {
    String filename=resource.getFilename();
    String baseName=GrailsStringUtils.getFileBasename(filename);
    int i=baseName.indexOf('_');
    if (i > -1) {
      baseName=baseName.substring(0,i);
    }
    if (!basenames.contains(baseName) && !baseName.equals(""))     basenames.add(baseName);
  }
  setBasenames(basenames.toArray(new String[basenames.size()]));
}
