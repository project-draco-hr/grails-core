{
  Object[] args=argsObject instanceof Object[] ? (Object[])argsObject : new Object[]{argsObject};
  TagLibraryLookup lookup=getTagLibraryLookup();
  if (lookup != null) {
    GroovyObject tagLibrary=lookup.lookupTagLibrary(GroovyPage.DEFAULT_NAMESPACE,methodName);
    if (tagLibrary != null) {
      if (!developmentMode) {
        MetaClass controllerMc=GrailsMetaClassUtils.getMetaClass(instance);
        TagLibraryMetaUtils.registerMethodMissingForTags(controllerMc,lookup,GroovyPage.DEFAULT_NAMESPACE,methodName);
      }
      List<MetaMethod> respondsTo=tagLibrary.getMetaClass().respondsTo(tagLibrary,methodName,args);
      if (respondsTo.size() > 0) {
        return respondsTo.get(0).invoke(tagLibrary,args);
      }
    }
  }
  throw new MissingMethodException(methodName,instance.getClass(),args);
}
