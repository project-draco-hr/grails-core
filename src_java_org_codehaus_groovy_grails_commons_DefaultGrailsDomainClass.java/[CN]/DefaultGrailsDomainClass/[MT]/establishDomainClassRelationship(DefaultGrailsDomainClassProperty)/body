{
  Class<?> propType=property.getType();
  if (embedded.contains(property.getName())) {
    property.setEmbedded(true);
    return;
  }
  Map relatedClassRelationships=GrailsDomainConfigurationUtil.getAssociationMap(propType);
  @SuppressWarnings("hiding") Map mappedBy=GrailsDomainConfigurationUtil.getMappedByMap(propType);
  Class<?> relatedClassPropertyType=null;
  if (relatedClassRelationships != null && !relatedClassRelationships.isEmpty()) {
    String relatedClassPropertyName=findOneToManyThatMatchesType(property,relatedClassRelationships);
    PropertyDescriptor[] descriptors=GrailsClassUtils.getPropertiesOfType(getClazz(),property.getType());
    if (descriptors.length == 1 && isNotMappedToDifferentProperty(property,relatedClassPropertyName,mappedBy)) {
      if (!StringUtils.isBlank(relatedClassPropertyName)) {
        property.setReferencePropertyName(relatedClassPropertyName);
        relatedClassPropertyType=GrailsClassUtils.getPropertyType(propType,relatedClassPropertyName);
      }
    }
 else     if (descriptors.length > 1) {
      if (mappedBy.containsValue(property.getName())) {
        for (        Object o : mappedBy.keySet()) {
          String mappedByPropertyName=(String)o;
          if (property.getName().equals(mappedBy.get(mappedByPropertyName))) {
            Class<?> mappedByRelatedType=(Class<?>)relatedClassRelationships.get(mappedByPropertyName);
            if (mappedByRelatedType != null && propType.isAssignableFrom(mappedByRelatedType))             relatedClassPropertyType=GrailsClassUtils.getPropertyType(propType,mappedByPropertyName);
          }
        }
      }
 else {
        String classNameAsProperty=GrailsNameUtils.getPropertyName(propType);
        if (property.getName().equals(classNameAsProperty) && !mappedBy.containsKey(relatedClassPropertyName)) {
          relatedClassPropertyType=GrailsClassUtils.getPropertyType(propType,relatedClassPropertyName);
        }
      }
    }
  }
  if (relatedClassPropertyType == null) {
    PropertyDescriptor[] descriptors=GrailsClassUtils.getPropertiesOfType(propType,getClazz());
    if (descriptors.length == 1) {
      relatedClassPropertyType=descriptors[0].getPropertyType();
    }
  }
  establishDomainClassRelationshipToType(property,relatedClassPropertyType);
}
