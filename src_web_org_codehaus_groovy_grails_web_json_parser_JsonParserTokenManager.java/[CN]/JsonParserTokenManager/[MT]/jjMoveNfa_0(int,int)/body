{
  int startsAt=0;
  jjnewStateCnt=31;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 31:
          if ((0xfffffffbffffdbffL & l) != 0L)           jjCheckNAddStates(0,3);
 else           if (curChar == 34) {
            if (kind > 11)             kind=11;
          }
        break;
case 0:
      if ((0x3ff000000000000L & l) != 0L) {
        if (kind > 6)         kind=6;
        jjCheckNAdd(2);
      }
 else       if (curChar == 34)       jjCheckNAddStates(0,3);
 else       if (curChar == 39)       jjCheckNAddStates(4,7);
    break;
case 1:
  if ((0x280000000000L & l) != 0L && kind > 5)   kind=5;
break;
case 2:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 6) kind=6;
jjCheckNAdd(2);
break;
case 4:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=5;
break;
case 5:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=6;
break;
case 6:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=7;
break;
case 7:
if ((0x3ff000000000000L & l) != 0L && kind > 8) kind=8;
break;
case 9:
if (curChar == 39) jjCheckNAddStates(4,7);
break;
case 10:
if ((0xffffff7fffffdbffL & l) != 0L) jjCheckNAddStates(4,7);
break;
case 12:
if ((0x808400000000L & l) != 0L) jjCheckNAddStates(4,7);
break;
case 14:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=15;
break;
case 15:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=16;
break;
case 16:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=17;
break;
case 17:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(4,7);
break;
case 19:
if (curChar == 39 && kind > 10) kind=10;
break;
case 20:
if (curChar == 34) jjCheckNAddStates(0,3);
break;
case 21:
if ((0xfffffffbffffdbffL & l) != 0L) jjCheckNAddStates(0,3);
break;
case 23:
if ((0x808400000000L & l) != 0L) jjCheckNAddStates(0,3);
break;
case 25:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=26;
break;
case 26:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=27;
break;
case 27:
if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=28;
break;
case 28:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);
break;
case 30:
if (curChar == 34 && kind > 11) kind=11;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 31:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(0,3);
 else if (curChar == 92) jjstateSet[jjnewStateCnt++]=24;
if (curChar == 92) jjstateSet[jjnewStateCnt++]=23;
break;
case 0:
if ((0x2000000020L & l) != 0L) {
if (kind > 5) kind=5;
jjstateSet[jjnewStateCnt++]=1;
}
 else if (curChar == 92) jjstateSet[jjnewStateCnt++]=3;
break;
case 3:
if (curChar == 117) jjstateSet[jjnewStateCnt++]=4;
break;
case 4:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=5;
break;
case 5:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=6;
break;
case 6:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=7;
break;
case 7:
if ((0x7e0000007eL & l) != 0L && kind > 8) kind=8;
break;
case 8:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=3;
break;
case 10:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(4,7);
break;
case 11:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=12;
break;
case 12:
if ((0x14404410000000L & l) != 0L) jjCheckNAddStates(4,7);
break;
case 13:
if (curChar == 117) jjstateSet[jjnewStateCnt++]=14;
break;
case 14:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=15;
break;
case 15:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=16;
break;
case 16:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=17;
break;
case 17:
if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(4,7);
break;
case 18:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=13;
break;
case 21:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(0,3);
break;
case 22:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=23;
break;
case 23:
if ((0x14404410000000L & l) != 0L) jjCheckNAddStates(0,3);
break;
case 24:
if (curChar == 117) jjstateSet[jjnewStateCnt++]=25;
break;
case 25:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=26;
break;
case 26:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=27;
break;
case 27:
if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++]=28;
break;
case 28:
if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(0,3);
break;
case 29:
if (curChar == 92) jjstateSet[jjnewStateCnt++]=24;
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int hiByte=(int)(curChar >> 8);
int i1=hiByte >> 6;
long l1=1L << (hiByte & 077);
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 31:
case 21:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(0,3);
break;
case 10:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(4,7);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=31 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
