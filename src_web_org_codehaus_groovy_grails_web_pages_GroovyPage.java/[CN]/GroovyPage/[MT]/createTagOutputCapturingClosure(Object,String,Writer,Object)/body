{
  if (body1 == null) {
    return EMPTY_BODY_CLOSURE;
  }
 else   if (body1 instanceof GroovyPageTagBody) {
    return (Closure)body1;
  }
 else {
    return new Closure(wrappedInstance){
      public Object doCall(      Object obj){
        return call(new Object[]{obj});
      }
      public Object doCall(){
        return call(new Object[0]);
      }
      public Object doCall(      Object[] args){
        return call(args);
      }
      public Object call(      Object[] args){
        if (body1 != null) {
          Object bodyResponse;
          if (body1 instanceof Closure) {
            if (args != null && args.length > 0) {
              bodyResponse=((Closure)body1).call(args);
            }
 else {
              bodyResponse=((Closure)body1).call();
            }
          }
 else {
            bodyResponse=body1;
          }
          if (bodyResponse != null && !(bodyResponse instanceof Writer)) {
            try {
              out.write(bodyResponse.toString());
            }
 catch (            IOException e) {
              throw new GrailsTagException("I/O error invoking tag library closure [" + methodName + "] as method: "+ e.getMessage(),e);
            }
          }
        }
        return BLANK_STRING;
      }
    }
;
  }
}
