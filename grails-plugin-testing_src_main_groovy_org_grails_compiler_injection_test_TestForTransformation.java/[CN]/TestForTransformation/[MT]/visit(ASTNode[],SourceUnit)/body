{
  if (!(astNodes[0] instanceof AnnotationNode) || !(astNodes[1] instanceof AnnotatedNode)) {
    throw new RuntimeException("Internal error: wrong types: $node.class / $parent.class");
  }
  AnnotatedNode parent=(AnnotatedNode)astNodes[1];
  AnnotationNode node=(AnnotationNode)astNodes[0];
  if (!MY_TYPE.equals(node.getClassNode()) || !(parent instanceof ClassNode)) {
    return;
  }
  ClassNode classNode=(ClassNode)parent;
  if (classNode.isInterface() || Modifier.isAbstract(classNode.getModifiers())) {
    return;
  }
  boolean junit3Test=isJunit3Test(classNode);
  boolean spockTest=isSpockTest(classNode);
  boolean isJunit=!junit3Test && !spockTest;
  if (!junit3Test && !spockTest && !isJunit)   return;
  handleTestForAnnotation(classNode,source,node,junit3Test);
  addEnableEMCStatement(classNode);
}
