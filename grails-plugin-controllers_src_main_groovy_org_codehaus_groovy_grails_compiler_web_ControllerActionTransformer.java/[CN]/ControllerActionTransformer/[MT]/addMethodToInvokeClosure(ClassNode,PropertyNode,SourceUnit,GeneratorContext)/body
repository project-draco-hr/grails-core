{
  MethodNode method=controllerClassNode.getMethod(closureProperty.getName(),ZERO_PARAMETERS);
  if (method == null || !method.getDeclaringClass().equals(controllerClassNode)) {
    ClosureExpression closureExpression=(ClosureExpression)closureProperty.getInitialExpression();
    final Parameter[] parameters=closureExpression.getParameters();
    final BlockStatement newMethodCode=initializeActionParameters(controllerClassNode,closureProperty,closureProperty.getName(),parameters,source,context);
    final ArgumentListExpression closureInvocationArguments=new ArgumentListExpression();
    if (parameters != null) {
      for (      Parameter p : parameters) {
        closureInvocationArguments.addExpression(new VariableExpression(p.getName()));
      }
    }
    final MethodCallExpression methodCallExpression=new MethodCallExpression(closureExpression,"call",closureInvocationArguments);
    newMethodCode.addStatement(new ExpressionStatement(methodCallExpression));
    final MethodNode methodNode=new MethodNode(closureProperty.getName(),Modifier.PUBLIC,new ClassNode(Object.class),ZERO_PARAMETERS,EMPTY_CLASS_ARRAY,newMethodCode);
    annotateActionMethodAndWrapWithExceptionHandling(controllerClassNode,parameters,methodNode);
    controllerClassNode.addMethod(methodNode);
  }
}
