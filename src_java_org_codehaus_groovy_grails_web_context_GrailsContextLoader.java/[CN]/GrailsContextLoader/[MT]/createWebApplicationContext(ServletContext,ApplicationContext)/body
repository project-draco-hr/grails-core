{
  ExpandoMetaClass.enableGlobally();
  Metadata metadata=Metadata.getCurrent();
  if (metadata != null && metadata.isWarDeployed()) {
    Grape.setEnableAutoDownload(false);
    Grape.setEnableGrapes(false);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("[GrailsContextLoader] Loading context. Creating parent application context");
  }
  WebApplicationContext ctx;
  try {
    ctx=super.createWebApplicationContext(servletContext,parent);
    application=ctx.getBean(GrailsApplication.APPLICATION_ID,GrailsApplication.class);
    ctx=GrailsConfigUtils.configureWebApplicationContext(servletContext,ctx);
    GrailsConfigUtils.executeGrailsBootstraps(application,ctx,servletContext);
  }
 catch (  Throwable e) {
    GrailsUtil.deepSanitize(e);
    if (e instanceof BeansException)     throw (BeansException)e;
 else {
      throw new BootstrapException("Error executing bootstraps",e);
    }
  }
  return ctx;
}
