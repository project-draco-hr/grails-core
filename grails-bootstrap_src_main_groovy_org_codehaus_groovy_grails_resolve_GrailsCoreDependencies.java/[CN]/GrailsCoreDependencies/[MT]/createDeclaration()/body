{
  return new Closure(this,this){
    public Object doCall(){
      DependencyConfigurationConfigurer rootDelegate=(DependencyConfigurationConfigurer)getDelegate();
      rootDelegate.log("warn");
      rootDelegate.repositories(new Closure(this,GrailsCoreDependencies.this){
        public Object doCall(){
          RepositoriesConfigurer repositoriesDelegate=(RepositoriesConfigurer)getDelegate();
          repositoriesDelegate.grailsPlugins();
          repositoriesDelegate.grailsHome();
          return null;
        }
      }
);
      rootDelegate.dependencies(new Closure(this,GrailsCoreDependencies.this){
        public Object doCall(){
          JarDependenciesConfigurer dependenciesDelegate=(JarDependenciesConfigurer)getDelegate();
          IvyDependencyManager dependencyManager=dependenciesDelegate.getDependencyManager();
          boolean defaultDependenciesProvided=dependencyManager.getDefaultDependenciesProvided();
          String compileTimeDependenciesMethod=defaultDependenciesProvided ? "provided" : "compile";
          String runtimeDependenciesMethod=defaultDependenciesProvided ? "provided" : "runtime";
          String springVersion="3.1.0.RELEASE";
          String antVersion="1.8.2";
          String slf4jVersion="1.6.2";
          String junitVersion="4.10";
          ModuleRevisionId[] buildDependencies={ModuleRevisionId.newInstance("org.springframework.uaa","org.springframework.uaa.client","1.0.1.RELEASE"),ModuleRevisionId.newInstance("com.google.protobuf","protobuf-java","2.3.0"),ModuleRevisionId.newInstance("com.googlecode.json-simple","json-simple","1.1"),ModuleRevisionId.newInstance("org.bouncycastle","bcpg-jdk15","1.45"),ModuleRevisionId.newInstance("org.bouncycastle","bcprov-jdk15","1.45"),ModuleRevisionId.newInstance("org.tmatesoft.svnkit","svnkit","1.3.5"),ModuleRevisionId.newInstance("jline","jline","1.0"),ModuleRevisionId.newInstance("org.apache.ivy","ivy","2.2.0"),ModuleRevisionId.newInstance("org.fusesource.jansi","jansi","1.2.1"),ModuleRevisionId.newInstance("net.java.dev.jna","jna","3.2.3"),ModuleRevisionId.newInstance("xalan","serializer","2.7.1"),ModuleRevisionId.newInstance("org.grails","grails-docs",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-bootstrap",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-scripts",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-core",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-resources",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-web",grailsVersion),ModuleRevisionId.newInstance("org.slf4j","slf4j-api",slf4jVersion),ModuleRevisionId.newInstance("org.springframework","spring-test",springVersion),ModuleRevisionId.newInstance("com.googlecode.concurrentlinkedhashmap","concurrentlinkedhashmap-lru","1.2_jdk5"),ModuleRevisionId.newInstance("junit","junit",junitVersion)};
          registerDependencies(dependencyManager,"build",buildDependencies);
          ModuleRevisionId[] antDependencies={ModuleRevisionId.newInstance("org.apache.ant","ant",antVersion),ModuleRevisionId.newInstance("org.apache.ant","ant-launcher",antVersion),ModuleRevisionId.newInstance("org.apache.ant","ant-junit",antVersion),ModuleRevisionId.newInstance("org.apache.ant","ant-trax","1.7.1")};
          registerDependencies(dependencyManager,"build",antDependencies,"junit");
          ModuleRevisionId[] docDependencies={ModuleRevisionId.newInstance("org.xhtmlrenderer","core-renderer","R8"),ModuleRevisionId.newInstance("com.lowagie","itext","2.0.8"),ModuleRevisionId.newInstance("org.grails","grails-gdoc-engine","1.0.1"),ModuleRevisionId.newInstance("org.yaml","snakeyaml","1.8")};
          registerDependencies(dependencyManager,"docs",docDependencies);
          String tomcatVersion="7.0.25";
          ModuleRevisionId[] providedDependencies={ModuleRevisionId.newInstance("org.apache.tomcat.embed","tomcat-embed-core",tomcatVersion),ModuleRevisionId.newInstance("org.apache.tomcat.embed","tomcat-embed-jasper",tomcatVersion),ModuleRevisionId.newInstance("org.apache.tomcat.embed","tomcat-embed-logging-log4j",tomcatVersion)};
          registerDependencies(dependencyManager,"provided",providedDependencies);
          ModuleRevisionId[] groovyDependencies={ModuleRevisionId.newInstance("org.codehaus.groovy","groovy-all","1.8.6")};
          registerDependencies(dependencyManager,compileTimeDependenciesMethod,groovyDependencies,"jline");
          ModuleRevisionId[] commonsExcludingLoggingAndXmlApis={ModuleRevisionId.newInstance("commons-beanutils","commons-beanutils","1.8.3"),ModuleRevisionId.newInstance("commons-el","commons-el","1.0"),ModuleRevisionId.newInstance("commons-validator","commons-validator","1.3.1")};
          registerDependencies(dependencyManager,compileTimeDependenciesMethod,commonsExcludingLoggingAndXmlApis,"commons-logging","xml-apis","commons-digester");
          String datastoreMappingVersion="1.0.3.BUILD-SNAPSHOT";
          ModuleRevisionId[] compileDependencies={ModuleRevisionId.newInstance("aopalliance","aopalliance","1.0"),ModuleRevisionId.newInstance("com.googlecode.concurrentlinkedhashmap","concurrentlinkedhashmap-lru","1.2_jdk5"),ModuleRevisionId.newInstance("commons-codec","commons-codec","1.5"),ModuleRevisionId.newInstance("commons-collections","commons-collections","3.2.1"),ModuleRevisionId.newInstance("commons-io","commons-io","2.1"),ModuleRevisionId.newInstance("commons-lang","commons-lang","2.6"),ModuleRevisionId.newInstance("javax.transaction","jta","1.1"),ModuleRevisionId.newInstance("org.hibernate.javax.persistence","hibernate-jpa-2.0-api","1.0.1.Final"),ModuleRevisionId.newInstance("opensymphony","sitemesh","2.4"),ModuleRevisionId.newInstance("org.grails","grails-bootstrap",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-core",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-crud",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-hibernate",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-resources",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-spring",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-web",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-logging",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-codecs",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-controllers",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-domain-class",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-converters",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-datasource",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-filters",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-gsp",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-i18n",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-log4j",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-scaffolding",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-services",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-servlets",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-mimetypes",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-url-mappings",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-validation",grailsVersion),ModuleRevisionId.newInstance("org.springframework","spring-core",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-aop",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-aspects",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-asm",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-beans",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-context",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-context-support",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-expression",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-jdbc",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-jms",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-orm",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-tx",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-web",springVersion),ModuleRevisionId.newInstance("org.springframework","spring-webmvc",springVersion),ModuleRevisionId.newInstance("org.slf4j","slf4j-api",slf4jVersion)};
          registerDependencies(dependencyManager,compileTimeDependenciesMethod,compileDependencies);
          EnhancedDefaultDependencyDescriptor grailsDatastoreGorm=registerDependency(dependencyManager,compileTimeDependenciesMethod,ModuleRevisionId.newInstance("org.grails","grails-datastore-gorm",datastoreMappingVersion));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.grails","grails-bootstrap"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.grails","grails-core"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.grails","grails-test"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.grails","grails-datastore-core"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.slf4j","slf4j-simple"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.slf4j","jcl-over-slf4j"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.slf4j","jul-to-slf4j"));
          grailsDatastoreGorm.exclude(ModuleId.newInstance("org.slf4j","slf4j-api"));
          EnhancedDefaultDependencyDescriptor grailsDatastoreCore=registerDependency(dependencyManager,compileTimeDependenciesMethod,ModuleRevisionId.newInstance("org.grails","grails-datastore-core",datastoreMappingVersion));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.grails","grails-bootstrap"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.grails","grails-core"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.grails","grails-test"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.slf4j","slf4j-simple"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.slf4j","jcl-over-slf4j"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.slf4j","jul-to-slf4j"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.slf4j","slf4j-api"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("javax.persistence","persistence-api"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("javax.transaction","jta"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("javassist","javassist"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("commons-collections","commons-collections"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.springframework","spring-beans"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.springframework","spring-core"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.springframework","spring-context"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.springframework","spring-web"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("org.springframework","spring-tx"));
          grailsDatastoreCore.exclude(ModuleId.newInstance("com.googlecode.concurrentlinkedhashmap","concurrentlinkedhashmap-lru"));
          ModuleRevisionId[] datastoreDependencies={ModuleRevisionId.newInstance("org.grails","grails-datastore-simple",datastoreMappingVersion)};
          registerDependencies(dependencyManager,compileTimeDependenciesMethod,datastoreDependencies,false);
          if (GrailsVersionUtils.isValidVersion(servletVersion,"3.0 > *")) {
            ModuleRevisionId[] servletThreeCompileDependencies={ModuleRevisionId.newInstance("org.grails","grails-plugin-async",grailsVersion)};
            registerDependencies(dependencyManager,compileTimeDependenciesMethod,servletThreeCompileDependencies);
          }
          ModuleRevisionId[] testDependencies={ModuleRevisionId.newInstance("junit","junit",junitVersion),ModuleRevisionId.newInstance("org.grails","grails-plugin-testing",grailsVersion),ModuleRevisionId.newInstance("org.grails","grails-test",grailsVersion),ModuleRevisionId.newInstance("org.springframework","spring-test",springVersion)};
          registerDependencies(dependencyManager,"test",testDependencies);
          ModuleRevisionId[] runtimeDependencies={ModuleRevisionId.newInstance("org.aspectj","aspectjweaver","1.6.10"),ModuleRevisionId.newInstance("org.aspectj","aspectjrt","1.6.10"),ModuleRevisionId.newInstance("cglib","cglib","2.2"),ModuleRevisionId.newInstance("asm","asm","3.1"),ModuleRevisionId.newInstance("commons-fileupload","commons-fileupload","1.2.2"),ModuleRevisionId.newInstance("oro","oro","2.0.8"),ModuleRevisionId.newInstance("commons-dbcp","commons-dbcp",java5compatible ? "1.3" : "1.4"),ModuleRevisionId.newInstance("commons-pool","commons-pool","1.5.6"),ModuleRevisionId.newInstance("com.h2database","h2","1.3.164"),ModuleRevisionId.newInstance("javax.servlet","jstl","1.1.2"),ModuleRevisionId.newInstance("xpp3","xpp3_min","1.1.4c")};
          registerDependencies(dependencyManager,runtimeDependenciesMethod,runtimeDependencies);
          if (java5compatible) {
            registerDependencies(dependencyManager,runtimeDependenciesMethod,new ModuleRevisionId[]{ModuleRevisionId.newInstance("javax.xml","jaxb-api","2.0")});
          }
          ModuleRevisionId[] ehcacheDependencies={ModuleRevisionId.newInstance("net.sf.ehcache","ehcache-core","2.4.6")};
          registerDependencies(dependencyManager,runtimeDependenciesMethod,ehcacheDependencies,"jms","commons-logging","servlet-api");
          ModuleRevisionId[] loggingDependencies={ModuleRevisionId.newInstance("log4j","log4j","1.2.16"),ModuleRevisionId.newInstance("org.slf4j","jcl-over-slf4j",slf4jVersion),ModuleRevisionId.newInstance("org.slf4j","jul-to-slf4j",slf4jVersion)};
          registerDependencies(dependencyManager,runtimeDependenciesMethod,loggingDependencies,"mail","jms","jmxtools","jmxri");
          return null;
        }
      }
);
      return null;
    }
  }
;
}
