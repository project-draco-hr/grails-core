{
  Object v=pv.getValue();
  Collection collection=(Collection)bean.getPropertyValue(pv.getName());
  collection.clear();
  final Class associatedType=getReferencedTypeForCollection(pv.getName(),getTarget());
  final boolean isArray=v != null && v.getClass().isArray();
  final PropertyEditor propertyEditor=findCustomEditor(collection.getClass(),pv.getName());
  if (propertyEditor == null) {
    if (isDomainAssociation(associatedType)) {
      if (isArray) {
        Object[] identifiers=(Object[])v;
        for (        Object id : identifiers) {
          if (id != null) {
            associateObjectForId(pv,id,associatedType);
          }
        }
        mpvs.removePropertyValue(pv);
      }
 else       if (v != null && (v instanceof String)) {
        associateObjectForId(pv,v,associatedType);
        mpvs.removePropertyValue(pv);
      }
    }
 else     if (GrailsDomainConfigurationUtil.isBasicType(associatedType)) {
      if (isArray) {
        Object[] values=(Object[])v;
        List list=collection instanceof List ? (List)collection : null;
        for (int i=0; i < values.length; i++) {
          Object value=values[i];
          try {
            Object newValue=getTypeConverter().convertIfNecessary(value,associatedType);
            if (list != null) {
              if (i > list.size() - 1) {
                list.add(i,newValue);
              }
 else {
                list.set(i,newValue);
              }
            }
 else {
              collection.add(newValue);
            }
          }
 catch (          TypeMismatchException e) {
          }
        }
      }
    }
  }
}
