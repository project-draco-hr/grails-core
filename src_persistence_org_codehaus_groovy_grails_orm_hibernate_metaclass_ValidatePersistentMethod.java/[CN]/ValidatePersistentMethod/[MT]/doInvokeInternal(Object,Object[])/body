{
  Errors errors=new BindException(target,target.getClass().getName());
  GrailsDomainClass domainClass=(GrailsDomainClass)application.getArtefact(DomainClassArtefactHandler.TYPE,target.getClass().getName());
  Validator validator=null;
  if (domainClass != null)   validator=domainClass.getValidator();
  Boolean valid=Boolean.TRUE;
  if (validator != null) {
    boolean evict=false;
    boolean deepValidate=true;
    if (arguments.length > 0) {
      if (arguments[0] instanceof Boolean) {
        evict=((Boolean)arguments[0]).booleanValue();
      }
      if (arguments[0] instanceof Map) {
        Map argsMap=(Map)arguments[0];
        if (argsMap.containsKey(ARGUMENT_DEEP_VALIDATE))         deepValidate=GrailsClassUtils.getBooleanFromMap(ARGUMENT_DEEP_VALIDATE,argsMap);
        evict=GrailsClassUtils.getBooleanFromMap(ARGUMENT_EVICT,argsMap);
      }
    }
    if (deepValidate && (validator instanceof CascadingValidator)) {
      ((CascadingValidator)validator).validate(target,errors,deepValidate);
    }
 else {
      validator.validate(target,errors);
    }
    if (errors.hasErrors()) {
      valid=Boolean.valueOf(false);
      if (evict) {
        if (getHibernateTemplate().contains(target)) {
          getHibernateTemplate().evict(target);
        }
      }
      MetaClass metaClass=GroovySystem.getMetaClassRegistry().getMetaClass(target.getClass());
      metaClass.setProperty(target,DomainClassMethods.ERRORS_PROPERTY,errors);
    }
  }
  return valid;
}
