{
  Integer maxParam=null;
  Integer offsetParam=null;
  if (argMap.containsKey(ARGUMENT_MAX)) {
    maxParam=converter.convertIfNecessary(argMap.get(ARGUMENT_MAX),Integer.class);
  }
  if (argMap.containsKey(ARGUMENT_OFFSET)) {
    offsetParam=converter.convertIfNecessary(argMap.get(ARGUMENT_OFFSET),Integer.class);
  }
  String orderParam=(String)argMap.get(ARGUMENT_ORDER);
  Object fetchObj=argMap.get(ARGUMENT_FETCH);
  if (fetchObj instanceof Map) {
    Map fetch=(Map)fetchObj;
    for (    Object o : fetch.keySet()) {
      String associationName=(String)o;
      c.setFetchMode(associationName,getFetchMode(fetch.get(associationName)));
    }
  }
  final String sort=(String)argMap.get(ARGUMENT_SORT);
  final String order=ORDER_DESC.equalsIgnoreCase(orderParam) ? ORDER_DESC : ORDER_ASC;
  final int max=maxParam == null ? -1 : maxParam;
  final int offset=offsetParam == null ? -1 : offsetParam;
  if (max > -1) {
    c.setMaxResults(max);
  }
  if (offset > -1) {
    c.setFirstResult(offset);
  }
  if (GrailsClassUtils.getBooleanFromMap(ARGUMENT_CACHE,argMap)) {
    c.setCacheable(true);
  }
  if (GrailsClassUtils.getBooleanFromMap(ARGUMENT_LOCK,argMap)) {
    c.setLockMode(LockMode.UPGRADE);
  }
 else {
    if (argMap.get(ARGUMENT_CACHE) == null) {
      cacheCriteriaByMapping(targetClass,c);
    }
  }
  if (sort != null) {
    boolean ignoreCase=true;
    Object caseArg=argMap.get(ARGUMENT_IGNORE_CASE);
    if (caseArg instanceof Boolean) {
      ignoreCase=(Boolean)caseArg;
    }
    addOrderPossiblyNested(null,c,targetClass,sort,order,ignoreCase);
  }
 else {
    Mapping m=GrailsDomainBinder.getMapping(targetClass);
    if (m != null && !StringUtils.isBlank(m.getSort())) {
      addOrderPossiblyNested(null,c,targetClass,m.getSort(),m.getOrder(),true);
    }
  }
}
