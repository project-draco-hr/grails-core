{
  GrailsPlugin[] allPlugins=pluginManager.getAllPlugins();
  for (  GrailsPlugin plugin : allPlugins) {
    GrailsPluginInfo info=compiler.getPluginSettings().getPluginInfoForName(plugin.getFileSystemShortName());
    if (info != null && info.getDescriptor() != null) {
      try {
        org.codehaus.groovy.grails.io.support.Resource descriptor=info.getDescriptor();
        plugin.setDescriptor(new FileSystemResource(descriptor.getFile()));
        File pluginFile=descriptor.getFile();
        descriptorToPluginMap.put(pluginFile,plugin);
        addWatchFile(pluginFile);
      }
 catch (      IOException e) {
      }
    }
    List<WatchPattern> watchPatterns=plugin.getWatchedResourcePatterns();
    if (watchPatterns != null) {
      for (      WatchPattern watchPattern : watchPatterns) {
        if (watchPattern.getFile() != null) {
          addWatchFile(watchPattern.getFile());
        }
 else         if (watchPattern.getDirectory() != null) {
          addWatchDirectory(watchPattern.getDirectory(),watchPattern.getExtension());
        }
      }
    }
  }
}
