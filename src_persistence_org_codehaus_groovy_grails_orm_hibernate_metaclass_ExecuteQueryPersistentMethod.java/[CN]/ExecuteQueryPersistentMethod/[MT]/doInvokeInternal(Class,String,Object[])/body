{
  if (arguments.length == 0)   throw new MissingMethodException(METHOD_SIGNATURE,clazz,arguments);
  if (arguments.length == 1) {
    return getHibernateTemplate().find(arguments[0].toString());
  }
 else   if (arguments.length == 2) {
    if (arguments[1] instanceof Collection) {
      return getHibernateTemplate().find(arguments[0].toString(),GrailsClassUtils.collectionToObjectArray((Collection)arguments[1]));
    }
 else     if (arguments[1] instanceof Map) {
      Map paramsMap=(Map)arguments[1];
      String[] paramNames=new String[paramsMap.size()];
      Object[] paramValues=new Object[paramsMap.size()];
      int index=0;
      for (Iterator it=paramsMap.entrySet().iterator(); it.hasNext(); ) {
        Map.Entry entry=(Map.Entry)it.next();
        if (!(entry.getKey() instanceof String))         throw new GrailsQueryException("Named parameter's name must be of type String");
        paramNames[index]=(String)entry.getKey();
        paramValues[index++]=entry.getValue();
      }
      return getHibernateTemplate().findByNamedParam(arguments[0].toString(),paramNames,paramValues);
    }
 else {
      return getHibernateTemplate().find(arguments[0].toString(),arguments[1]);
    }
  }
  throw new MissingMethodException(METHOD_SIGNATURE,clazz,arguments);
}
