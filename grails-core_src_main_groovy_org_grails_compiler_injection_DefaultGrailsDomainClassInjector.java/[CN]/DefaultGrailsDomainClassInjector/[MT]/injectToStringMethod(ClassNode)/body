{
  final boolean hasToString=GrailsASTUtils.implementsOrInheritsZeroArgMethod(classNode,"toString",classesWithInjectedToString);
  final boolean hasToStringAnnotation=GrailsASTUtils.hasAnnotation(classNode,groovy.transform.ToString.class);
  if (!hasToString && !isEnum(classNode) && !hasToStringAnnotation) {
    GStringExpression ge=new GStringExpression(classNode.getName() + " : ${id ? id : '(unsaved)'}");
    ge.addString(new ConstantExpression(classNode.getName() + " : "));
    VariableExpression idVariable=new VariableExpression("id");
    ge.addValue(new TernaryExpression(new BooleanExpression(idVariable),idVariable,new ConstantExpression("(unsaved)")));
    Statement s=new ReturnStatement(ge);
    MethodNode mn=new MethodNode("toString",Modifier.PUBLIC,new ClassNode(String.class),new Parameter[0],new ClassNode[0],s);
    classNode.addMethod(mn);
    classesWithInjectedToString.add(classNode);
  }
}
