{
  if (!isInitialized() || hasExpired(timeout)) {
    boolean lockAcquired=false;
    try {
      long beforeLockingCreatedMillis=createdMillis;
      if (returnExpiredWhileUpdating) {
        if (!writeLock.tryLock()) {
          if (isInitialized()) {
            return getValueWhileUpdating();
          }
 else {
            writeLock.lock();
          }
        }
      }
 else {
        writeLock.lock();
      }
      lockAcquired=true;
      V value;
      if (!isInitialized() || shouldUpdate(beforeLockingCreatedMillis)) {
        try {
          value=updateValue(getValue(),updater);
          setValue(value);
          setInitialized(true);
        }
 catch (        Exception e) {
          throw new UpdateException(e);
        }
        resetTimestamp(true);
      }
 else {
        value=getValue();
        resetTimestamp(false);
      }
      return value;
    }
  finally {
      if (lockAcquired) {
        writeLock.unlock();
      }
    }
  }
 else {
    return getValue();
  }
}
