{
  GroovyClassLoader gcl=new GroovyClassLoader();
  final Class<?> testClass=gcl.parseClass("class Test {}");
  GroovyObject go=(GroovyObject)testClass.newInstance();
  ProxyMetaClass pmc=ProxyMetaClass.getInstance(testClass);
  go.setMetaClass(pmc);
  pmc.setInterceptor(new ConstructorInterceptor(){
    public Object beforeConstructor(    Object[] args,    InvocationCallback callback){
      return null;
    }
    public Object afterConstructor(    Object[] args,    Object instantiatedInstance){
      assertNotNull(instantiatedInstance);
      assertEquals(testClass,instantiatedInstance.getClass());
      return instantiatedInstance;
    }
    public Object beforeInvoke(    Object object,    String methodName,    Object[] arguments,    InvocationCallback callback){
      return null;
    }
    public Object afterInvoke(    Object object,    String methodName,    Object[] arguments,    Object result){
      return null;
    }
  }
);
  Object instance=go.getMetaClass().invokeConstructor(new Object[0]);
  assertNotNull(instance);
  assertEquals(testClass,instance.getClass());
}
