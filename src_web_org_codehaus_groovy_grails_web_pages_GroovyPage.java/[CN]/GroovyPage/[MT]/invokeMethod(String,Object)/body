{
  try {
    return super.invokeMethod(methodName,args);
  }
 catch (  MissingMethodException mme) {
    Map attrs=null;
    Closure body=null;
    Binding binding=getBinding();
    final Writer out=(Writer)binding.getVariable(GroovyPage.OUT);
    GroovyObject tagLib=(GroovyObject)binding.getVariable(GrailsRequestAttributes.TAG_LIB);
    if (args instanceof Object[]) {
      Object[] argArray=(Object[])args;
      if (argArray.length > 0 && argArray[0] instanceof Map)       attrs=(Map)argArray[0];
      if (argArray.length > 1) {
        Object closureArg=argArray[1];
        if (closureArg instanceof Closure) {
          body=(Closure)closureArg;
        }
      }
    }
 else     if (args instanceof Map) {
      attrs=(Map)args;
    }
    if (attrs == null) {
      attrs=new HashMap();
    }
    final Closure body1=body;
    Closure actualBody=new Closure(this){
      public Object doCall(      Object obj){
        return call(new Object[]{obj});
      }
      public Object doCall(){
        return call(new Object[0]);
      }
      public Object doCall(      Object[] args){
        return call(args);
      }
      public Object call(      Object[] args){
        if (body1 != null) {
          Object bodyResponse=body1.call();
          if (bodyResponse instanceof String) {
            try {
              out.write((String)bodyResponse);
            }
 catch (            IOException e) {
              throw new GrailsTagException("I/O error invoking tag library closure [" + methodName + "] as method");
            }
          }
        }
        return null;
      }
    }
;
    if (tagLib != null) {
      tagLib.setProperty(TagLibDynamicMethods.OUT_PROPERTY,out);
      Object tagLibProp;
      try {
        tagLibProp=tagLib.getProperty(methodName);
        if (tagLibProp instanceof Closure) {
          Closure tag=(Closure)tagLibProp;
          if (tag.getParameterTypes().length == 1) {
            tag.call(new Object[]{attrs});
            if (actualBody != null) {
              actualBody.call();
            }
            return null;
          }
          if (tag.getParameterTypes().length == 2) {
            tag.call(new Object[]{attrs,actualBody});
            return null;
          }
        }
 else {
          throw new GrailsTagException("Tag [" + methodName + "] does not exist in tag library ["+ tagLib.getClass().getName()+ "]");
        }
      }
 catch (      MissingPropertyException mpe) {
        if (args instanceof Object[])         throw new MissingMethodException(methodName,GroovyPage.class,(Object[])args);
 else         throw new MissingMethodException(methodName,GroovyPage.class,new Object[]{args});
      }
    }
    throw new MissingMethodException(methodName,GroovyPage.class,new Object[]{args});
  }
}
