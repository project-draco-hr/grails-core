{
  Class<?> indexedPropertyType=null;
  if (indexedReadMethod != null) {
    Class<?> params[]=indexedReadMethod.getParameterTypes();
    if (params.length != 1) {
      throw new IntrospectionException("Bad indexed read method arg count: " + indexedReadMethod);
    }
    if (params[0] != Integer.TYPE) {
      throw new IntrospectionException("Non int index to indexed read method: " + indexedReadMethod);
    }
    indexedPropertyType=indexedReadMethod.getReturnType();
    if (indexedPropertyType == Void.TYPE) {
      throw new IntrospectionException("Indexed read method returns void: " + indexedReadMethod);
    }
  }
  if (indexedWriteMethod != null) {
    Class<?> params[]=indexedWriteMethod.getParameterTypes();
    if (params.length != 2) {
      throw new IntrospectionException("Bad indexed write method arg count: " + indexedWriteMethod);
    }
    if (params[0] != Integer.TYPE) {
      throw new IntrospectionException("Non int index to indexed write method: " + indexedWriteMethod);
    }
    if (indexedPropertyType != null) {
      if (indexedPropertyType.isAssignableFrom(params[1])) {
        indexedPropertyType=params[1];
      }
 else       if (params[1].isAssignableFrom(indexedPropertyType)) {
      }
 else {
        throw new IntrospectionException("Type mismatch between indexed read and write methods: " + indexedReadMethod + " - "+ indexedWriteMethod);
      }
    }
 else {
      indexedPropertyType=params[1];
    }
  }
  if (propertyType != null && (!propertyType.isArray() || propertyType.getComponentType() != indexedPropertyType)) {
    throw new IntrospectionException("Type mismatch between indexed and non-indexed methods: " + indexedReadMethod + " - "+ indexedWriteMethod);
  }
  return indexedPropertyType;
}
