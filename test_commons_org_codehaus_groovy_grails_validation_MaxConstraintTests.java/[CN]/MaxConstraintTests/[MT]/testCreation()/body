{
  MaxConstraint constraint=new MaxConstraint();
  assertEquals(ConstrainedProperty.MAX_CONSTRAINT,constraint.getName());
  assertTrue(constraint.supports(Integer.class));
  assertTrue(constraint.supports(Float.class));
  assertTrue(constraint.supports(BigDecimal.class));
  assertFalse(constraint.supports(List.class));
  assertFalse(constraint.supports(null));
  constraint=(MaxConstraint)getConstraint("testLong",new Long(100));
  assertEquals(new Long(100),constraint.getMaxValue());
  try {
    getConstraint("testFloat",new Object());
    fail("MaxConstraint must throw an exception for non-comparable parameters.");
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    getConstraint("testFloat",new Double(4d));
    fail("MaxConstraint must throw an exception for parameter with wrong type .");
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    getConstraint("testBigDecimal",new Integer(5));
    fail("MaxConstraint must throw an exception for parameter with wrong type .");
  }
 catch (  IllegalArgumentException iae) {
  }
}
