{
  GroovyClassLoader gcl=new GroovyClassLoader();
  final Class<?> testClass=gcl.parseClass("class Test { def prop = 'hello' }");
  GroovyObject go=(GroovyObject)testClass.newInstance();
  ProxyMetaClass pmc=ProxyMetaClass.getInstance(testClass);
  go.setMetaClass(pmc);
  pmc.setInterceptor(new PropertyAccessInterceptor(){
    public Object beforeGet(    Object object,    String property,    InvocationCallback callback){
      callback.markInvoked();
      return "success";
    }
    public void beforeSet(    Object object,    String property,    Object newValue,    InvocationCallback callback){
    }
    public Object beforeInvoke(    Object object,    String methodName,    Object[] arguments,    InvocationCallback callback){
      return null;
    }
    public Object afterInvoke(    Object object,    String methodName,    Object[] arguments,    Object result){
      return null;
    }
  }
);
  Object result=go.getProperty("prop");
  assertNotNull(result);
  assertEquals("success",result);
}
