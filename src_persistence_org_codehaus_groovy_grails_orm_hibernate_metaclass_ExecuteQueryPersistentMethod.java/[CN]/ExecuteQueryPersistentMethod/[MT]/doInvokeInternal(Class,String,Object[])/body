{
  checkMethodSignature(clazz,methodName,arguments);
  final String query=arguments[0].toString();
  final Map paginateParams=extractPaginateParams(arguments);
  final List positionalParams=extractPositionalParams(arguments);
  final Map namedParams=extractNamedParams(arguments);
  return getHibernateTemplate().executeFind(new HibernateCallback(){
    public Object doInHibernate(    Session session) throws HibernateException, SQLException {
      Query q=session.createQuery(query);
      if (paginateParams.containsKey(GrailsHibernateUtil.ARGUMENT_MAX)) {
        q.setMaxResults(((Number)paginateParams.get(GrailsHibernateUtil.ARGUMENT_MAX)).intValue());
      }
      if (paginateParams.containsKey(GrailsHibernateUtil.ARGUMENT_OFFSET)) {
        q.setFirstResult(((Number)paginateParams.remove(GrailsHibernateUtil.ARGUMENT_OFFSET)).intValue());
      }
      int index=0;
      for (Iterator iterator=positionalParams.iterator(); iterator.hasNext(); index++) {
        Object parameter=iterator.next();
        q.setParameter(index,parameter);
      }
      for (Iterator iterator=namedParams.entrySet().iterator(); iterator.hasNext(); ) {
        Map.Entry entry=(Map.Entry)iterator.next();
        if (!(entry.getKey() instanceof String))         throw new GrailsQueryException("Named parameter's name must be of type String");
        String parameterName=(String)entry.getKey();
        Object parameterValue=entry.getValue();
        if (Collection.class.isAssignableFrom(parameterValue.getClass())) {
          q.setParameterList(parameterName,(Collection)parameterValue);
        }
 else         if (parameterValue.getClass().isArray()) {
          q.setParameterList(parameterName,(Object[])parameterValue);
        }
 else         if (parameterValue instanceof GString) {
          q.setParameter(parameterName,parameterValue.toString());
        }
 else {
          q.setParameter(parameterName,parameterValue);
        }
      }
      return q.list();
    }
  }
);
}
