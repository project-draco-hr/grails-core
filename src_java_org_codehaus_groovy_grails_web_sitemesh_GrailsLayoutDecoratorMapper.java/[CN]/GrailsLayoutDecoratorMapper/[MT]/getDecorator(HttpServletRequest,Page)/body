{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Evaluating layout for request: " + request.getRequestURI());
  }
  String layoutName=page.getProperty("meta.layout");
  if (StringUtils.isBlank(layoutName)) {
    GroovyObject controller=(GroovyObject)request.getAttribute(GrailsApplicationAttributes.CONTROLLER);
    if (controller != null) {
      String controllerName=(String)controller.getProperty(ControllerDynamicMethods.CONTROLLER_NAME_PROPERTY);
      String actionUri=(String)controller.getProperty(ControllerDynamicMethods.ACTION_URI_PROPERTY);
      if (LOG.isDebugEnabled())       LOG.debug("Found controller in request, location layout for controller [" + controllerName + "] and action ["+ actionUri+ "]");
      Decorator d=null;
      Object layoutProperty=GrailsClassUtils.getStaticPropertyValue(controller.getClass(),"layout");
      if (layoutProperty instanceof String) {
        LOG.debug("layout property found in controller, looking for template named " + layoutProperty);
        d=getNamedDecorator(request,(String)layoutProperty);
      }
      if (d == null) {
        d=getNamedDecorator(request,actionUri.substring(1));
      }
      if (d != null) {
        return d;
      }
 else       if (!StringUtils.isBlank(controllerName)) {
        if (LOG.isDebugEnabled())         LOG.debug("Action layout not found, trying controller");
        d=getNamedDecorator(request,controllerName);
        if (d != null) {
          return d;
        }
 else {
          return parent != null ? super.getDecorator(request,page) : null;
        }
      }
    }
 else {
      return parent != null ? super.getDecorator(request,page) : null;
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Evaluated layout for page: " + layoutName);
  }
  Decorator d=getNamedDecorator(request,layoutName);
  if (d != null) {
    return d;
  }
 else {
    return parent != null ? super.getDecorator(request,page) : null;
  }
}
