{
  if (settings.getRootLoader() == null) {
    settings.setRootLoader((URLClassLoader)GrailsScriptRunner.class.getClassLoader());
  }
  boolean useDefaultEnv=env == null;
  if (useDefaultEnv) {
    env=(String)DEFAULT_ENVS.get(scriptName);
    env=env != null ? env : Environment.DEVELOPMENT.getName();
  }
  System.setProperty("base.dir",settings.getBaseDir().getPath());
  System.setProperty(Environment.KEY,env);
  System.setProperty(Environment.DEFAULT,"true");
  if (args != null) {
    String[] argArray=args.split("\\s+");
    Pattern pattern=Pattern.compile("^(?:-)?-non-interactive$");
    for (    String arg : argArray) {
      if (pattern.matcher(arg).matches()) {
        isInteractive=false;
        break;
      }
    }
    System.setProperty("grails.cli.args",args.replace(' ','\n'));
  }
 else {
    System.setProperty("grails.cli.args","");
  }
  settings.loadConfig();
  settings.setGrailsEnv(env);
  settings.setDefaultEnv(useDefaultEnv);
  BuildSettingsHolder.setSettings(settings);
  if (scriptName.equalsIgnoreCase("interactive")) {
    if (!isInteractive) {
      out.println("You cannot use '--non-interactive' with interactive mode.");
      return 1;
    }
    runInteractive();
    return 0;
  }
 else {
    return callPluginOrGrailsScript(scriptName);
  }
}
