{
  checkInitialised();
  MetaClassRegistry registry=GroovySystem.getMetaClassRegistry();
  for (int i=0; i < COMMON_CLASSES.length; i++) {
    Class commonClass=COMMON_CLASSES[i];
    registry.removeMetaClass(commonClass);
  }
  for (Iterator i=pluginList.iterator(); i.hasNext(); ) {
    GrailsPlugin plugin=(GrailsPlugin)i.next();
    if (plugin.supportsCurrentScopeAndEnvironment()) {
      try {
        plugin.doWithDynamicMethods(applicationContext);
      }
 catch (      Throwable t) {
        GrailsUtil.deepSanitize(t);
        LOG.error("Error configuring dynamic methods for plugin " + plugin + ": "+ t.getMessage(),t);
      }
    }
  }
}
