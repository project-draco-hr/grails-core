{
  String propertyColumnName=namingStrategy.propertyToColumnName(property.getName());
  PropertyConfig config=getPropertyConfig(property);
  JoinTable jt=config != null ? config.getJoinTable() : null;
  boolean hasJoinTableMapping=jt != null && jt.getName() != null;
  String left=getTableName(property.getDomainClass());
  if (Map.class.isAssignableFrom(property.getType())) {
    if (hasJoinTableMapping) {
      return jt.getName();
    }
 else {
      return left + UNDERSCORE + propertyColumnName;
    }
  }
 else {
    if (property.isBasicCollectionType()) {
      if (hasJoinTableMapping) {
        return jt.getName();
      }
 else {
        return left + UNDERSCORE + propertyColumnName;
      }
    }
 else {
      String right=getTableName(property.getReferencedDomainClass());
      if (property.isManyToMany()) {
        if (hasJoinTableMapping) {
          return jt.getName();
        }
        if (property.isOwningSide()) {
          return left + UNDERSCORE + propertyColumnName;
        }
 else {
          return right + UNDERSCORE + namingStrategy.propertyToColumnName(property.getOtherSide().getName());
        }
      }
 else {
        if (shouldCollectionBindWithJoinColumn(property)) {
          if (hasJoinTableMapping) {
            return jt.getName();
          }
          left=trimBackTigs(left);
          right=trimBackTigs(right);
          return left + UNDERSCORE + right;
        }
        if (property.isOwningSide()) {
          return left + UNDERSCORE + right;
        }
 else {
          return right + UNDERSCORE + left;
        }
      }
    }
  }
}
