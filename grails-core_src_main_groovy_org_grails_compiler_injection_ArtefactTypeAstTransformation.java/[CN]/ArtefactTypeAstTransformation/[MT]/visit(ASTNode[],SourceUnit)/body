{
  AnnotatedNode parent=(AnnotatedNode)astNodes[1];
  AnnotationNode node=(AnnotationNode)astNodes[0];
  if (!(node instanceof AnnotationNode) || !(parent instanceof AnnotatedNode)) {
    throw new RuntimeException("Internal error: wrong types: $node.class / $parent.class");
  }
  if (!isArtefactAnnotationNode(node) || !(parent instanceof ClassNode)) {
    return;
  }
  ClassNode cNode=(ClassNode)parent;
  if (cNode.isInterface()) {
    throw new RuntimeException("Error processing interface '" + cNode.getName() + "'. @"+ getAnnotationType().getNameWithoutPackage()+ " not allowed for interfaces.");
  }
  if (isApplied(cNode)) {
    return;
  }
  String artefactType=resolveArtefactType(sourceUnit,node,cNode);
  performInjectionOnArtefactType(sourceUnit,cNode,artefactType);
  performTraitInjectionOnArtefactType(sourceUnit,cNode,artefactType);
  postProcess(sourceUnit,node,cNode,artefactType);
  markApplied(cNode);
}
