{
  bindCollectionSecondPass(property,mappings,persistentClasses,map,inheritedMetas);
  String columnName=namingStrategy.propertyToColumnName(property.getName());
  SimpleValue value=new SimpleValue(map.getCollectionTable());
  bindSimpleValue(STRING_TYPE,value,false,columnName + '_' + IndexedCollection.DEFAULT_INDEX_COLUMN_NAME,mappings);
  if (!value.isTypeSpecified()) {
    throw new MappingException("map index element must specify a type: " + map.getRole());
  }
  map.setIndex(value);
  if (!property.isOneToMany()) {
    SimpleValue elt=new SimpleValue(map.getCollectionTable());
    map.setElement(elt);
    map.setInverse(false);
    bindSimpleValue(STRING_TYPE,elt,false,columnName + '_' + IndexedCollection.DEFAULT_ELEMENT_COLUMN_NAME,mappings);
    elt.setTypeName(STRING_TYPE);
  }
 else {
    String entityName=((OneToMany)map.getElement()).getReferencedEntityName();
    PersistentClass referenced=mappings.getClass(entityName);
    IndexBackref ib=new IndexBackref();
    ib.setName('_' + property.getName() + "IndexBackref");
    ib.setUpdateable(false);
    ib.setSelectable(false);
    ib.setCollectionRole(map.getRole());
    ib.setEntityName(map.getOwner().getEntityName());
    ib.setValue(map.getIndex());
    referenced.addProperty(ib);
  }
}
