{
  ScriptAndArgs info=new ScriptAndArgs();
  if (allArgs == null || allArgs.length() == 0)   return info;
  String[] splitArgs=processSystemArguments(allArgs).trim().split(" ");
  int currentParamIndex=0;
  if (Environment.isSystemSet()) {
    info.env=Environment.getCurrent().getName();
  }
 else   if (isEnvironmentArgs(splitArgs[currentParamIndex])) {
    String env=splitArgs[currentParamIndex++];
    info.env=ENV_ARGS.get(env);
  }
  abortIfOutOfBounds(splitArgs,currentParamIndex);
  String paramName=splitArgs[currentParamIndex++];
  if (paramName.equals("-verbose")) {
    GrailsConsole.getInstance().setVerbose(true);
    abortIfOutOfBounds(splitArgs,currentParamIndex);
    paramName=splitArgs[currentParamIndex++];
  }
  if (paramName.charAt(0) == '-') {
    paramName=paramName.substring(1);
  }
  info.inputName=paramName;
  info.name=GrailsNameUtils.getNameFromScript(paramName);
  if (currentParamIndex < splitArgs.length) {
    StringBuilder b=new StringBuilder(splitArgs[currentParamIndex]);
    for (int i=currentParamIndex + 1; i < splitArgs.length; i++) {
      b.append(' ').append(splitArgs[i]);
    }
    info.args=b.toString();
  }
  return info;
}
