{
  if (arguments.length == 0)   throw new MissingMethodException(METHOD_SIGNATURE,clazz,arguments);
  Object arg1=arguments[0];
  Object arg2=arguments.length > 1 ? arguments[1] : null;
  if (!(arg1 instanceof Closure && arg2 == null) && !((arg1 instanceof Map) && (arg2 instanceof Closure)))   throw new MissingMethodException(METHOD_SIGNATURE,clazz,arguments);
  HibernateCriteriaBuilder builder=new HibernateCriteriaBuilder(clazz,getHibernateTemplate().getSessionFactory());
  Closure callable=arg1 instanceof Closure ? (Closure)arg1 : (Closure)arg2;
  if (arg1 instanceof Map) {
    BeanWrapper builderBean=new BeanWrapperImpl(builder);
    Map args=(Map)arg1;
    for (Iterator i=args.keySet().iterator(); i.hasNext(); ) {
      String name=(String)i.next();
      if (builderBean.isWritableProperty(name)) {
        builderBean.setPropertyValue(name,args.get(i));
      }
    }
  }
  return builder.invokeMethod("doCall",callable);
}
