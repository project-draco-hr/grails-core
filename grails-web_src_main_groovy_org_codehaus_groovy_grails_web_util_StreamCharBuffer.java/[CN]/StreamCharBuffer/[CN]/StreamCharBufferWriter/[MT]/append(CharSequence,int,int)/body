{
  markUsed();
  if (csq == null) {
    write("null");
  }
 else {
    if (csq instanceof String || csq instanceof StringBuffer || csq instanceof StringBuilder) {
      int len=end - start;
      int charsLeft=len;
      int currentOffset=start;
      while (charsLeft > 0) {
        int spaceLeft=allocateSpace();
        int writeChars=Math.min(spaceLeft,charsLeft);
        if (csq instanceof String) {
          allocBuffer.writeString((String)csq,currentOffset,writeChars);
        }
 else         if (csq instanceof StringBuffer) {
          allocBuffer.writeStringBuffer((StringBuffer)csq,currentOffset,writeChars);
        }
 else         if (csq instanceof StringBuilder) {
          allocBuffer.writeStringBuilder((StringBuilder)csq,currentOffset,writeChars);
        }
        charsLeft-=writeChars;
        currentOffset+=writeChars;
      }
    }
 else {
      write(csq.subSequence(start,end).toString());
    }
  }
  return this;
}
