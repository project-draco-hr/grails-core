{
  Object[] args=new Object[]{constraintPropertyName,constraintOwningClass,propertyValue,new Integer(maxSize)};
  if (propertyValue == null) {
    return;
  }
 else   if (propertyValue.getClass().isArray()) {
    int length=Array.getLength(propertyValue);
    if (length > maxSize) {
      super.rejectValue(errors,MAX_LENGTH_CONSTRAINT + EXCEEDED_SUFFIX,args,getDefaultMessage(DEFAULT_INVALID_MAX_LENGTH_MESSAGE_CODE,args));
    }
  }
 else   if (propertyValue instanceof Collection) {
    if (((Collection)propertyValue).size() > maxSize) {
      super.rejectValue(errors,MAX_SIZE_CONSTRAINT + EXCEEDED_SUFFIX,args,getDefaultMessage(DEFAULT_INVALID_MAX_SIZE_MESSAGE_CODE,args));
    }
  }
 else   if (propertyValue instanceof Number) {
    int numberSize=((Number)propertyValue).intValue();
    if (numberSize > maxSize) {
      super.rejectValue(errors,MAX_SIZE_CONSTRAINT + EXCEEDED_SUFFIX,args,getDefaultMessage(DEFAULT_INVALID_MAX_SIZE_MESSAGE_CODE,args));
    }
  }
 else   if (propertyValue instanceof String) {
    if (((String)propertyValue).length() > maxSize) {
      super.rejectValue(errors,MAX_LENGTH_CONSTRAINT + EXCEEDED_SUFFIX,args,getDefaultMessage(DEFAULT_INVALID_MAX_LENGTH_MESSAGE_CODE,args));
    }
  }
}
