{
  if (shouldShowGroovySource(outputContext)) {
    outputContext.setContentType(GROOVY_SOURCE_CONTENT_TYPE);
    writeGroovySourceToResponse(metaInfo,out);
  }
 else {
    boolean debugTemplates=shouldDebugTemplates(outputContext);
    if (metaInfo.getCompilationException() != null) {
      throw metaInfo.getCompilationException();
    }
    AbstractTemplateVariableBinding parentBinding=null;
    boolean hasRequest=outputContext != null;
    boolean newParentCreated=false;
    if (hasRequest) {
      parentBinding=outputContext.getBinding();
      if (parentBinding == null) {
        parentBinding=outputContext.createAndRegisterRootBinding();
        newParentCreated=true;
      }
    }
    if (allowSettingContentType && hasRequest) {
      boolean contentTypeAlreadySet=outputContext.isContentTypeAlreadySet();
      if (!contentTypeAlreadySet) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Writing output with content type: " + metaInfo.getContentType());
        }
        outputContext.setContentType(metaInfo.getContentType());
      }
    }
    GroovyPageBinding binding=createBinding(parentBinding);
    if (hasRequest) {
      outputContext.setBinding(binding);
    }
    GroovyPage page=null;
    try {
      page=(GroovyPage)metaInfo.getPageClass().newInstance();
    }
 catch (    Exception e) {
      throw new GroovyPagesException("Problem instantiating page class",e);
    }
    page.setBinding(binding);
    binding.setOwner(page);
    page.initRun(out,outputContext,metaInfo);
    int debugId=0;
    long debugStartTimeMs=0;
    if (debugTemplates) {
      debugId=incrementAndGetDebugTemplatesIdCounter(outputContext);
      out.write("<!-- GSP #");
      out.write(String.valueOf(debugId));
      out.write(" START template: ");
      out.write(page.getGroovyPageFileName());
      out.write(" precompiled: ");
      out.write(String.valueOf(metaInfo.isPrecompiledMode()));
      out.write(" lastmodified: ");
      out.write(DateFormat.getDateTimeInstance(DateFormat.SHORT,DateFormat.SHORT).format(new Date(metaInfo.getLastModified())));
      out.write(" -->");
      debugStartTimeMs=System.currentTimeMillis();
    }
    try {
      page.run();
    }
  finally {
      page.cleanup();
      if (hasRequest) {
        if (newParentCreated) {
          outputContext.setBinding(null);
        }
 else {
          outputContext.setBinding(parentBinding);
        }
      }
    }
    if (debugTemplates) {
      out.write("<!-- GSP #");
      out.write(String.valueOf(debugId));
      out.write(" END template: ");
      out.write(page.getGroovyPageFileName());
      out.write(" rendering time: ");
      out.write(String.valueOf(System.currentTimeMillis() - debugStartTimeMs));
      out.write(" ms -->");
    }
  }
  return out;
}
