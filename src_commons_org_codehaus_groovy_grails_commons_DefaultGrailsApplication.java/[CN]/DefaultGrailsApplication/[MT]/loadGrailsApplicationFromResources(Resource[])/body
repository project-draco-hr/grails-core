{
  GrailsResourceHolder resourceHolder=new GrailsResourceHolder();
  this.cl=configureClassLoader(resourceLoader);
  Collection loadedResources=new ArrayList();
  this.loadedClasses=new HashSet();
  try {
    for (int i=0; resources != null && i < resources.length; i++) {
      if (!loadedResources.contains(resources[i])) {
        try {
          String className=resourceHolder.getClassName(resources[i]);
          log.debug("Loading groovy file from resource loader :[" + resources[i].getFile().getAbsolutePath() + "] with name ["+ className+ "]");
          if (!StringUtils.isBlank(className)) {
            Class c=cl.loadClass(className,true,false);
            Assert.notNull(c,"Groovy Bug! GCL loadClass method returned a null class!");
            loadedClasses.add(c);
            log.debug("Added Groovy class [" + c + "] to loaded classes");
            loadedResources=resourceLoader.getLoadedResources();
          }
        }
 catch (        ClassNotFoundException e) {
          log.error("Class not found attempting to load class " + e.getMessage(),e);
        }
      }
 else {
        Class c=null;
        try {
          log.debug("Loading groovy file from class loader :[" + resources[i].getFile().getAbsolutePath() + "]");
          c=cl.loadClass(resourceHolder.getClassName(resources[i]));
        }
 catch (        ClassNotFoundException e) {
          log.error("Class not found attempting to load class " + e.getMessage(),e);
        }
        if (c != null)         loadedClasses.add(c);
        log.debug("Added Groovy class [" + c + "] to loaded classes");
      }
    }
  }
 catch (  CompilationFailedException e) {
    if (GrailsUtil.isDevelopmentEnv()) {
      log.fatal("Compilation error loading Grails application: " + e.getMessage(),e);
      System.exit(1);
    }
 else {
      throw e;
    }
  }
}
