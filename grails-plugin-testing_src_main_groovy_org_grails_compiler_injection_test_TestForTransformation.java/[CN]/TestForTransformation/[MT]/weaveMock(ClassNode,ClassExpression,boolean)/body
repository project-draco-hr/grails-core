{
  ClassNode testTarget=value.getType();
  String className=testTarget.getName();
  MethodNode testForMethod=null;
  for (  String artefactType : artefactTypeToTestMap.keySet()) {
    if (className.endsWith(artefactType)) {
      Class mixinClass=artefactTypeToTestMap.get(artefactType);
      if (!isAlreadyWoven(classNode,mixinClass)) {
        weaveMixinClass(classNode,mixinClass);
        if (isClassUnderTest) {
          testForMethod=addClassUnderTestMethod(classNode,value,artefactType);
        }
 else {
          addMockCollaboratorToSetup(classNode,value,artefactType);
        }
        return testForMethod;
      }
      addMockCollaboratorToSetup(classNode,value,artefactType);
      return null;
    }
  }
  Class<?> domainClassPresent=null;
  try {
    domainClassPresent=Class.forName("org.grails.plugins.domain.DomainClassGrailsPlugin",true,TestForTransformation.class.getClassLoader());
  }
 catch (  ClassNotFoundException e) {
  }
catch (  NoClassDefFoundError e) {
  }
  if (domainClassPresent != null) {
    weaveMixinClass(classNode,DomainClassUnitTestMixin.class);
    if (isClassUnderTest) {
      testForMethod=addClassUnderTestMethod(classNode,value,DOMAIN_TYPE);
    }
 else {
      addMockCollaboratorToSetup(classNode,value,DOMAIN_TYPE);
    }
    return testForMethod;
  }
  return null;
}
