{
  if (!finalPass)   return;
  if (LOG.isDebugEnabled())   LOG.debug("parse: html");
  String text=scan.getToken();
  if (Pattern.compile("\\S").matcher(text).find())   bufferWhiteSpace=false;
  StringWriter sw=new StringWriter();
  PrintWriter pw=new PrintWriter(sw);
  String[] lines=text.split("\\n");
  if (lines.length == 1 && !StringUtils.isBlank(lines[0])) {
    out.printlnToResponse('\'' + escapeGroovy(lines[0]) + '\'');
  }
 else {
    pw.print(START_MULTILINE_STRING);
    boolean hasContent=false;
    boolean firstLine=true;
    for (int i=0; i < lines.length; i++) {
      String line=lines[i];
      final String content=escapeGroovy(line);
      if (!StringUtils.isEmpty(content)) {
        if (!hasContent) {
          hasContent=true;
          break;
        }
      }
    }
    if (hasContent) {
      for (int i=0; i < lines.length; i++) {
        String line=lines[i];
        final String content=escapeGroovy(line);
        if (firstLine) {
          pw.print(content);
          firstLine=false;
        }
 else {
          pw.println();
          pw.print(content);
        }
      }
    }
    pw.print(END_MULTILINE_STRING);
    pw.println();
    if (hasContent && !bufferWhiteSpace) {
      final String constantValue=sw.toString();
      final String constantName="STATIC_HTML_CONTENT_" + constantCount++;
      constants.put(constantName,constantValue);
      out.printlnToResponse(constantName);
    }
  }
}
