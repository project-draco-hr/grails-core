{
  if (isSpockTest(classNode))   return;
  Map<String,MethodNode> declaredMethodsMap=classNode.getDeclaredMethodsMap();
  for (  String methodName : declaredMethodsMap.keySet()) {
    MethodNode methodNode=declaredMethodsMap.get(methodName);
    ClassNode testAnnotationClassNode=TEST_ANNOTATION.getClassNode();
    List<AnnotationNode> existingTestAnnotations=methodNode.getAnnotations(testAnnotationClassNode);
    if (isCandidateMethod(methodNode) && (methodNode.getName().startsWith("test") || existingTestAnnotations.size() > 0)) {
      if (existingTestAnnotations.size() == 0) {
        ClassNode returnType=methodNode.getReturnType();
        if (returnType.getName().equals(VOID_TYPE)) {
          methodNode.addAnnotation(TEST_ANNOTATION);
        }
      }
    }
  }
}
