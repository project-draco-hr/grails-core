{
  Parameter[] parameterTypes=declaredMethod.getParameters();
  String declaredMethodName=declaredMethod.getName();
  if (!classNode.hasDeclaredMethod(declaredMethodName,parameterTypes)) {
    BlockStatement methodBody=new BlockStatement();
    ArgumentListExpression arguments=new ArgumentListExpression();
    for (    Parameter parameterType : parameterTypes) {
      arguments.addExpression(new VariableExpression(parameterType.getName()));
    }
    MethodCallExpression methodCallExpression=new MethodCallExpression(expression,declaredMethodName,arguments);
    methodCallExpression.setMethodTarget(declaredMethod);
    methodBody.addStatement(new ExpressionStatement(methodCallExpression));
    ClassNode returnType=nonGeneric(declaredMethod.getReturnType());
    if (METHOD_MISSING_METHOD_NAME.equals(declaredMethodName)) {
      declaredMethodName=STATIC_METHOD_MISSING_METHOD_NAME;
    }
    MethodNode methodNode=new MethodNode(declaredMethodName,Modifier.PUBLIC | Modifier.STATIC,returnType,copyParameters(parameterTypes),GrailsArtefactClassInjector.EMPTY_CLASS_ARRAY,methodBody);
    methodNode.addAnnotations(declaredMethod.getAnnotations());
    classNode.addMethod(methodNode);
  }
}
