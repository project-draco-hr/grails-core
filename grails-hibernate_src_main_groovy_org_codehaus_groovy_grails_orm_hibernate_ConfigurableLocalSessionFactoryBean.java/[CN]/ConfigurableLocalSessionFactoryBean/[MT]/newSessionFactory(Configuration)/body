{
  configurePostProcessors(configuration);
  try {
    SessionFactory sf=super.newSessionFactory(configuration);
    if (!grails.util.Environment.getCurrent().isReloadEnabled() || !proxyIfReloadEnabled) {
      return sf;
    }
    SessionFactoryProxy sfp=new SessionFactoryProxy();
    String suffix=dataSourceName.equals(GrailsDomainClassProperty.DEFAULT_DATA_SOURCE) ? "" : '_' + dataSourceName;
    SessionFactoryHolder sessionFactoryHolder=applicationContext.getBean(SessionFactoryHolder.BEAN_ID + suffix,SessionFactoryHolder.class);
    sessionFactoryHolder.setSessionFactory(sf);
    sfp.setApplicationContext(applicationContext);
    sfp.setCurrentSessionContextClass(currentSessionContextClass);
    sfp.setTargetBean(SessionFactoryHolder.BEAN_ID + suffix);
    sfp.afterPropertiesSet();
    return sfp;
  }
 catch (  HibernateException e) {
    Throwable cause=e.getCause();
    if (isCacheConfigurationError(cause)) {
      LOG.fatal("There was an error configuring the Hibernate second level cache: " + getCauseMessage(e));
      LOG.fatal("This is normally due to one of two reasons. Either you have incorrectly specified the cache provider class name in [DataSource.groovy] or you do not have the cache provider on your classpath (eg. runtime (\"net.sf.ehcache:ehcache:1.6.1\"))");
      if (grails.util.Environment.isDevelopmentMode()) {
        System.exit(1);
      }
    }
    throw e;
  }
}
