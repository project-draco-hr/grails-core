{
  ExpandoMetaClass.enableGlobally();
  GroovyClassLoader cl=new GroovyClassLoader();
  Class<?> testControllerClass=cl.parseClass("class TestController {\n" + " Closure test = {\n" + "return [ \"test\" : \"123\" ]\n"+ "}\n"+ "}");
  Class<?> simpleControllerClass=cl.parseClass("class SimpleController {\n" + " Closure test = {\n" + "}\n"+ "}");
  Class<?> restrictedControllerClass=cl.parseClass("class RestrictedController {\n" + "static allowedMethods=[action1:'POST', action3:['PUT', 'DELETE'], action4: 'pOsT', action5: ['pUt', 'DeLeTe']]\n" + "def action1 = {}\n"+ "def action2 = {}\n"+ "def action3 = {}\n"+ "def action4 = {}\n"+ "def action5 = {}\n"+ "}");
  Thread.currentThread().setContextClassLoader(cl);
  localContext=new GenericApplicationContext();
  ConstructorArgumentValues args=new ConstructorArgumentValues();
  args.addGenericArgumentValue(new Class[]{testControllerClass,simpleControllerClass,restrictedControllerClass});
  args.addGenericArgumentValue(cl);
  MutablePropertyValues propValues=new MutablePropertyValues();
  BeanDefinition grailsApplicationBean=new RootBeanDefinition(DefaultGrailsApplication.class,args,propValues);
  localContext.registerBeanDefinition("grailsApplication",grailsApplicationBean);
  localContext.refresh();
  grailsApplication=(GrailsApplication)localContext.getBean("grailsApplication");
  GrailsRuntimeConfigurator rConfig=new GrailsRuntimeConfigurator(grailsApplication,localContext);
  MockServletContext servletContext=new MockServletContext();
  appCtx=(ConfigurableApplicationContext)rConfig.configure(servletContext);
  controller=(SimpleGrailsController)appCtx.getBean("mainSimpleController");
  servletContext.setAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT,appCtx);
  assertNotNull(appCtx);
  super.setUp();
}
