{
  TestResult result=new TestResult();
  GrailsConsoleResultFormatter consoleFormatter=new GrailsConsoleResultFormatter();
  consoleFormatter.setOutput(System.out);
  result.addListener(consoleFormatter);
  for (Enumeration tests=suite.tests(); tests.hasMoreElements(); ) {
    TestSuite test=(TestSuite)tests.nextElement();
    JUnitTest junitTest=new JUnitTest(test.getName());
    JUnitReports reports=(JUnitReports)reportsFactory.createReports(test.getName());
    try {
      result.addListener(reports);
      consoleFormatter.startTestSuite(junitTest);
      reports.startTestSuite(junitTest);
      long start=System.currentTimeMillis();
      int runCount=result.runCount();
      int failureCount=result.failureCount();
      int errorCount=result.errorCount();
      outAndErrSwapper.swapIn();
      for (int i=0; i < test.testCount(); i++) {
        TestCase t=(TestCase)test.testAt(i);
        System.out.println("--Output from " + t.getName() + "--");
        System.err.println("--Output from " + t.getName() + "--");
        test.runTest(t,result);
      }
      junitTest.setCounts(result.runCount() - runCount,result.failureCount() - failureCount,result.errorCount() - errorCount);
      junitTest.setRunTime(System.currentTimeMillis() - start);
    }
  finally {
      List<OutputStream> outAndErr=outAndErrSwapper.swapOut();
      reports.setSystemOutput(outAndErr.get(0).toString());
      reports.setSystemError(outAndErr.get(1).toString());
      reports.endTestSuite(junitTest);
      consoleFormatter.endTestSuite(junitTest);
    }
    result.removeListener(reports);
  }
  return result;
}
