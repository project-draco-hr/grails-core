{
  assertNotNull(this.sessionFactory);
  GrailsDomainClass[] domainClasses=grailsApplication.getGrailsDomainClasses();
  assertEquals(7,domainClasses.length);
  HibernateTemplate template=new HibernateTemplate(this.sessionFactory);
  GroovyObject obj=(GroovyObject)grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.Test1").newInstance();
  assertNotNull(obj);
  obj.setProperty("firstName","Joe");
  obj.setProperty("id",new Long(1));
  template.save(obj);
  obj=(GroovyObject)template.execute(new HibernateCallback(){
    public Object doInHibernate(    Session session) throws HibernateException, SQLException {
      List results=session.createQuery("from org.codehaus.groovy.grails.domain.Test1 where id = '1'").list();
      if (results.size() > 0) {
        return results.get(0);
      }
      return null;
    }
  }
);
  assertNotNull(obj);
  assertEquals("Joe",obj.getProperty("firstName"));
  GroovyObject parent=(GroovyObject)grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.RelationshipsTest").newInstance();
  GroovyObject child=(GroovyObject)grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.OneToOneTest").newInstance();
  assertNotNull(child);
  parent.setProperty("one",child);
  template.save(parent);
  GrailsDomainClass one2ManyDomain=grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.RelationshipsTest");
  GroovyObject one2many=(GroovyObject)one2ManyDomain.newInstance();
  child=(GroovyObject)grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.UniOneToManyTest").newInstance();
  assertNotNull(child);
  Set set=new HashSet();
  one2many.setProperty("uniones",set);
  ((Set)one2many.getProperty("uniones")).add(child);
  template.save(one2many);
  template.evict(one2many);
  one2many=null;
  one2many=(GroovyObject)template.get(one2ManyDomain.getClazz(),new Long(2));
  assertNotNull(one2many);
  set=(Set)one2many.getProperty("uniones");
  assertNotNull(set);
  assertEquals(1,set.size());
  one2ManyDomain=grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.RelationshipsTest");
  one2many=(GroovyObject)one2ManyDomain.newInstance();
  child=(GroovyObject)grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.OneToManyTest2").newInstance();
  assertNotNull(child);
  template.save(one2many);
  child.setProperty("other",one2many);
  template.save(child);
  template.evict(one2many);
  one2many=null;
  one2many=(GroovyObject)template.get(one2ManyDomain.getClazz(),new Long(3));
  assertNotNull(one2many);
  set=(Set)one2many.getProperty("ones");
  assertNotNull(set);
  assertEquals(1,set.size());
  one2ManyDomain=grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.RelationshipsTest");
  one2many=(GroovyObject)one2ManyDomain.newInstance();
  GroovyObject many2one=(GroovyObject)grailsApplication.getGrailsDomainClass("org.codehaus.groovy.grails.domain.OneToManyTest2").newInstance();
  assertNotNull(many2one);
  set=new HashSet();
  one2many.setProperty("ones",set);
  template.save(one2many);
  many2one.setProperty("other",one2many);
  template.save(many2one);
  template.refresh(one2many);
  assertNotNull(one2many);
  set=(Set)one2many.getProperty("ones");
  assertNotNull(set);
  assertEquals(1,set.size());
}
