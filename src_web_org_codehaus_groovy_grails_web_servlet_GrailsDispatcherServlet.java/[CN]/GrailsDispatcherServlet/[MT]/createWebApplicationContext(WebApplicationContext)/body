{
  ApplicationContext grailsContext=(ApplicationContext)getServletContext().getAttribute(GrailsRequestAttributes.APPLICATION_CONTEXT);
  GrailsApplication application;
  WebApplicationContext webContext;
  if (grailsContext != null) {
    XmlWebApplicationContext xmlContext=new XmlWebApplicationContext();
    xmlContext.setParent(grailsContext);
    webContext=xmlContext;
    application=(GrailsApplication)webContext.getBean(GrailsApplication.APPLICATION_ID,GrailsApplication.class);
  }
 else {
    String[] locations=null;
    if (null != getContextConfigLocation()) {
      locations=StringUtils.tokenizeToStringArray(getContextConfigLocation(),ConfigurableWebApplicationContext.CONFIG_LOCATION_DELIMITERS);
    }
    application=(GrailsApplication)parent.getBean(GrailsApplication.APPLICATION_ID,GrailsApplication.class);
    SpringConfig springConfig=new SpringConfig(application);
    webContext=new XmlWebApplicationContextDriver().getWebApplicationContext(springConfig.getBeanReferences(),parent,getServletContext(),getNamespace(),locations);
    getServletContext().setAttribute(GrailsRequestAttributes.APPLICATION_CONTEXT,webContext);
  }
  GrailsBootstrapClass[] bootstraps=application.getGrailsBootstrapClasses();
  for (int i=0; i < bootstraps.length; i++) {
    bootstraps[i].callInit(getServletContext());
  }
  return webContext;
}
