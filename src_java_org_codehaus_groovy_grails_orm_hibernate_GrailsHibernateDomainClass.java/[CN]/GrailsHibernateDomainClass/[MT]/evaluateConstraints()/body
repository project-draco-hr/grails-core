{
  Map existing=(Map)getPropertyOrStaticPropertyOrFieldValue(GrailsDomainClassProperty.CONSTRAINTS,Map.class);
  if (existing == null) {
    Object instance=getReferenceInstance();
    try {
      DynamicMethods interceptor=new AbstractDynamicMethodsInterceptor(){
      }
;
      interceptor.addDynamicProperty(new ConstraintsEvaluatingDynamicProperty());
      MetaClassRegistry metaRegistry=GroovySystem.getMetaClassRegistry();
      MetaClass meta=metaRegistry.getMetaClass(instance.getClass());
      try {
        ProxyMetaClass pmc=new ProxyMetaClass(metaRegistry,instance.getClass(),meta);
        pmc.setInterceptor((Interceptor)interceptor);
        this.constraints=(Map)pmc.getProperty(getClazz(),instance,GrailsDomainClassProperty.CONSTRAINTS,false,false);
      }
  finally {
        metaRegistry.setMetaClass(instance.getClass(),meta);
      }
    }
 catch (    IntrospectionException e) {
      LOG.error("Introspection error reading domain class [" + getFullName() + "] constraints: "+ e.getMessage(),e);
    }
  }
 else {
    this.constraints=existing;
  }
}
