{
  Collection classMetaData=sf.getAllClassMetadata().values();
  for (Iterator i=classMetaData.iterator(); i.hasNext(); ) {
    ClassMetadata cmd=(ClassMetadata)i.next();
    Class persistentClass=cmd.getMappedClass(EntityMode.POJO);
    if (application != null && persistentClass != null) {
      GrailsDomainClass dc=application.getGrailsDomainClass(persistentClass.getName());
      if (dc == null) {
        dc=application.addDomainClass(new GrailsHibernateDomainClass(persistentClass,sf,cmd));
      }
      LOG.info("[GrailsDomainConfiguration] Registering dynamic methods on class [" + persistentClass + "]");
      try {
        DynamicMethods dm=new DomainClassMethods(application,persistentClass,sf,application.getClassLoader());
        for (int j=0; j < dc.getPersistantProperties().length; j++) {
          GrailsDomainClassProperty p=dc.getPersistantProperties()[j];
          if (p.isOneToMany() || p.isManyToMany()) {
            dm.addDynamicMethodInvocation(new AddRelatedDynamicMethod(p));
          }
        }
      }
 catch (      IntrospectionException e) {
        LOG.warn("[GrailsDomainConfiguration] Introspection exception registering dynamic methods for [" + persistentClass + "]:"+ e.getMessage(),e);
      }
    }
  }
}
