{
  if (LOG.isTraceEnabled()) {
    LOG.trace("Registering dynamic methods on class [" + persistentClass + "]");
  }
  DynamicMethods dm=null;
  try {
    dm=new DomainClassMethods(application,persistentClass,sessionFactory,application.getClassLoader());
    dm.addDynamicMethodInvocation(new AddToRelatedDynamicMethod(dc));
    for (int j=0; j < dc.getPersistantProperties().length; j++) {
      GrailsDomainClassProperty p=dc.getPersistantProperties()[j];
      if (p.isOneToMany() || p.isManyToMany()) {
        dm.addDynamicMethodInvocation(new AddRelatedDynamicMethod(p));
      }
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Metaclass for persistent class [" + persistentClass + "]: "+ InvokerHelper.getInstance().getMetaRegistry().getMetaClass(persistentClass));
    }
  }
 catch (  IntrospectionException e) {
    LOG.warn("Introspection exception registering dynamic methods for [" + persistentClass + "]:"+ e.getMessage(),e);
  }
  return dm;
}
