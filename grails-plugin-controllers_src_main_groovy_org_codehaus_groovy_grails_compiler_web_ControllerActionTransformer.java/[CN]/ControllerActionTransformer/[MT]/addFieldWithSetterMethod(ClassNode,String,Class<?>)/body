{
  final FieldNode existingFieldNode=classNode.getField(fieldName);
  final ClassNode fieldTypeClassNode=new ClassNode(fieldType);
  if (existingFieldNode == null) {
    classNode.addField(fieldName,Modifier.PRIVATE,fieldTypeClassNode,new ConstantExpression(null));
  }
  final String methodArgumentName="setterArgumentName";
  final String setterMethodName=GrailsNameUtils.getSetterName(fieldName);
  MethodNode setterMethod=classNode.getMethod(setterMethodName,new Parameter[]{new Parameter(fieldTypeClassNode,methodArgumentName)});
  if (setterMethod == null) {
    final BinaryExpression assignArgumentToFieldExpression=new BinaryExpression(new VariableExpression(fieldName),Token.newSymbol(Types.EQUALS,0,0),new VariableExpression(methodArgumentName));
    setterMethod=new MethodNode(setterMethodName,Modifier.PUBLIC,ClassHelper.VOID_TYPE,new Parameter[]{new Parameter(fieldTypeClassNode,methodArgumentName)},EMPTY_CLASS_ARRAY,new ExpressionStatement(assignArgumentToFieldExpression));
    classNode.addMethod(setterMethod);
  }
}
