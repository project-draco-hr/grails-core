{
  GroovyClassLoader gcl=new GroovyClassLoader();
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.setCharacterEncoding("utf-8");
  MockHttpServletResponse response=new MockHttpServletResponse();
  request.addParameter("testParam","testValue");
  Class groovyClass=gcl.parseClass("class TestController {\n" + "def next = {\n" + "return ['success':this.params['testParam2']]"+ "}\n"+ "def list = {\n"+ "redirect(action:next,params:['testParam2':'testValue2'])\n"+ "}\n"+ "}");
  Class secondController=gcl.parseClass("class SecondController {\n" + "def list = {\n" + "return redirect(action:'test/list',params:['testParam2':'testValue2'])\n"+ "}\n"+ "}");
  GrailsApplication application=createGrailsApplication(new Class[]{groovyClass,secondController},gcl);
  MockServletContext mockContext=new MockServletContext();
  mockContext.setAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT,context);
  GrailsControllerHelper helper1=new SimpleGrailsControllerHelper(application,context,mockContext);
  GrailsControllerHelper helper2=new SimpleGrailsControllerHelper(application,context,mockContext);
  try {
    helper1.handleURI("/test/list",request,response);
  }
 catch (  MissingMethodException mme) {
    fail("Missing method exception should not have been thrown!");
  }
catch (  MissingPropertyException mpex) {
    fail("Missing property exception should not have been thrown!");
  }
  try {
    request=new MockHttpServletRequest();
    response=new MockHttpServletResponse();
    helper2.handleURI("/second/list",request,response);
  }
 catch (  MissingMethodException mme) {
    fail("Missing method exception should not have been thrown!");
  }
catch (  MissingPropertyException mpex) {
    fail("Missing property exception should not have been thrown!");
  }
}
