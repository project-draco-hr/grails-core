{
  AbstractBeanDefinition bd=new GenericBeanDefinition();
  if (!constructorArgs.isEmpty()) {
    ConstructorArgumentValues cav=new ConstructorArgumentValues();
    for (    Object constructorArg : constructorArgs) {
      cav.addGenericArgumentValue(constructorArg);
    }
    bd.setConstructorArgumentValues(cav);
  }
  bd.setBeanClass(clazz);
  bd.setScope(singleton ? AbstractBeanDefinition.SCOPE_SINGLETON : AbstractBeanDefinition.SCOPE_PROTOTYPE);
  if (parentName != null) {
    bd.setParentName(parentName);
  }
  wrapper=new BeanWrapperImpl(bd);
  return bd;
}
