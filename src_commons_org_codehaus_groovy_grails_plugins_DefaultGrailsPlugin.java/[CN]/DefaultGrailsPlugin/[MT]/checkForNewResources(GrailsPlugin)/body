{
  if (resourcesReferences != null) {
    for (int i=0; i < resourcesReferences.length; i++) {
      String resourcesReference=resourcesReferences[i];
      try {
        Resource[] tmp=resolver.getResources(resourcesReference);
        if (watchedResources.length < tmp.length) {
          Resource newResource=null;
          for (int j=0; j < watchedResources.length; j++) {
            if (!tmp[j].equals(watchedResources[j])) {
              newResource=tmp[j];
              break;
            }
          }
          if (newResource == null) {
            newResource=tmp[tmp.length - 1];
          }
          watchedResources=tmp;
          initializeModifiedTimes();
          if (LOG.isDebugEnabled())           LOG.debug("[GrailsPlugin] plugin resource [" + newResource + "] added, firing event if possible..");
          fireModifiedEvent(newResource,plugin);
        }
      }
 catch (      IllegalArgumentException e) {
        LOG.error("Plugin " + this + "  was unable to check for new plugin resources: "+ e.getMessage());
      }
catch (      IOException e) {
        LOG.error("Plugin " + this + "  was unable to check for new plugin resources: "+ e.getMessage());
      }
    }
  }
}
