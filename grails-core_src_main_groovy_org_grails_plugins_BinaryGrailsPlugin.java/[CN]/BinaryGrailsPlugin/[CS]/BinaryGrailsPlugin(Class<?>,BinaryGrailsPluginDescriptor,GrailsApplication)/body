{
  super(pluginClass,application);
  this.descriptor=descriptor;
  URL rootResource=IOUtils.findRootResource(pluginClass);
  if (rootResource == null) {
    throw new PluginException("Cannot evaluate plugin location for plugin " + pluginClass);
  }
  this.baseResource=new UrlResource(rootResource);
  try {
    this.isJar=ResourceUtils.isJarURL(baseResource.getURL());
  }
 catch (  IOException e) {
    throw new PluginException("Cannot evaluate plugin location for plugin " + pluginClass,e);
  }
  this.projectDirectory=isJar ? null : IOUtils.findApplicationDirectoryFile(pluginClass);
  if (BuildSettings.BASE_DIR != null && projectDirectory != null) {
    try {
      if (projectDirectory.getCanonicalPath().startsWith(BuildSettings.BASE_DIR.getCanonicalPath())) {
        isBase=true;
      }
    }
 catch (    IOException e) {
    }
  }
  URL rootResourcesURL=IOUtils.findRootResourcesURL(pluginClass);
  if (rootResourcesURL == null) {
    throw new PluginException("Cannot evaluate plugin location for plugin " + pluginClass);
  }
  this.baseResourcesResource=new UrlResource(rootResourcesURL);
  if (descriptor != null) {
    initializeProvidedArtefacts(descriptor.getProvidedlassNames());
    initializeViewMap(descriptor);
  }
}
