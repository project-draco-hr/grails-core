{
  super();
  this.cl=new GroovyClassLoader();
  for (int i=0; resources != null && i < resources.length; i++) {
    try {
      cl.parseClass(resources[i].getFile());
    }
 catch (    CompilationFailedException e) {
      throw new org.codehaus.groovy.grails.exceptions.CompilationFailedException("Compilation error in file [" + resources[i].getFilename() + "]: "+ e.getMessage(),e);
    }
  }
  Class[] classes=cl.getLoadedClasses();
  this.domainMap=new HashMap();
  for (int i=0; i < classes.length; i++) {
    if (GrailsClassUtils.isDomainClass(classes[i])) {
      GrailsDomainClass grailsDomainClass=new DefaultGrailsDomainClass(classes[i]);
      this.domainMap.put(grailsDomainClass.getName().substring(0,1).toLowerCase() + grailsDomainClass.getName().substring(1),grailsDomainClass);
    }
  }
  this.controllerMap=new HashMap();
  this.pageFlowMap=new HashMap();
  for (int i=0; i < classes.length; i++) {
    if (GrailsClassUtils.isControllerClass(classes[i])) {
      GrailsControllerClass grailsControllerClass=new DefaultGrailsControllerClass(classes[i]);
      if (grailsControllerClass.getAvailable()) {
        this.controllerMap.put(grailsControllerClass.getFullName(),grailsControllerClass);
      }
    }
 else     if (GrailsClassUtils.isPageFlowClass(classes[i])) {
      GrailsPageFlowClass grailsPageFlowClass=new DefaultGrailsPageFlowClass(classes[i]);
      if (grailsPageFlowClass.getAvailable()) {
        this.pageFlowMap.put(grailsPageFlowClass.getFullName(),grailsPageFlowClass);
      }
    }
 else     if (GrailsClassUtils.isDataSource(classes[i])) {
      GrailsDataSource tmpDataSource=new DefaultGrailsDataSource(classes[i]);
      if (tmpDataSource.getAvailable()) {
        if (dataSource == null) {
          dataSource=tmpDataSource;
        }
 else {
          throw new MoreThanOneActiveDataSourceException("More than one active data source is configured!");
        }
      }
    }
  }
  this.controllerClasses=((GrailsControllerClass[])controllerMap.values().toArray(new GrailsControllerClass[controllerMap.size()]));
  this.pageFlows=((GrailsPageFlowClass[])pageFlowMap.values().toArray(new GrailsPageFlowClass[pageFlowMap.size()]));
  this.domainClasses=((GrailsDomainClass[])this.domainMap.values().toArray(new GrailsDomainClass[domainMap.size()]));
}
