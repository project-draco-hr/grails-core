{
  Pair<String,Locale> cacheKey=new Pair<String,Locale>(basename,locale);
  return CacheEntry.getValue(cachedFilenames,cacheKey,cacheMillis,new Callable<List<Pair<String,Resource>>>(){
    @Override public List<Pair<String,Resource>> call() throws Exception {
      List<String> filenames=new ArrayList<String>(7);
      filenames.addAll(calculateFilenamesForLocale(basename,locale));
      if (fallbackToSystemLocale && !locale.equals(Locale.getDefault())) {
        List<String> fallbackFilenames=calculateFilenamesForLocale(basename,Locale.getDefault());
        for (        String fallbackFilename : fallbackFilenames) {
          if (!filenames.contains(fallbackFilename)) {
            filenames.add(fallbackFilename);
          }
        }
      }
      filenames.add(basename);
      List<Pair<String,Resource>> filenamesAndResources=new ArrayList<Pair<String,Resource>>(filenames.size());
      for (      String filename : filenames) {
        filenamesAndResources.add(new Pair<String,Resource>(filename,locateResource(filename)));
      }
      return filenamesAndResources;
    }
  }
);
}
