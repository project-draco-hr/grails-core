{
  template.execute(new HibernateCallback(){
    public Object doInHibernate(    Session session) throws HibernateException, SQLException {
      Transaction tx=session.beginTransaction();
      if (validator != null) {
        Errors errors=new BindException(domainObject,persistentClass.getName());
        validator.validate(domainObject,errors);
        if (errors.hasErrors()) {
          callback.setErrors(errors);
          callback.setInvoked(false);
          return null;
        }
      }
      session.update(domainObject);
      tx.commit();
      if (LOG.isTraceEnabled()) {
        LOG.trace("[ScaffoldDomain] Updated [" + domainObject + "]. Setting invoked.");
      }
      callback.setInvoked(true);
      return domainObject;
    }
  }
);
  return callback.isInvoked();
}
