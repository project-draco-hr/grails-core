{
  checkInitialised();
  MetaClassRegistry registry=GroovySystem.getMetaClassRegistry();
  for (int i=0; i < COMMON_CLASSES.length; i++) {
    registry.removeMetaClass(COMMON_CLASSES[i]);
  }
  for (  GrailsPlugin plugin : pluginList) {
    if (plugin.supportsCurrentScopeAndEnvironment()) {
      try {
        plugin.doWithDynamicMethods(applicationContext);
      }
 catch (      Throwable t) {
        GrailsUtil.deepSanitize(t);
        LOG.error("Error configuring dynamic methods for plugin " + plugin + ": "+ t.getMessage(),t);
      }
    }
  }
}
