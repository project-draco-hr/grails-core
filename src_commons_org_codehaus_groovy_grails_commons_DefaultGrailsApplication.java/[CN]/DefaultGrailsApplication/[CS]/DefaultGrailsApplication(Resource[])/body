{
  super();
  log.debug("Loading Grails application.");
  final Collection loadedResources=new ArrayList();
  GroovyResourceLoader resourceLoader=new GroovyResourceLoader(){
    public URL loadGroovySource(    String resource){
      String filename=resource.replace('.','/') + ".groovy";
      Resource foundResource=null;
      for (int i=0; resources != null && i < resources.length; i++) {
        if (resources[i].getFilename().endsWith(filename)) {
          if (foundResource == null) {
            foundResource=resources[i];
          }
 else {
            throw new IllegalArgumentException("Resources [" + resources[i].getFilename() + "] and ["+ foundResource.getFilename()+ "] end with ["+ filename+ "]. Cannot load because of duplicate match!");
          }
        }
      }
      try {
        if (foundResource != null) {
          loadedResources.add(foundResource);
          return foundResource.getURL();
        }
 else {
          return null;
        }
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
  }
;
  this.cl=new GroovyClassLoader();
  this.cl.setResourceLoader(resourceLoader);
  for (int i=0; resources != null && i < resources.length; i++) {
    log.debug("Loading groovy file :[" + resources[i].getFile().getAbsolutePath() + "]");
    if (!loadedResources.contains(resources[i])) {
      try {
        cl.parseClass(resources[i].getFile());
      }
 catch (      CompilationFailedException e) {
        throw new org.codehaus.groovy.grails.exceptions.CompilationFailedException("Compilation error parsing file [" + resources[i].getFilename() + "]: "+ e.getMessage(),e);
      }
    }
  }
  if (log.isDebugEnabled())   log.debug("loaded classes: [" + ArrayUtils.toString(this.cl.getLoadedClasses()) + "]");
  Class[] classes=this.cl.getLoadedClasses();
  this.allClasses=classes;
  configureLoadedClasses(classes);
}
