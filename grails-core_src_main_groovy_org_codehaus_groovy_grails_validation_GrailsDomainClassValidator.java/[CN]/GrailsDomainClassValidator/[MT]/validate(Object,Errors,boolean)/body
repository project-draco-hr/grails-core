{
  if (obj == null || !domainClass.getFullName().equals(obj.getClass().getName())) {
    throw new IllegalArgumentException("Argument [" + obj + "] is not an instance of ["+ domainClass.getClazz()+ "] which this validator is configured for");
  }
  BeanWrapper bean=new BeanWrapperImpl(obj);
  Map constrainedProperties=domainClass.getConstrainedProperties();
  Set<String> constrainedPropertyNames=new HashSet(constrainedProperties.keySet());
  for (  Object key : constrainedProperties.keySet()) {
    String propertyName=(String)key;
    validatePropertyWithConstraint(propertyName,obj,errors,bean,constrainedProperties);
  }
  GrailsDomainClassProperty[] persistentProperties=domainClass.getPersistentProperties();
  for (  GrailsDomainClassProperty persistentProperty : persistentProperties) {
    String propertyName=persistentProperty.getName();
    if ((persistentProperty.isAssociation() || persistentProperty.isEmbedded()) && cascade) {
      cascadeToAssociativeProperty(errors,bean,persistentProperty);
    }
    constrainedPropertyNames.remove(propertyName);
  }
  for (  String name : constrainedPropertyNames) {
    validatePropertyWithConstraint(name,obj,errors,bean,constrainedProperties);
  }
  postValidate(obj,errors);
}
