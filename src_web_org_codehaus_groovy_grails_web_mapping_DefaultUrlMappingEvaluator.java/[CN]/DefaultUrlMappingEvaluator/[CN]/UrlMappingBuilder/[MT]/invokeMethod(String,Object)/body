{
  Object[] args=(Object[])arg;
  if (methodName.startsWith(SLASH)) {
    try {
      urlDefiningMode=false;
      if (args.length > 0 && (args[0] instanceof Closure)) {
        UrlMappingData urlData=urlParser.parse(methodName);
        Closure callable=(Closure)args[0];
        callable.call();
        String controllerName=(String)binding.getVariable(GrailsControllerClass.CONTROLLER);
        String actionName=(String)binding.getVariable(GrailsControllerClass.ACTION);
        if (controllerName == null) {
          throw new UrlMappingException("No controller defined for URL mapping [" + methodName + "]");
        }
        ConstrainedProperty[] constraints=(ConstrainedProperty[])previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);
        UrlMapping urlMapping=new RegexUrlMapping(urlData,controllerName,actionName,constraints);
        urlMappings.add(urlMapping);
        return urlMapping;
      }
 else {
        throw new UrlMappingException("No controller or action defined for URL mapping [" + methodName + "]");
      }
    }
  finally {
      binding.setVariable(GrailsControllerClass.CONTROLLER,null);
      binding.setVariable(GrailsControllerClass.ACTION,null);
      previousConstraints.clear();
      urlDefiningMode=true;
    }
  }
 else   if (!urlDefiningMode && CONSTRAINTS.equals(methodName)) {
    ConstrainedPropertyBuilder builder=new ConstrainedPropertyBuilder(this);
    if (args.length > 0 && (args[0] instanceof Closure)) {
      Closure callable=(Closure)args[0];
      callable.setDelegate(builder);
      for (Iterator i=previousConstraints.iterator(); i.hasNext(); ) {
        ConstrainedProperty constrainedProperty=(ConstrainedProperty)i.next();
        builder.getConstrainedProperties().put(constrainedProperty.getPropertyName(),constrainedProperty);
      }
      callable.call();
    }
    return builder.getConstrainedProperties();
  }
 else {
    return super.invokeMethod(methodName,arg);
  }
}
