{
  attrTokens=attrTokens.trim();
  int startPos=0;
  while (startPos < attrTokens.length()) {
    int equalsignPos=attrTokens.indexOf('=',startPos);
    if (equalsignPos == -1) {
      throw new GrailsTagException("Expecting '=' after attribute name (" + attrTokens + ").",pageName,getCurrentOutputLineNumber());
    }
    String name=attrTokens.substring(startPos,equalsignPos).trim();
    startPos=equalsignPos + 1;
    char ch=attrTokens.charAt(startPos++);
    while (Character.isWhitespace(ch) && startPos < attrTokens.length()) {
      ch=attrTokens.charAt(startPos++);
    }
    if (!(ch == '\'' || ch == '"')) {
      throw new GrailsTagException("Attribute value must be quoted (" + attrTokens + ").",pageName,getCurrentOutputLineNumber());
    }
    char quoteChar=ch;
    GroovyPageExpressionParser expressionParser=new GroovyPageExpressionParser(attrTokens,startPos,quoteChar,(char)0,false);
    int endQuotepos=expressionParser.parse();
    if (endQuotepos == -1) {
      throw new GrailsTagException("Attribute value quote wasn't closed (" + attrTokens + ").",pageName,getCurrentOutputLineNumber());
    }
    String val=attrTokens.substring(startPos,endQuotepos);
    if (val.startsWith("${") && val.endsWith("}") && !expressionParser.isContainsGstrings()) {
      val=val.substring(2,val.length() - 1);
    }
 else     if (!(val.startsWith("[") && val.endsWith("]"))) {
      if (val.indexOf('"') == -1) {
        quoteChar='"';
      }
      String quoteStr;
      if (val.indexOf('\n') != -1 || val.indexOf('\r') != -1) {
        if (quoteChar == '"') {
          quoteStr=MULTILINE_GROOVY_STRING_DOUBLEQUOTES;
        }
 else {
          quoteStr=MULTILINE_GROOVY_STRING_SINGLEQUOTES;
        }
      }
 else {
        quoteStr=String.valueOf(quoteChar);
      }
      val=quoteStr + val + quoteStr;
    }
    attrs.put("\"" + name + "\"",val);
    startPos=endQuotepos + 1;
  }
}
