{
  final GroovyPageTagWriter capturedOut=new GroovyPageTagWriter(preferSubChunkWhenWritingToOtherBuffer);
  Binding currentBinding=(Binding)webRequest.getCurrentRequest().getAttribute(GrailsApplicationAttributes.PAGE_SCOPE);
  Map<String,Object> savedVariablesMap=null;
  Set<String> bodyArgumentKeys=null;
  boolean itChanged=false;
  Object originalIt=null;
  try {
    pushCapturedOut(capturedOut);
    Object bodyResult;
    if (args != null) {
      Map<String,Object> variablesMap=(currentBinding instanceof AbstractGroovyPageBinding) ? ((AbstractGroovyPageBinding)currentBinding).getVariablesMap() : currentBinding.getVariables();
      originalIt=variablesMap.get("it");
      variablesMap.put("it",args);
      itChanged=true;
      if (args instanceof Map && ((Map)args).size() > 0) {
        savedVariablesMap=new LinkedHashMap<String,Object>(variablesMap);
        bodyArgumentKeys=new HashSet<String>();
        for (Iterator<Object> i=((Map)args).keySet().iterator(); i.hasNext(); ) {
          bodyArgumentKeys.add(String.valueOf(i.next()));
        }
        ((GroovyPageBinding)currentBinding).addMap((Map)args);
      }
    }
    bodyResult=executeClosure(args);
    if (!capturedOut.isUsed() && bodyResult != null && !(bodyResult instanceof Writer)) {
      return bodyResult;
    }
    return capturedOut.getBuffer();
  }
  finally {
    Map<String,Object> variablesMap=(currentBinding instanceof AbstractGroovyPageBinding) ? ((AbstractGroovyPageBinding)currentBinding).getVariablesMap() : currentBinding.getVariables();
    restoreVariables(variablesMap,savedVariablesMap,bodyArgumentKeys);
    if (itChanged) {
      variablesMap.put("it",originalIt);
    }
    popCapturedOut();
  }
}
