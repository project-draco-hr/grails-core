{
  GroovyObject tagLib=getTagLib(getTagName());
  if (tagLib == null) {
    throw new GrailsTagException("Tag [" + getTagName() + "] does not exist. No tag library found.");
  }
  sw=FastStringPrintWriter.newInstance();
  out=sw;
  tagLib.setProperty(OUT_PROPERTY,out);
  Object tagLibProp;
  final Map tagLibProperties=DefaultGroovyMethods.getProperties(tagLib);
  if (tagLibProperties.containsKey(getTagName())) {
    tagLibProp=tagLibProperties.get(getTagName());
  }
 else {
    throw new GrailsTagException("Tag [" + getTagName() + "] does not exist in tag library ["+ tagLib.getClass().getName()+ "]");
  }
  if (!(tagLibProp instanceof Closure)) {
    throw new GrailsTagException("Tag [" + getTagName() + "] does not exist in tag library ["+ tagLib.getClass().getName()+ "]");
  }
  Closure body=new Closure(this){
    private static final long serialVersionUID=1861498565854341886L;
    @SuppressWarnings("unused") public Object doCall(){
      return call();
    }
    @SuppressWarnings("unused") public Object doCall(    Object o){
      return call(new Object[]{o});
    }
    @SuppressWarnings("unused") public Object doCall(    Object[] args){
      return call(args);
    }
    @Override public Object call(    Object... args){
      invocationCount++;
      if (args.length > 0) {
        invocationArgs.add(args[0]);
      }
 else {
        invocationArgs.add(ZERO_ARGUMENTS);
      }
      out.print("<jsp-body-gen" + invocationCount + ">");
      return "";
    }
  }
;
  Closure tag=(Closure)tagLibProp;
  if (tag.getParameterTypes().length == 1) {
    tag.call(new Object[]{attributes});
    if (body != null) {
      body.call();
    }
  }
  if (tag.getParameterTypes().length == 2) {
    tag.call(new Object[]{attributes,body});
  }
  Collections.reverse(invocationArgs);
  setCurrentArgument();
  return EVAL_BODY_BUFFERED;
}
