{
  int scale=Column.DEFAULT_SCALE;
  int precision=Column.DEFAULT_PRECISION;
  if (constrainedProperty.getScale() != null) {
    scale=constrainedProperty.getScale().intValue();
    column.setScale(scale);
  }
  Comparable<?> minConstraintValue=constrainedProperty.getMin();
  Comparable<?> maxConstraintValue=constrainedProperty.getMax();
  int minConstraintValueLength=0;
  if ((minConstraintValue != null) && (minConstraintValue instanceof Number)) {
    minConstraintValueLength=Math.max(countDigits((Number)minConstraintValue),countDigits(new Long(((Number)minConstraintValue).longValue())) + scale);
  }
  int maxConstraintValueLength=0;
  if ((maxConstraintValue != null) && (maxConstraintValue instanceof Number)) {
    maxConstraintValueLength=Math.max(countDigits((Number)maxConstraintValue),countDigits(new Long(((Number)maxConstraintValue).longValue())) + scale);
  }
  if (minConstraintValueLength > 0 && maxConstraintValueLength > 0) {
    precision=NumberUtils.max(new int[]{minConstraintValueLength,maxConstraintValueLength});
  }
 else {
    precision=NumberUtils.max(new int[]{precision,minConstraintValueLength,maxConstraintValueLength});
  }
  column.setPrecision(precision);
}
