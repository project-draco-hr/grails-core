{
  enhanceCommandObjectClass(commandObjectTypeClassNode,actionName,source,context);
  final Expression constructorCallExpression=new ConstructorCallExpression(commandObjectTypeClassNode,EMPTY_TUPLE);
  final Statement newCommandCode=new ExpressionStatement(new DeclarationExpression(new VariableExpression(paramName,commandObjectTypeClassNode),Token.newSymbol(Types.EQUALS,0,0),constructorCallExpression));
  wrapper.addStatement(newCommandCode);
  final Statement statement=getCommandObjectDataBindingStatement(classNode,paramName,commandObjectTypeClassNode);
  wrapper.addStatement(statement);
  final Statement autoWireCommandObjectStatement=getAutoWireCommandObjectStatement(paramName);
  wrapper.addStatement(autoWireCommandObjectStatement);
  final MethodCallExpression validateMethodCallExpression=new MethodCallExpression(new VariableExpression(paramName),"validate",EMPTY_TUPLE);
  MethodNode validateMethod=commandObjectTypeClassNode.getMethod("validate",new Parameter[0]);
  if (validateMethod != null) {
    validateMethodCallExpression.setMethodTarget(validateMethod);
  }
  wrapper.addStatement(new ExpressionStatement(validateMethodCallExpression));
  @SuppressWarnings("unchecked") boolean argumentIsValidateable=GrailsASTUtils.hasAnyAnnotations(commandObjectTypeClassNode,grails.validation.Validateable.class,org.codehaus.groovy.grails.validation.Validateable.class,grails.persistence.Entity.class,javax.persistence.Entity.class);
  if (!argumentIsValidateable) {
    final ModuleNode commandObjectModule=commandObjectTypeClassNode.getModule();
    if (commandObjectModule != null) {
      if (commandObjectModule == classNode.getModule() || doesModulePathIncludeSubstring(commandObjectModule,"grails-app" + File.separator + "controllers"+ File.separator) || doesModulePathIncludeSubstring(commandObjectModule,"grails-app" + File.separator + "domain"+ File.separator)) {
        argumentIsValidateable=true;
      }
    }
  }
  if (!argumentIsValidateable) {
    final String warningMessage="The [" + actionName + "] action in ["+ classNode.getName()+ "] accepts a parameter of type ["+ commandObjectTypeClassNode.getName()+ "] which has not been marked with @grails.validation.Validateable. "+ "This may lead to an intermittent MissingMethodException for validate(). "+ "We strongly recommend that you mark command object classes with @Validateable "+ "in order to avoid the problem.";
    warning(source,actionNode,warningMessage);
  }
}
