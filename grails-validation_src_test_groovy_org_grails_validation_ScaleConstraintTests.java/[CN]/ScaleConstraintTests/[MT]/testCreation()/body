{
  ScaleConstraint constraint=(ScaleConstraint)getConstraint("testFloat",2);
  assertEquals(ConstrainedProperty.SCALE_CONSTRAINT,constraint.getName());
  assertTrue(constraint.supports(BigDecimal.class));
  assertTrue(constraint.supports(Float.class));
  assertTrue(constraint.supports(Double.class));
  assertFalse(constraint.supports(String.class));
  assertFalse(constraint.supports(Object.class));
  assertFalse(constraint.supports(null));
  assertEquals(2,constraint.getScale());
  try {
    getConstraint("testFloat","wrong");
    fail("EmailConstraint must throw an exception for non-integer parameters.");
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    getConstraint("testFloat",-1);
    fail("EmailConstraint must throw an exception for negative parameters.");
  }
 catch (  IllegalArgumentException iae) {
  }
}
