{
  GrailsDomainClass domainClass=(GrailsDomainClass)application.getArtefact(DomainClassArtefactHandler.TYPE,target.getClass().getName());
  if (shouldValidate(arguments,domainClass)) {
    Validator validator=domainClass.getValidator();
    MetaClass mc=GroovySystem.getMetaClassRegistry().getMetaClass(target.getClass());
    Errors errors=new BeanPropertyBindingResult(target,target.getClass().getName());
    mc.setProperty(target,"errors",errors);
    if (validator != null) {
      boolean deepValidate=true;
      if (arguments.length > 0) {
        if (arguments[0] instanceof Map) {
          Map argsMap=(Map)arguments[0];
          if (argsMap.containsKey(ARGUMENT_DEEP_VALIDATE))           deepValidate=GrailsClassUtils.getBooleanFromMap(ARGUMENT_DEEP_VALIDATE,argsMap);
        }
      }
      if (deepValidate && (validator instanceof CascadingValidator)) {
        ((CascadingValidator)validator).validate(target,errors,deepValidate);
      }
 else {
        validator.validate(target,errors);
      }
      if (errors.hasErrors()) {
        return handleValidationError(target,errors);
      }
    }
  }
  if (domainClass != null) {
    autoRetrieveAssocations(domainClass,target);
  }
  if (shouldInsert(arguments)) {
    return performInsert(target,shouldFlush(arguments));
  }
 else {
    return performSave(target,shouldFlush(arguments));
  }
}
