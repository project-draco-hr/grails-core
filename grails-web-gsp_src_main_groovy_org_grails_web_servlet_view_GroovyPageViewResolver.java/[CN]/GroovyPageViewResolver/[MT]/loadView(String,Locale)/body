{
  Assert.notNull(templateEngine,"Property [templateEngine] cannot be null");
  if (viewName.endsWith(GSP_SUFFIX)) {
    viewName=viewName.substring(0,viewName.length() - GSP_SUFFIX.length());
  }
  if (!allowGrailsViewCaching) {
    return createGrailsView(viewName);
  }
  String viewCacheKey=groovyPageLocator.resolveViewFormat(viewName);
  CacheEntry<View> entry=viewCache.get(viewCacheKey);
  final String lookupViewName=viewName;
  Callable<View> updater=new Callable<View>(){
    public View call() throws Exception {
      try {
        return createGrailsView(lookupViewName);
      }
 catch (      Exception e) {
        throw new WrappedInitializationException(e);
      }
    }
  }
;
  View view=null;
  if (entry == null) {
    try {
      return CacheEntry.getValue(viewCache,viewCacheKey,cacheTimeout,updater);
    }
 catch (    CacheEntry.UpdateException e) {
      e.rethrowCause();
      return null;
    }
  }
  try {
    view=entry.getValue(cacheTimeout,updater,true,null);
  }
 catch (  WrappedInitializationException e) {
    e.rethrowCause();
  }
  return view;
}
