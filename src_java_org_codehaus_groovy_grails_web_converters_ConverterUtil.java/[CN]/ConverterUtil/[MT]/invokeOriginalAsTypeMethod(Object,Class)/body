{
  if (clazz.isInstance(delegate)) {
    return delegate;
  }
  if (delegate instanceof Collection<?> && clazz.isArray()) {
    int size=((Collection<?>)delegate).size();
    if (clazz.getComponentType() == Object.class) {
      if (size == 0) {
        return EMPTY_OBJECT_ARRAY;
      }
      return ((Collection<?>)delegate).toArray((Object[])Array.newInstance(clazz.getComponentType(),size));
    }
    if (size == 0) {
      return Array.newInstance(clazz.getComponentType(),0);
    }
    return DefaultTypeTransformation.asArray(delegate,clazz);
  }
  if (delegate instanceof Collection<?>) {
    return DefaultGroovyMethods.asType((Collection<?>)delegate,clazz);
  }
  if (delegate instanceof Closure) {
    return DefaultGroovyMethods.asType((Closure)delegate,clazz);
  }
  if (delegate instanceof Map) {
    return DefaultGroovyMethods.asType((Map)delegate,clazz);
  }
  if (delegate instanceof Number) {
    return DefaultGroovyMethods.asType((Number)delegate,clazz);
  }
  if (delegate instanceof File) {
    return DefaultGroovyMethods.asType((File)delegate,clazz);
  }
  if (delegate instanceof String) {
    return DefaultGroovyMethods.asType((String)delegate,clazz);
  }
  return DefaultGroovyMethods.asType(delegate,clazz);
}
