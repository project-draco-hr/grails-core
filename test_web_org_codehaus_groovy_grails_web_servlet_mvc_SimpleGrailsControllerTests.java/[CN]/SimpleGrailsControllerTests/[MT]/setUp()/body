{
  InvokerHelper.getInstance().getMetaRegistry().setMetaClassCreationHandle(new ExpandoMetaClassCreationHandle());
  GroovyClassLoader cl=new GroovyClassLoader();
  cl.parseClass("class MyCommandObject {\n" + "String firstName\n" + "String lastName\n"+ "static constraints = {\n"+ "  firstName(maxSize:10)\n"+ "  lastName(maxSize:10)"+ "}\n"+ "}");
  cl.parseClass("class AnotherCommandObject {\n" + "Integer age\n" + "static constraints = {\n"+ "  age(max:99)\n"+ "}\n"+ "}");
  Class testControllerClass=cl.parseClass("class TestController {\n" + " Closure test = {\n" + "return [ \"test\" : \"123\" ]\n"+ "}\n"+ "def doit = { MyCommandObject mco ->\n"+ "[theFirstName:mco.firstName, theLastName:mco.lastName, validationErrors:mco.errors]\n"+ "}\n"+ "def doitagain = {MyCommandObject mco, AnotherCommandObject aco ->\n"+ "[theFirstName:mco.firstName, theLastName:mco.lastName, theAge:aco.age, acoErrors:aco.errors, mcoErrors:mco.errors]\n"+ "}\n"+ "}");
  Class simpleControllerClass=cl.parseClass("class SimpleController {\n" + " Closure test = {\n" + "}\n"+ "}");
  Class noViewControllerClass=cl.parseClass("class NoViewController {\n" + " Closure test = {\n" + "request, response ->\n"+ "new grails.util.OpenRicoBuilder(response).ajax { element(id:\"test\") { } };\n"+ "return null;\n"+ "}\n"+ "}");
  Class restrictedControllerClass=cl.parseClass("class RestrictedController {\n" + "def allowedMethods=[action1:'POST', action3:['PUT', 'DELETE']]\n" + "def action1 = {}\n"+ "def action2 = {}\n"+ "def action3 = {}\n"+ "}");
  Thread.currentThread().setContextClassLoader(cl);
  this.localContext=new GenericApplicationContext();
  ConstructorArgumentValues args=new ConstructorArgumentValues();
  args.addGenericArgumentValue(new Class[]{testControllerClass,simpleControllerClass,noViewControllerClass,restrictedControllerClass});
  args.addGenericArgumentValue(cl);
  MutablePropertyValues propValues=new MutablePropertyValues();
  BeanDefinition grailsApplicationBean=new RootBeanDefinition(DefaultGrailsApplication.class,args,propValues);
  localContext.registerBeanDefinition("grailsApplication",grailsApplicationBean);
  this.localContext.refresh();
  this.grailsApplication=(GrailsApplication)localContext.getBean("grailsApplication");
  ApplicationHolder.setApplication(grailsApplication);
  GrailsRuntimeConfigurator rConfig=new GrailsRuntimeConfigurator(grailsApplication,localContext);
  MockServletContext servletContext=new MockServletContext();
  this.appCtx=(ConfigurableApplicationContext)rConfig.configure(servletContext);
  this.controller=(SimpleGrailsController)appCtx.getBean("simpleGrailsController");
  servletContext.setAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT,appCtx);
  controller.setServletContext(servletContext);
  assertNotNull(appCtx);
  super.setUp();
}
