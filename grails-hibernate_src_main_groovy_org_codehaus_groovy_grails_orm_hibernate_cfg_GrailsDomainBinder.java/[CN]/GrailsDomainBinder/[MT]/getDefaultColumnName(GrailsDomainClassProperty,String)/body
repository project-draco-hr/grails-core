{
  NamingStrategy namingStrategy=getNamingStrategy(sessionFactoryBeanName);
  String columnName=namingStrategy.propertyToColumnName(property.getName());
  if (property.isAssociation() && property.getReferencedDomainClass() != null) {
    if (property.isManyToMany()) {
      return getForeignKeyForPropertyDomainClass(property,sessionFactoryBeanName);
    }
    if (!property.isBidirectional() && property.isOneToMany()) {
      String prefix=namingStrategy.classToTableName(property.getDomainClass().getName());
      return addUnderscore(prefix,columnName) + FOREIGN_KEY_SUFFIX;
    }
    if (property.isInherited() && isBidirectionalManyToOne(property)) {
      return namingStrategy.propertyToColumnName(property.getDomainClass().getName()) + '_' + columnName+ FOREIGN_KEY_SUFFIX;
    }
    return columnName + FOREIGN_KEY_SUFFIX;
  }
  if (property.isBasicCollectionType()) {
    return getForeignKeyForPropertyDomainClass(property,sessionFactoryBeanName);
  }
  return columnName;
}
