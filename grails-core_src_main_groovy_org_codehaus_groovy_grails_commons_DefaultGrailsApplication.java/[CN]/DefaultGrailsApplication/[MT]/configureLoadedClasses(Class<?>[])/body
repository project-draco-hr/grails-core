{
  initArtefactHandlers();
  artefactInfo.clear();
  allArtefactClasses.clear();
  allArtefactClassesArray=null;
  allClasses=classes;
  log.debug("Going to inspect artefact classes.");
  for (  final Class<?> theClass : classes) {
    log.debug("Inspecting [" + theClass.getName() + "]");
    if (Modifier.isAbstract(theClass.getModifiers())) {
      log.debug("[" + theClass.getName() + "] is abstract.");
      continue;
    }
    if (allArtefactClasses.contains(theClass)) {
      continue;
    }
    for (    ArtefactHandler artefactHandler : artefactHandlers) {
      if (artefactHandler.isArtefact(theClass)) {
        log.debug("Adding artefact " + theClass + " of kind "+ artefactHandler.getType());
        GrailsClass gclass=addArtefact(artefactHandler.getType(),theClass);
        allArtefactClasses.add(theClass);
        DefaultArtefactInfo info=getArtefactInfo(artefactHandler.getType(),true);
        info.addGrailsClass(gclass);
        break;
      }
    }
  }
  refreshArtefactGrailsClassCaches();
  allArtefactClassesArray=allArtefactClasses.toArray(new Class[allArtefactClasses.size()]);
  for (  ArtefactHandler artefactHandler : artefactHandlers) {
    initializeArtefacts(artefactHandler);
  }
}
