{
  if (!finalPass)   return;
  tagIndex++;
  String text=scan.getToken().trim();
  String tagName;
  Map attrs=new HashMap();
  if (text.indexOf(' ') > -1) {
    String[] tagTokens=text.split(" ");
    tagName=tagTokens[0].trim();
    for (int i=1; i < tagTokens.length; i++) {
      if (tagTokens[i].indexOf('=') > -1) {
        String[] attr=tagTokens[i].split("=");
        String name=attr[0].trim();
        name='\"' + name + '\"';
        String val=attr[1].trim().substring(1,attr[1].length() - 1);
        if (val.startsWith("${") && val.endsWith("}")) {
          val=val.substring(2,val.length() - 1);
        }
 else {
          val='\"' + val + '\"';
        }
        attrs.put(name,val);
      }
    }
  }
 else {
    tagName=text;
  }
  this.tagNameStack.add(tagName);
  if (tagRegistry.isSyntaxTag(tagName)) {
    if (this.tagContext == null) {
      this.tagContext=new HashMap();
      this.tagContext.put(GroovyPage.OUT,out);
    }
    GrailsTag tag=tagRegistry.newTag(tagName);
    tag.init(tagContext);
    tag.setAttributes(attrs);
    tag.doStartTag();
    this.syntaxTagStack.add(tag);
  }
 else   if (tagRegistry.isRequestContextTag(tagName)) {
    out.print("tag");
    out.print(tagIndex);
    out.print("= grailsTagRegistry.newTag('");
    out.print(tagName);
    out.println("')");
    for (Iterator i=attrs.keySet().iterator(); i.hasNext(); ) {
      String name=(String)i.next();
      out.print("tag");
      out.print(tagIndex);
      out.print(".setAttribute(");
      out.print(name);
      out.print(',');
      out.print(attrs.get(name));
      out.println(')');
    }
    out.print("tag");
    out.print(tagIndex);
    out.print(".init(");
    out.println("getBinding().getVariables())");
    out.print("tag");
    out.print(tagIndex);
    out.println(".doStartTag()");
  }
 else {
    if (attrs.size() > 0) {
      out.print("attrs" + tagIndex + " = [");
      for (Iterator i=attrs.keySet().iterator(); i.hasNext(); ) {
        String name=(String)i.next();
        out.print(name);
        out.print(':');
        out.print(attrs.get(name));
        if (i.hasNext())         out.print(',');
 else         out.print(']');
      }
    }
 else {
      out.println("attrs" + tagIndex + " = [:]");
    }
    out.println();
    out.println("body" + tagIndex + " = {");
  }
}
