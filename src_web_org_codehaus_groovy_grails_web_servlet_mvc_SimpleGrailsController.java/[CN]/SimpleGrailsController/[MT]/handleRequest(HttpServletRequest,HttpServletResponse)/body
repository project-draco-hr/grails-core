{
  String uri=this.urlPathHelper.getLookupPathForRequest(request);
  String[] uriParts=StringUtils.tokenizeToStringArray(uri,SLASH,true,true);
  String controllerName=uriParts[0];
  GrailsControllerClass controllerClass=this.application.getController(controllerName);
  if (controllerClass == null) {
    String fullControllerName=controllerName.substring(0,1).toUpperCase() + controllerName.substring(1) + DefaultGrailsControllerClass.CONTROLLER;
    throw new UnknownControllerException("Controller named [" + controllerName + "] could not be found. Make sure ["+ fullControllerName+ "] is defined and available!");
  }
  GroovyObject controller=(GroovyObject)this.applicationContext.getBean(controllerName + DefaultGrailsControllerClass.CONTROLLER);
  String closurePropertyName=controllerClass.getClosurePropertyName(uri);
  if (closurePropertyName == null) {
    throw new NoClosurePropertyForURIException("Could not find closure property for URI [" + uri + "] for controller ["+ controllerClass.getFullName()+ "]!");
  }
  String viewName=controllerClass.getViewName(closurePropertyName);
  boolean viewNameBlank=(viewName == null || viewName.length() == 0);
  Closure closure=(Closure)controller.getProperty(closurePropertyName);
  Object returnValue=null;
  if (closure.getParameterTypes().length == 1) {
    returnValue=closure.call(new Object[]{new GrailsHttpServletRequest(request)});
  }
 else   if (closure.getParameterTypes().length == 2) {
    returnValue=closure.call(new Object[]{new GrailsHttpServletRequest(request),response});
  }
 else {
    throw new IncompatibleParameterCountException("Closure on property [" + closurePropertyName + "] in ["+ controllerClass.getFullName()+ "] has an incompatible parameter count ["+ closure.getParameterTypes().length+ "]! Supported values are 0 and 2.");
  }
  if (returnValue == null) {
    if (viewNameBlank) {
      return null;
    }
 else {
      return new ModelAndView(viewName);
    }
  }
 else   if (returnValue instanceof Map) {
    if (viewNameBlank) {
      throw new NoViewNameDefinedException("Map instance returned by and no view name specified for closure on property [" + closurePropertyName + "] in controller ["+ controllerClass.getFullName()+ "]!");
    }
 else {
      return new ModelAndView(viewName,(Map)returnValue);
    }
  }
 else   if (returnValue instanceof ModelAndView) {
    ModelAndView modelAndView=(ModelAndView)returnValue;
    if (modelAndView.getView() == null && modelAndView.getViewName() == null) {
      if (viewNameBlank) {
        throw new NoViewNameDefinedException("ModelAndView instance returned by and no view name defined by nor for closure on property [" + closurePropertyName + "] in controller ["+ controllerClass.getFullName()+ "]!");
      }
 else {
        modelAndView.setViewName(viewName);
      }
    }
    return modelAndView;
  }
  throw new UnsupportedReturnValueException("Return value [" + returnValue + "] is not supported for closure property ["+ closurePropertyName+ "] in controller ["+ controllerClass.getFullName()+ "]!");
}
