{
  GrailsDomainClass[] grailsDomainClasses=application.getGrailsDomainClasses();
  for (int i=0; i < grailsDomainClasses.length; i++) {
    GrailsDomainClass grailsDomainClass=grailsDomainClasses[i];
    Bean domainClassBean=SpringConfigUtils.createSingletonBean(MethodInvokingFactoryBean.class);
    domainClassBean.setProperty("targetObject",SpringConfigUtils.createBeanReference("grailsApplication"));
    domainClassBean.setProperty("targetMethod",SpringConfigUtils.createLiteralValue("getGrailsDomainClass"));
    domainClassBean.setProperty("arguments",SpringConfigUtils.createLiteralValue(grailsDomainClass.getFullName()));
    beanReferences.add(SpringConfigUtils.createBeanReference(grailsDomainClass.getFullName() + "DomainClass",domainClassBean));
    Bean persistentClassBean=SpringConfigUtils.createSingletonBean(MethodInvokingFactoryBean.class);
    persistentClassBean.setProperty("targetObject",SpringConfigUtils.createBeanReference(grailsDomainClass.getFullName() + "DomainClass"));
    persistentClassBean.setProperty("targetMethod",SpringConfigUtils.createLiteralValue("getClazz"));
    beanReferences.add(SpringConfigUtils.createBeanReference(grailsDomainClass.getFullName() + "PersistentClass",persistentClassBean));
    Collection constructorArguments=new ArrayList();
    constructorArguments.add(SpringConfigUtils.createBeanReference("grailsApplication"));
    constructorArguments.add(SpringConfigUtils.createLiteralValue(grailsDomainClass.getClazz().getName()));
    constructorArguments.add(SpringConfigUtils.createBeanReference("sessionFactory"));
    constructorArguments.add(classLoader);
    Bean hibernatePersistentMethods=SpringConfigUtils.createSingletonBean(DomainClassMethods.class,constructorArguments);
    beanReferences.add(SpringConfigUtils.createBeanReference(grailsDomainClass.getFullName() + "PersistentMethods",hibernatePersistentMethods));
    Bean validatorBean=SpringConfigUtils.createSingletonBean(GrailsDomainClassValidator.class);
    validatorBean.setProperty("domainClass",SpringConfigUtils.createBeanReference(grailsDomainClass.getFullName() + "DomainClass"));
    validatorBean.setProperty("sessionFactory",SpringConfigUtils.createBeanReference("sessionFactory"));
    beanReferences.add(SpringConfigUtils.createBeanReference(grailsDomainClass.getFullName() + "Validator",validatorBean));
  }
}
