{
  GroovyClassLoader gcl=new GroovyClassLoader();
  final Class<?> testClass=gcl.parseClass("class Test { def invokeMe() {'hello'} }");
  GroovyObject go=(GroovyObject)testClass.newInstance();
  ProxyMetaClass pmc=ProxyMetaClass.getInstance(testClass);
  go.setMetaClass(pmc);
  pmc.setInterceptor(new Interceptor(){
    public Object beforeInvoke(    Object object,    String methodName,    Object[] arguments,    InvocationCallback callback){
      return null;
    }
    public Object afterInvoke(    Object object,    String methodName,    Object[] arguments,    Object result){
      assertEquals("hello",result);
      assertEquals("invokeMe",methodName);
      return result.toString() + 1;
    }
  }
);
  Object result=go.invokeMethod("invokeMe",null);
  assertNotNull(result);
  assertEquals("hello1",result);
}
