{
  GenericBeanDefinition beanDef=new GenericBeanDefinition();
  beanDef.setBeanClass(entityClass);
  beanDef.setScope("prototype");
  RootBeanDefinition domainDef=new RootBeanDefinition(MethodInvokingFactoryBean.class);
  domainDef.getPropertyValues().addPropertyValue("targetObject",new RuntimeBeanReference(GrailsApplication.APPLICATION_ID));
  domainDef.getPropertyValues().addPropertyValue("targetMethod","getArtefact");
  domainDef.getPropertyValues().addPropertyValue("arguments",new ArrayList(){
{
      add(DomainClassArtefactHandler.TYPE);
      add(entityClass.getName());
    }
  }
);
  final String domainRef=entityClass.getName() + "Domain";
  if (StringUtils.hasText(messageSourceRef)) {
    GenericBeanDefinition validatorDef=new GenericBeanDefinition();
    validatorDef.setBeanClass(HibernateDomainClassValidator.class);
    validatorDef.getPropertyValues().addPropertyValue("messageSource",new RuntimeBeanReference(messageSourceRef));
    validatorDef.getPropertyValues().addPropertyValue("domainClass",new RuntimeBeanReference(domainRef));
    targetRegistry.registerBeanDefinition(entityClass.getName() + "Validator",validatorDef);
  }
  targetRegistry.registerBeanDefinition(entityClass.getName(),beanDef);
  targetRegistry.registerBeanDefinition(domainRef,domainDef);
}
