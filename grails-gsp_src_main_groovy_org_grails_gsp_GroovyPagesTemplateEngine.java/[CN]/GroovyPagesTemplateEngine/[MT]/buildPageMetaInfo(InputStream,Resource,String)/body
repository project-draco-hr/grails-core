{
  String name=establishPageName(res,pageName);
  GroovyPageParser parser;
  String path=getPathForResource(res);
  try {
    String gspSource=IOUtils.toString(inputStream,getGspEncoding());
    parser=new GroovyPageParser(name,path,path,decorateGroovyPageSource(new StringBuilder(gspSource)).toString());
    if (grailsApplication != null) {
      Config config=grailsApplication.getConfig();
      parser.configure(config);
    }
  }
 catch (  IOException e) {
    throw new GroovyPagesException("I/O parsing Groovy page [" + (res != null ? res.getDescription() : name) + "]: "+ e.getMessage(),e);
  }
  InputStream in=parser.parse();
  GroovyPageMetaInfo metaInfo=createPageMetaInfo(parser,in);
  metaInfo.applyLastModifiedFromResource(res);
  try {
    metaInfo.setPageClass(compileGroovyPage(in,name,path,metaInfo));
    metaInfo.setHtmlParts(parser.getHtmlPartsArray());
  }
 catch (  GroovyPagesException e) {
    metaInfo.setCompilationException(e);
  }
  return metaInfo;
}
