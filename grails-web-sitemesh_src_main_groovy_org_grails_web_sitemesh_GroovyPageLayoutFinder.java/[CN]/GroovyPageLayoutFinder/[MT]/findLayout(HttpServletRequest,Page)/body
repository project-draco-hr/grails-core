{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Evaluating layout for request: " + request.getRequestURI());
  }
  final Object layoutAttribute=request.getAttribute(LAYOUT_ATTRIBUTE);
  if (request.getAttribute(RENDERING_VIEW_ATTRIBUTE) != null || layoutAttribute != null) {
    String layoutName=layoutAttribute == null ? null : layoutAttribute.toString();
    if (layoutName == null) {
      layoutName=page.getProperty("meta.layout");
    }
    Decorator d=null;
    if (GrailsStringUtils.isBlank(layoutName)) {
      GroovyObject controller=(GroovyObject)request.getAttribute(GrailsApplicationAttributes.CONTROLLER);
      if (controller != null) {
        GrailsWebRequest webRequest=GrailsWebRequest.lookup(request);
        String controllerName=webRequest.getControllerName();
        if (controllerName == null) {
          controllerName=GrailsNameUtils.getLogicalPropertyName(controller.getClass().getName(),ControllerArtefactHandler.TYPE);
        }
        String actionUri=webRequest.getAttributes().getControllerActionUri(request);
        if (controllerName != null && actionUri != null) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Found controller in request, locating layout for controller [" + controllerName + "] and action ["+ actionUri+ "]");
          }
          LayoutCacheKey cacheKey=null;
          boolean cachedIsNull=false;
          if (cacheEnabled) {
            cacheKey=new LayoutCacheKey(controllerName,actionUri);
            DecoratorCacheValue cacheValue=layoutDecoratorCache.get(cacheKey);
            if (cacheValue != null && (!gspReloadEnabled || !cacheValue.isExpired())) {
              d=cacheValue.getDecorator();
              if (d == null) {
                cachedIsNull=true;
              }
            }
          }
          if (d == null && !cachedIsNull) {
            d=resolveDecorator(request,controller,controllerName,actionUri);
            if (cacheEnabled) {
              if (LOG.isDebugEnabled() && d != null) {
                LOG.debug("Caching resolved layout {} for controller {} and action {}",d.getPage(),controllerName,actionUri);
              }
              layoutDecoratorCache.put(cacheKey,new DecoratorCacheValue(d));
            }
          }
        }
      }
 else {
        d=getApplicationDefaultDecorator(request);
      }
    }
 else {
      d=getNamedDecorator(request,layoutName);
    }
    if (d != null) {
      return d;
    }
  }
  return null;
}
