{
  this.expressionCodecDirectiveValue=expressionCodecName;
  if (expressionCodecDirectiveValue == null) {
    expressionCodecDirectiveValue=OutputEncodingSettings.getDefaultValue(OutputEncodingSettings.EXPRESSION_CODEC_NAME);
  }
  Map<String,String> directives=parseDirectives(gspSource);
  if (isSitemeshPreprocessingEnabled(directives.get(SITEMESH_PREPROCESS_DIRECTIVE))) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Preprocessing " + uri + " for sitemesh. Replacing head, title, meta and body elements with sitemesh:capture*.");
    }
    gspSource=sitemeshPreprocessor.addGspSitemeshCapturing(gspSource);
    sitemeshPreprocessMode=true;
  }
  scan=new GroovyPageScanner(gspSource,uri);
  pageName=uri;
  environment=Environment.getCurrent();
  makeName(name);
  makeSourceName(filename);
}
