{
  outWriter=new GroovyPageProxyWriter(new DestinationFactory(){
    public Writer activateDestination() throws IOException {
      StackEntry stackEntry=stack.peek();
      return createEncodingWriter(stackEntry.unwrappedTarget,stackEntry.outEncoder,encodingStateRegistry,WithCodecHelper.OUT_CODEC_NAME);
    }
  }
);
  staticWriter=new GroovyPageProxyWriter(new DestinationFactory(){
    public Writer activateDestination() throws IOException {
      StackEntry stackEntry=stack.peek();
      if (stackEntry.staticEncoder != null) {
        return createEncodingWriter(stackEntry.unwrappedTarget,stackEntry.staticEncoder,encodingStateRegistry,WithCodecHelper.STATIC_CODEC_NAME);
      }
 else {
        return stackEntry.unwrappedTarget;
      }
    }
  }
);
  expressionWriter=new GroovyPageProxyWriter(new DestinationFactory(){
    public Writer activateDestination() throws IOException {
      StackEntry stackEntry=stack.peek();
      return createEncodingWriter(stackEntry.unwrappedTarget,stackEntry.expressionEncoder,encodingStateRegistry,WithCodecHelper.EXPRESSION_CODEC_NAME);
    }
  }
);
  taglibWriter=new GroovyPageProxyWriter(new DestinationFactory(){
    public Writer activateDestination() throws IOException {
      StackEntry stackEntry=stack.peek();
      return createEncodingWriter(stackEntry.unwrappedTarget,stackEntry.taglibEncoder,encodingStateRegistry,WithCodecHelper.TAGLIB_CODEC_NAME);
    }
  }
);
  this.autoSync=attributes.isAutoSync();
  push(attributes,false);
  if (!autoSync) {
    applyWriterThreadLocals(outWriter);
  }
  this.encodingStateRegistry=attributes.getWebRequest().getEncodingStateRegistry();
}
