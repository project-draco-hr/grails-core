{
  PropertyConfig config=getPropertyConfig(property);
  final GrailsDomainClassProperty otherSide=property.getOtherSide();
  oneToOne.setConstrained(otherSide.isHasOne());
  oneToOne.setForeignKeyType(oneToOne.isConstrained() ? ForeignKeyDirection.FOREIGN_KEY_FROM_PARENT : ForeignKeyDirection.FOREIGN_KEY_TO_PARENT);
  oneToOne.setAlternateUniqueKey(true);
  if (config != null && config.getFetch() != null) {
    oneToOne.setFetchMode(config.getFetch());
  }
 else {
    oneToOne.setFetchMode(FetchMode.DEFAULT);
  }
  oneToOne.setReferencedEntityName(otherSide.getDomainClass().getFullName());
  if (otherSide.isHasOne()) {
    PropertyConfig pc=getPropertyConfig(property);
    bindSimpleValue(property,oneToOne,path,pc);
  }
 else {
    oneToOne.setReferencedPropertyName(otherSide.getName());
  }
}
