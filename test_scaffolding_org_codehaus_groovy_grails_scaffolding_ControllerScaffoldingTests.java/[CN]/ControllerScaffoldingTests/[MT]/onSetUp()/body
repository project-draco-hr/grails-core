{
  GroovyClassLoader cl=new GroovyClassLoader();
  Thread.currentThread().setContextClassLoader(cl);
  Class tmpClass=cl.parseClass("class ScaffoldController {\n" + "@Property boolean scaffold = true" + "}");
  Class tmpClass2=cl.parseClass("class Scaffold {\n" + "@Property Long id\n" + "@Property Long version\n"+ "@Property String name\n"+ "}");
  this.controllerClass=tmpClass;
  this.domainClass=tmpClass2;
  this.localContext=new GenericApplicationContext(super.applicationContext);
  ConstructorArgumentValues args=new ConstructorArgumentValues();
  args.addGenericArgumentValue(new Class[]{controllerClass,domainClass});
  args.addGenericArgumentValue(cl);
  MutablePropertyValues propValues=new MutablePropertyValues();
  BeanDefinition grailsApplicationBean=new RootBeanDefinition(DefaultGrailsApplication.class,args,propValues);
  localContext.registerBeanDefinition("grailsApplication",grailsApplicationBean);
  this.localContext.refresh();
  this.grailsApplication=(GrailsApplication)localContext.getBean("grailsApplication");
  DefaultGrailsDomainConfiguration config=new DefaultGrailsDomainConfiguration();
  config.setGrailsApplication(this.grailsApplication);
  Properties props=new Properties();
  props.put("hibernate.connection.username","sa");
  props.put("hibernate.connection.password","");
  props.put("hibernate.connection.url","jdbc:hsqldb:mem:grailsDB");
  props.put("hibernate.connection.driver_class","org.hsqldb.jdbcDriver");
  props.put("hibernate.dialect","org.hibernate.dialect.HSQLDialect");
  props.put("hibernate.hbm2ddl.auto","create-drop");
  config.setProperties(props);
  Thread.currentThread().setContextClassLoader(cl);
  this.sessionFactory=config.buildSessionFactory();
  assertNotNull(this.sessionFactory);
  GrailsRuntimeConfigurator rConfig=new GrailsRuntimeConfigurator(grailsApplication,this.localContext);
  this.appCtx=(ConfigurableApplicationContext)rConfig.configure(new MockServletContext());
  assertNotNull(appCtx);
  GroovyObject domainObject=(GroovyObject)domainClass.newInstance();
  domainObject.setProperty("name","fred");
  domainObject.invokeMethod("save",new Object[0]);
  GroovyObject domainObject2=(GroovyObject)domainClass.newInstance();
  domainObject2.setProperty("name","wilma");
  domainObject2.invokeMethod("save",new Object[0]);
  super.onSetUp();
}
