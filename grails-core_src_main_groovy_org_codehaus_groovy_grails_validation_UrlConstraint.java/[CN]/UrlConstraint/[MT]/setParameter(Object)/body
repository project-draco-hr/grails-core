{
  RegexValidator domainValidator=null;
  if (constraintParameter instanceof Boolean) {
    url=(Boolean)constraintParameter;
  }
 else   if (constraintParameter instanceof String) {
    url=true;
    domainValidator=new RegexValidator((String)constraintParameter);
  }
 else   if (constraintParameter instanceof List<?>) {
    url=true;
    List<?> regexpList=(List<?>)constraintParameter;
    domainValidator=new RegexValidator(regexpList.toArray(new String[regexpList.size()]));
  }
 else {
    throw new IllegalArgumentException("Parameter for constraint [" + ConstrainedProperty.URL_CONSTRAINT + "] of property ["+ constraintPropertyName+ "] of class ["+ constraintOwningClass+ "] must be a boolean, string, or list value");
  }
  validator=new UrlValidator(domainValidator,UrlValidator.ALLOW_ALL_SCHEMES + UrlValidator.ALLOW_2_SLASHES);
  super.setParameter(constraintParameter);
}
