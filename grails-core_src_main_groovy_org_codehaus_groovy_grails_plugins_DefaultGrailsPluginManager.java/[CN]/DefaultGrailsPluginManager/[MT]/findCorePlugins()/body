{
  CorePluginFinder finder=new CorePluginFinder(application);
  finder.setParentApplicationContext(parentCtx);
  List<GrailsPlugin> grailsCorePlugins=new ArrayList<GrailsPlugin>();
  final Class[] corePluginClasses=finder.getPluginClasses();
  for (  Class pluginClass : corePluginClasses) {
    if (pluginClass != null && !Modifier.isAbstract(pluginClass.getModifiers()) && pluginClass != DefaultGrailsPlugin.class) {
      final BinaryGrailsPluginDescriptor binaryDescriptor=finder.getBinaryDescriptor(pluginClass);
      GrailsPlugin plugin;
      if (binaryDescriptor != null) {
        plugin=createBinaryGrailsPlugin(pluginClass,binaryDescriptor);
      }
 else {
        plugin=createGrailsPlugin(pluginClass);
      }
      plugin.setApplicationContext(applicationContext);
      grailsCorePlugins.add(plugin);
    }
  }
  return grailsCorePlugins;
}
