{
  int statusCode;
  if (request.getAttribute("javax.servlet.error.status_code") != null) {
    statusCode=Integer.parseInt(request.getAttribute("javax.servlet.error.status_code").toString());
  }
 else {
    statusCode=500;
  }
  Throwable t=null;
  if (request.getAttribute("javax.servlet.error.exception") != null) {
    t=(Throwable)request.getAttribute("javax.servlet.error.exception");
    if (!(t instanceof GrailsWrappedRuntimeException) && request.getAttribute("exception") == null) {
      request.setAttribute("exception",new GrailsWrappedRuntimeException(getServletContext(),t));
    }
  }
  final UrlMappingsHolder urlMappingsHolder=lookupUrlMappings();
  UrlMappingInfo matchedInfo=null;
  if (t != null) {
    matchedInfo=urlMappingsHolder.matchStatusCode(statusCode,t);
    if (matchedInfo == null) {
      matchedInfo=urlMappingsHolder.matchStatusCode(statusCode,GrailsExceptionResolver.getRootCause(t));
    }
  }
  if (matchedInfo == null) {
    matchedInfo=urlMappingsHolder.matchStatusCode(statusCode);
  }
  final UrlMappingInfo urlMappingInfo=matchedInfo;
  if (urlMappingInfo != null) {
    final GrailsWebRequest webRequest=(GrailsWebRequest)RequestContextHolder.getRequestAttributes();
    request.setAttribute("com.opensymphony.sitemesh.APPLIED_ONCE",null);
    urlMappingInfo.configure(webRequest);
    String viewName=urlMappingInfo.getViewName();
    if (viewName == null || viewName.endsWith(GSP_SUFFIX) || viewName.endsWith(JSP_SUFFIX)) {
      WebUtils.forwardRequestForUrlMappingInfo(request,response,urlMappingInfo,Collections.EMPTY_MAP);
    }
 else {
      ViewResolver viewResolver=WebUtils.lookupViewResolver(getServletContext());
      if (viewResolver != null) {
        View v;
        try {
          v=WebUtils.resolveView(request,urlMappingInfo,viewName,viewResolver);
          IncludeResponseWrapper includeResponse=new IncludeResponseWrapper(response);
          v.render(Collections.EMPTY_MAP,request,response);
        }
 catch (        Exception e) {
          throw new UrlMappingException("Error mapping onto view [" + viewName + "]: "+ e.getMessage(),e);
        }
      }
    }
  }
 else {
    renderDefaultResponse(response,statusCode);
  }
}
