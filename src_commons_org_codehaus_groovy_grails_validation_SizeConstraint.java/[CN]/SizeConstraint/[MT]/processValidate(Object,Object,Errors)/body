{
  Object[] args=new Object[]{constraintPropertyName,constraintOwningClass,propertyValue,range.getFrom(),range.getTo()};
  if (propertyValue == null) {
    return;
  }
  if (propertyValue instanceof Number) {
    if (range.getFrom().compareTo(propertyValue) == 1) {
      rejectValueTooSmall(args,errors,target,propertyValue);
    }
 else     if (range.getTo().compareTo(propertyValue) == -1) {
      rejectValueTooBig(args,errors,target,propertyValue);
    }
    return;
  }
  Integer size=null;
  if (propertyValue.getClass().isArray()) {
    size=new Integer(Array.getLength(propertyValue));
  }
 else   if (propertyValue instanceof Collection) {
    size=new Integer(((Collection)propertyValue).size());
  }
 else   if (propertyValue instanceof String) {
    size=new Integer(((String)propertyValue).length());
  }
  if (!range.contains(size)) {
    if (range.getFrom().compareTo(size) == 1) {
      rejectValueTooSmall(args,errors,target,propertyValue);
    }
 else     if (range.getTo().compareTo(size) == -1) {
      rejectValueTooBig(args,errors,target,propertyValue);
    }
  }
}
