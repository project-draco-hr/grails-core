{
  GrailsApplication application=(GrailsApplication)parent.getBean(GrailsApplication.APPLICATION_ID);
  if (LOG.isDebugEnabled()) {
    LOG.debug("[GrailsContextLoader] Configurating Grails Application");
  }
  if (application.getParentContext() == null) {
    application.setApplicationContext(parent);
  }
  GrailsRuntimeConfigurator configurator;
  if (parent.containsBean(GrailsRuntimeConfigurator.BEAN_ID)) {
    configurator=(GrailsRuntimeConfigurator)parent.getBean(GrailsRuntimeConfigurator.BEAN_ID);
  }
 else {
    configurator=new GrailsRuntimeConfigurator(application,parent);
    if (parent.containsBean(GrailsPluginManager.BEAN_NAME)) {
      GrailsPluginManager pluginManager=(GrailsPluginManager)parent.getBean(GrailsPluginManager.BEAN_NAME);
      configurator.setPluginManager(pluginManager);
    }
  }
  final GrailsPluginManager pluginManager=configurator.getPluginManager();
  WebApplicationContext webContext=configurator.configure(servletContext);
  pluginManager.setApplicationContext(webContext);
  configureServletContextAttributes(servletContext,application,pluginManager,webContext);
  LOG.info("[GrailsContextLoader] Grails application loaded.");
  return webContext;
}
