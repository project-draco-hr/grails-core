{
  if (pluginUrl != null) {
    long currentModified=-1;
    URLConnection conn=null;
    try {
      conn=pluginUrl.openConnection();
      currentModified=conn.getLastModified();
      if (currentModified > pluginLastModified) {
        if (LOG.isInfoEnabled()) {
          LOG.info("Grails plug-in " + this + " changed, reloading changes..");
        }
        GroovyClassLoader gcl=new GroovyClassLoader(application.getClassLoader());
        initialisePlugin(gcl.parseClass(DefaultGroovyMethods.getText(conn.getInputStream())));
        pluginLastModified=currentModified;
        return true;
      }
    }
 catch (    IOException e) {
      LOG.warn("Error reading plugin [" + pluginClass + "] last modified date, cannot reload following change: "+ e.getMessage());
    }
 finally {
      if (conn != null) {
        try {
          conn.getInputStream().close();
        }
 catch (        IOException e) {
          LOG.warn("Error closing URL connection to plugin resource [" + pluginUrl + "]: "+ e.getMessage(),e);
        }
      }
    }
  }
  if (onChangeListener != null) {
    checkForNewResources(this);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Plugin " + this + " checking ["+ watchedResources.length+ "] resources for changes..");
    }
    for (int i=0; i < watchedResources.length; i++) {
      final Resource r=watchedResources[i];
      long modifiedFlag=checkModified(r,modifiedTimes[i]);
      if (modifiedFlag > -1) {
        if (LOG.isInfoEnabled())         LOG.info("Grails plug-in resource [" + r + "] changed, reloading changes..");
        modifiedTimes[i]=modifiedFlag;
        fireModifiedEvent(r,this);
        refreshInfluencedPlugins();
      }
    }
  }
  return false;
}
