{
  Assert.notNull(application);
  WebRuntimeSpringConfiguration springConfig=new WebRuntimeSpringConfiguration(parent,application.getClassLoader());
  if (context != null) {
    springConfig.setServletContext(context);
    this.pluginManager.setServletContext(context);
  }
  if (!this.pluginManager.isInitialised()) {
    this.pluginManager.loadPlugins();
  }
  if (!application.isInitialised()) {
    pluginManager.doArtefactConfiguration();
    application.initialise();
  }
  this.pluginManager.registerProvidedArtefacts(application);
  this.pluginManager.doRuntimeConfiguration(springConfig);
  LOG.debug("[RuntimeConfiguration] Proccessing additional external configurations");
  if (loadExternalBeans)   doPostResourceConfiguration(springConfig);
  WebApplicationContext ctx=(WebApplicationContext)springConfig.getApplicationContext();
  this.pluginManager.setApplicationContext(ctx);
  this.pluginManager.doDynamicMethods();
  ctx.publishEvent(new GrailsContextEvent(ctx,GrailsContextEvent.DYNAMIC_METHODS_REGISTERED));
  performPostProcessing(ctx);
  application.refreshConstraints();
  return ctx;
}
