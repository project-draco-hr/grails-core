{
  GrailsServiceClass[] serviceClasses=application.getGrailsServiceClasses();
  for (int i=0; i < serviceClasses.length; i++) {
    RootBeanDefinition factoryBean=new RootBeanDefinition(GrailsServiceFactory.class);
    MutablePropertyValues mpv=new MutablePropertyValues();
    mpv.addPropertyValue("serviceFullname",serviceClasses[i].getFullName());
    factoryBean.setPropertyValues(mpv);
    String factoryBeanDefinitionName=serviceClasses[i].getFullName() + "Class";
    applicationContext.registerBeanDefinition(factoryBeanDefinitionName,factoryBean);
    RootBeanDefinition factoryMethod=new RootBeanDefinition();
    factoryMethod.setFactoryBeanName(factoryBeanDefinitionName);
    factoryMethod.setFactoryMethodName("getObject");
    if (serviceClasses[i].byName()) {
      factoryMethod.setAutowireMode(AutowireCapableBeanFactory.AUTOWIRE_BY_NAME);
    }
    if (serviceClasses[i].byType()) {
      factoryMethod.setAutowireMode(AutowireCapableBeanFactory.AUTOWIRE_BY_TYPE);
    }
    String serviceName=serviceClasses[i].getFullName() + "Service";
    if (serviceClasses[i].isTransactional()) {
      RootBeanDefinition transactionProxy=new RootBeanDefinition(TransactionProxyFactoryBean.class);
      MutablePropertyValues mpvTx=new MutablePropertyValues();
      mpvTx.addPropertyValue("target",factoryMethod);
      Properties transactionAttributes=new Properties();
      transactionAttributes.setProperty("*","PROPAGATION_REQUIRED");
      mpvTx.addPropertyValue("transactionAttributes",transactionAttributes);
      mpvTx.addPropertyValue("proxyTargetClass","true");
      mpvTx.addPropertyValue("transactionManager",new RuntimeBeanReference("transactionManager"));
      transactionProxy.setPropertyValues(mpvTx);
      applicationContext.registerBeanDefinition(serviceName,transactionProxy);
    }
 else {
      applicationContext.registerBeanDefinition(serviceName,factoryMethod);
    }
  }
}
