{
  Parameter[] parameterTypes=thisAsFirstArgument ? getRemainingParameterTypes(declaredMethod.getParameters()) : declaredMethod.getParameters();
  if (!classNode.hasDeclaredMethod(declaredMethod.getName(),parameterTypes)) {
    BlockStatement methodBody=new BlockStatement();
    ArgumentListExpression arguments=new ArgumentListExpression();
    if (thisAsFirstArgument) {
      arguments.addExpression(AbstractGrailsArtefactTransformer.THIS_EXPRESSION);
    }
    for (    Parameter parameterType : parameterTypes) {
      arguments.addExpression(new VariableExpression(parameterType.getName()));
    }
    ClassNode returnType=nonGeneric(declaredMethod.getReturnType());
    methodBody.addStatement(new ExpressionStatement(new MethodCallExpression(delegate,declaredMethod.getName(),arguments)));
    MethodNode methodNode=new MethodNode(declaredMethod.getName(),Modifier.PUBLIC,returnType,copyParameters(parameterTypes),GrailsArtefactClassInjector.EMPTY_CLASS_ARRAY,methodBody);
    methodNode.addAnnotations(declaredMethod.getAnnotations());
    classNode.addMethod(methodNode);
  }
}
