{
  if (associatedObject != null) {
    GrailsDomainClass associatedDomainClass=persistentProperty.getReferencedDomainClass();
    GrailsDomainClassProperty otherSide=null;
    if (persistentProperty.isBidirectional()) {
      otherSide=persistentProperty.getOtherSide();
    }
    Map associatedConstraintedProperties=associatedDomainClass.getConstrainedProperties();
    GrailsDomainClassProperty[] associatedPersistentProperties=associatedDomainClass.getPersistantProperties();
    String nestedPath=errors.getNestedPath();
    try {
      errors.setNestedPath(nestedPath + propertyName);
      for (int i=0; i < associatedPersistentProperties.length; i++) {
        GrailsDomainClassProperty associatedPersistentProperty=associatedPersistentProperties[i];
        if (associatedPersistentProperty.equals(otherSide))         continue;
        String associatedPropertyName=associatedPersistentProperty.getName();
        if (associatedConstraintedProperties.containsKey(associatedPropertyName)) {
          validatePropertyWithConstraint(errors.getNestedPath() + associatedPropertyName,associatedObject,errors,new BeanWrapperImpl(associatedObject),associatedConstraintedProperties);
        }
        if (associatedPersistentProperty.isAssociation()) {
          cascadeToAssociativeProperty(errors,new BeanWrapperImpl(associatedObject),associatedPersistentProperty);
        }
      }
    }
  finally {
      errors.setNestedPath(nestedPath);
    }
  }
}
