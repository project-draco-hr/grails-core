{
  BeanWrapper bean=new BeanWrapperImpl(target);
  HibernateTemplate t=getHibernateTemplate();
  GrailsDomainClassProperty[] props=domainClass.getPersistentProperties();
  for (int i=0; i < props.length; i++) {
    GrailsDomainClassProperty prop=props[i];
    if (!prop.isManyToOne() && !prop.isOneToOne()) {
      continue;
    }
    Object propValue=bean.getPropertyValue(prop.getName());
    if (propValue == null || t.contains(propValue)) {
      continue;
    }
    GrailsDomainClass otherSide=(GrailsDomainClass)application.getArtefact(DomainClassArtefactHandler.TYPE,prop.getType().getName());
    if (otherSide == null) {
      continue;
    }
    BeanWrapper propBean=new BeanWrapperImpl(propValue);
    try {
      Serializable id=(Serializable)propBean.getPropertyValue(otherSide.getIdentifier().getName());
      if (id != null) {
        final Object propVal=t.get(prop.getType(),id);
        if (propVal != null) {
          bean.setPropertyValue(prop.getName(),propVal);
        }
      }
    }
 catch (    InvalidPropertyException ipe) {
    }
  }
}
