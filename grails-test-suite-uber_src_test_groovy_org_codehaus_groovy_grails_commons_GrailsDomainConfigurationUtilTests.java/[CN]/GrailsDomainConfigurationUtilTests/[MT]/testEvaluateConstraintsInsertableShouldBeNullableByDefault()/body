{
  GroovyClassLoader cl=new GroovyClassLoader();
  GrailsDomainClass domainClass=new DefaultGrailsDomainClass(cl.parseClass("class TestInsertableUpdateableDomain {\n" + "    Long id \n" + "    Long version \n"+ "    String testString1 \n"+ "    String testString2 \n"+ "\n"+ "    static mapping = {\n"+ "       testString1 insertable:false \n"+ "       testString2 max:50 \n"+ "    }\n"+ "}"));
  getDomainConfig(cl,new Class[]{domainClass.getClazz()});
  Map<String,ConstrainedProperty> mapping=new HibernateConstraintsEvaluator().evaluate(domainClass.getClazz(),domainClass.getProperties());
  ConstrainedProperty property1=mapping.get("testString1");
  assertTrue("constraint was not nullable and should be",((NullableConstraint)property1.getAppliedConstraint(ConstrainedProperty.NULLABLE_CONSTRAINT)).isNullable());
  ConstrainedProperty property2=mapping.get("testString2");
  assertFalse("constraint was nullable and shouldn't be",((NullableConstraint)property2.getAppliedConstraint(ConstrainedProperty.NULLABLE_CONSTRAINT)).isNullable());
}
