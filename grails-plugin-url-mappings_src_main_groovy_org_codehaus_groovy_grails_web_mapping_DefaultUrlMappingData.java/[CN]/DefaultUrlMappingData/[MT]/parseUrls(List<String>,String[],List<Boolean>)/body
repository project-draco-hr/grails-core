{
  StringBuilder buf=new StringBuilder();
  for (  String t : tokens) {
    String token=t.trim();
    if (token.equals(SLASH)) {
      continue;
    }
    String optionalExtensionPattern=UrlMapping.OPTIONAL_EXTENSION_WILDCARD + '?';
    boolean hasOptionalExtension=token.endsWith(optionalExtensionPattern);
    String optionalExtension=null;
    if (hasOptionalExtension) {
      int i=token.indexOf(optionalExtensionPattern);
      optionalExtension=token.substring(i,token.length());
      token=token.substring(0,i);
    }
    boolean isOptional=false;
    if (token.endsWith(QUESTION_MARK)) {
      urls.add(buf.toString());
      buf.append(SLASH).append(token);
      isOptional=true;
    }
 else {
      buf.append(SLASH).append(token);
    }
    if (CAPTURED_WILDCARD.equals(token)) {
      if (isOptional) {
        optionalTokens.add(Boolean.TRUE);
      }
 else {
        optionalTokens.add(Boolean.FALSE);
      }
    }
    if (CAPTURED_DOUBLE_WILDCARD.equals(token)) {
      optionalTokens.add(Boolean.TRUE);
    }
    if (optionalExtension != null) {
      buf.append(optionalExtension);
    }
  }
  urls.add(buf.toString());
  Collections.reverse(urls);
}
