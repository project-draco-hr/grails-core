{
  int statusCode;
  if (response.isCommitted())   return;
  if (request.getAttribute("javax.servlet.error.status_code") != null) {
    statusCode=Integer.parseInt(request.getAttribute("javax.servlet.error.status_code").toString());
  }
 else {
    statusCode=500;
  }
  Throwable t=null;
  if (request.getAttribute("javax.servlet.error.exception") != null) {
    t=(Throwable)request.getAttribute("javax.servlet.error.exception");
    if (!(t instanceof GrailsWrappedRuntimeException) && request.getAttribute("exception") == null) {
      request.setAttribute("exception",new GrailsWrappedRuntimeException(getServletContext(),t));
    }
  }
  final UrlMappingsHolder urlMappingsHolder=(UrlMappingsHolder)getBean(UrlMappingsHolder.BEAN_ID);
  UrlMappingInfo matchedInfo=null;
  if (t != null) {
    createStackTraceFilterer().filter(t,true);
    matchedInfo=urlMappingsHolder.matchStatusCode(statusCode,t);
    if (matchedInfo == null) {
      matchedInfo=urlMappingsHolder.matchStatusCode(statusCode,GrailsExceptionResolver.getRootCause(t));
    }
  }
  if (matchedInfo == null) {
    matchedInfo=urlMappingsHolder.matchStatusCode(statusCode);
  }
  final UrlMappingInfo urlMappingInfo=matchedInfo;
  if (urlMappingInfo != null) {
    RequestAttributes requestAttributes=RequestContextHolder.getRequestAttributes();
    boolean restoreOriginalRequestAttributes=false;
    if (requestAttributes instanceof GrailsWebRequest) {
      final GrailsWebRequest webRequest=(GrailsWebRequest)requestAttributes;
      urlMappingInfo.configure(webRequest);
    }
 else {
      restoreOriginalRequestAttributes=true;
      GrailsWebRequest webRequest=new GrailsWebRequest(request,response,getServletContext());
      RequestContextHolder.setRequestAttributes(webRequest);
      urlMappingInfo.configure(webRequest);
    }
    request.setAttribute("com.opensymphony.sitemesh.APPLIED_ONCE",null);
    try {
      String viewName=urlMappingInfo.getViewName();
      if (viewName == null || viewName.endsWith(GSP_SUFFIX) || viewName.endsWith(JSP_SUFFIX)) {
        WebUtils.forwardRequestForUrlMappingInfo(request,response,urlMappingInfo,Collections.EMPTY_MAP);
      }
 else {
        ViewResolver viewResolver=WebUtils.lookupViewResolver(getServletContext());
        if (viewResolver != null) {
          View v;
          try {
            v=WebUtils.resolveView(request,urlMappingInfo,viewName,viewResolver);
            v.render(Collections.EMPTY_MAP,request,response);
          }
 catch (          Throwable e) {
            createStackTraceFilterer().filter(e);
            renderDefaultResponse(response,statusCode,"Internal Server Error",e.getMessage());
          }
        }
      }
    }
  finally {
      if (restoreOriginalRequestAttributes) {
        RequestContextHolder.setRequestAttributes(requestAttributes);
      }
    }
  }
 else {
    renderDefaultResponse(response,statusCode);
  }
}
