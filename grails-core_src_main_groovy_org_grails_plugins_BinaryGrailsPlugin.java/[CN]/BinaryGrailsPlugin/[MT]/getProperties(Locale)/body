{
  Resource url=this.baseResourcesResource;
  Properties properties=null;
  if (url != null) {
    StaticResourceLoader resourceLoader=new StaticResourceLoader();
    resourceLoader.setBaseResource(url);
    ResourcePatternResolver resolver=new PathMatchingResourcePatternResolver(resourceLoader);
    try {
      Resource[] resources=resolver.getResources('*' + PROPERTIES_EXTENSION);
      resources=resources.length > 0 ? filterResources(resources,locale) : resources;
      if (resources.length > 0) {
        properties=new Properties();
        Arrays.sort(resources,new Comparator<Resource>(){
          @Override public int compare(          Resource o1,          Resource o2){
            String f1=o1.getFilename();
            String f2=o2.getFilename();
            int firstUnderscoreCount=StringUtils.countOccurrencesOf(f1,"_");
            int secondUnderscoreCount=StringUtils.countOccurrencesOf(f2,"_");
            if (firstUnderscoreCount == secondUnderscoreCount) {
              return 0;
            }
 else {
              return firstUnderscoreCount > secondUnderscoreCount ? 1 : -1;
            }
          }
        }
);
        loadFromResources(properties,resources);
      }
    }
 catch (    IOException e) {
      return null;
    }
  }
  return properties;
}
