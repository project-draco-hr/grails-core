{
  Class<?> domainClass=target.getClass();
  Method method=null;
  if (validatedFieldsList == null) {
    method=ReflectionUtils.findMethod(domainClass,BEFORE_VALIDATE);
    if (method == null) {
      method=ReflectionUtils.findMethod(domainClass,BEFORE_VALIDATE,List.class);
    }
  }
 else {
    method=ReflectionUtils.findMethod(domainClass,BEFORE_VALIDATE,List.class);
    if (method == null) {
      method=ReflectionUtils.findMethod(domainClass,BEFORE_VALIDATE);
    }
  }
  if (method != null) {
    ReflectionUtils.makeAccessible(method);
    Class<?>[] parameterTypes=method.getParameterTypes();
    if (parameterTypes.length == 1) {
      ReflectionUtils.invokeMethod(method,target,validatedFieldsList);
    }
 else {
      ReflectionUtils.invokeMethod(method,target);
    }
  }
}
