{
  if (grailsProp.isAssociation()) {
    if (!grailsProp.isBidirectional() && grailsProp.isOneToMany()) {
      String prefix=namingStrategy.classToTableName(grailsProp.getDomainClass().getName());
      String columnName=namingStrategy.propertyToColumnName(grailsProp.getName()) + FOREIGN_KEY_SUFFIX;
      column.setName(prefix + '_' + columnName);
    }
 else {
      column.setName(namingStrategy.propertyToColumnName(grailsProp.getName()) + FOREIGN_KEY_SUFFIX);
    }
    column.setNullable(true);
  }
 else {
    column.setNullable(grailsProp.isOptional());
    column.setName(namingStrategy.propertyToColumnName(grailsProp.getName()));
    ConstrainedProperty constrainedProperty=getConstrainedProperty(grailsProp);
    if (constrainedProperty != null) {
      if (String.class.isAssignableFrom(grailsProp.getType()) || byte[].class.isAssignableFrom(grailsProp.getType())) {
        bindStringColumnConstraints(column,constrainedProperty);
      }
      if (Number.class.isAssignableFrom(grailsProp.getType())) {
        bindNumericColumnConstraints(column,constrainedProperty);
      }
    }
  }
  if (!grailsProp.getDomainClass().isRoot()) {
    if (LOG.isDebugEnabled())     LOG.debug("[GrailsDomainBinder] Sub class property [" + grailsProp.getName() + "] for column name ["+ column.getName()+ "] in table ["+ table.getName()+ "] set to nullable");
    column.setNullable(true);
  }
  if (LOG.isDebugEnabled())   LOG.debug("[GrailsDomainBinder] bound property [" + grailsProp.getName() + "] to column name ["+ column.getName()+ "] in table ["+ table.getName()+ "]");
}
