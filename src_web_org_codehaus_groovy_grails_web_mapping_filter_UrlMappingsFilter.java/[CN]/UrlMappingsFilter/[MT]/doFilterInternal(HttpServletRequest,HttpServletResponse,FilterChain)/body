{
  UrlMappingsHolder holder=lookupUrlMappings();
  GrailsApplication application=lookupApplication();
  GrailsWebRequest webRequest=(GrailsWebRequest)request.getAttribute(GrailsApplicationAttributes.WEB_REQUEST);
  GrailsClass[] controllers=application.getArtefacts(ControllerArtefactHandler.TYPE);
  if (controllers == null || controllers.length == 0 || holder == null) {
    processFilterChain(request,response,filterChain);
    return;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Executing URL mapping filter...");
    LOG.debug(holder);
  }
  String uri=urlHelper.getPathWithinApplication(request);
  UrlMappingInfo[] urlInfos=holder.matchAll(uri);
  WrappedResponseHolder.setWrappedResponse(response);
  boolean dispatched=false;
  try {
    for (int i=0; i < urlInfos.length; i++) {
      UrlMappingInfo info=urlInfos[i];
      if (info != null) {
        info.configure(webRequest);
        String action=info.getActionName() == null ? "" : info.getActionName();
        final String viewName=info.getViewName();
        if (viewName == null) {
          final String controllerName=info.getControllerName();
          GrailsClass controller=application.getArtefactForFeature(ControllerArtefactHandler.TYPE,SLASH + controllerName + SLASH+ action);
          if (controller == null) {
            continue;
          }
        }
        dispatched=true;
        if (viewName == null || viewName.endsWith(GSP_SUFFIX) || viewName.endsWith(JSP_SUFFIX)) {
          String forwardUrl=buildDispatchUrlForMapping(request,info);
          if (LOG.isDebugEnabled()) {
            LOG.debug("Matched URI [" + uri + "] to URL mapping ["+ info+ "], forwarding to ["+ forwardUrl+ "] with response ["+ response.getClass()+ "]");
          }
          RequestDispatcher dispatcher=request.getRequestDispatcher(forwardUrl);
          populateWebRequestWithInfo(webRequest,info);
          WebUtils.exposeForwardRequestAttributes(request);
          dispatcher.forward(request,response);
        }
 else {
          ViewResolver viewResolver=lookupViewResolver();
          if (viewResolver != null) {
            View v;
            try {
              if (viewName.startsWith(String.valueOf(SLASH))) {
                v=viewResolver.resolveViewName(viewName,request.getLocale());
              }
 else {
                String controllerName=info.getControllerName();
                StringBuffer buf=new StringBuffer();
                buf.append(SLASH);
                if (controllerName != null) {
                  buf.append(controllerName).append(SLASH);
                }
                buf.append(viewName);
                v=viewResolver.resolveViewName(buf.toString(),request.getLocale());
              }
              v.render(Collections.EMPTY_MAP,request,response);
            }
 catch (            Exception e) {
              throw new UrlMappingException("Error mapping onto view [" + viewName + "]: "+ e.getMessage(),e);
            }
          }
        }
        break;
      }
    }
  }
  finally {
    WrappedResponseHolder.setWrappedResponse(null);
  }
  if (!dispatched) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("No match found, processing remaining filter chain.");
    }
    processFilterChain(request,response,filterChain);
  }
}
