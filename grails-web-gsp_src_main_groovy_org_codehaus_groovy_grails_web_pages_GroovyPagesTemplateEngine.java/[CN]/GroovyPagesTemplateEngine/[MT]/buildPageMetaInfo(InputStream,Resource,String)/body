{
  String name=establishPageName(res,pageName);
  GroovyPageParser parser;
  String path=getPathForResource(res);
  try {
    parser=new GroovyPageParser(name,path,path,inputStream,null,null);
    if (grailsApplication != null) {
      Map<String,Object> config=grailsApplication.getFlatConfig();
      Object keepDirObj=config.get(GroovyPageParser.CONFIG_PROPERTY_GSP_KEEPGENERATED_DIR);
      if (keepDirObj instanceof File) {
        parser.setKeepGeneratedDirectory((File)keepDirObj);
      }
 else       if (keepDirObj != null) {
        parser.setKeepGeneratedDirectory(new File(String.valueOf(keepDirObj)));
      }
    }
  }
 catch (  IOException e) {
    throw new GroovyPagesException("I/O parsing Groovy page [" + (res != null ? res.getDescription() : name) + "]: "+ e.getMessage(),e);
  }
  InputStream in=parser.parse();
  GroovyPageMetaInfo metaInfo=createPageMetaInfo(parser,in);
  metaInfo.applyLastModifiedFromResource(res);
  try {
    metaInfo.setPageClass(compileGroovyPage(in,name,path,metaInfo));
    metaInfo.setHtmlParts(parser.getHtmlPartsArray());
  }
 catch (  GroovyPagesException e) {
    metaInfo.setCompilationException(e);
  }
  return metaInfo;
}
