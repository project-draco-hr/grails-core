{
  boolean viewNameBlank=!StringUtils.hasLength(viewName);
  ModelAndView explicitModelAndView=(ModelAndView)controller.getProperty(ControllerDynamicMethods.MODEL_AND_VIEW_PROPERTY);
  if (!webRequest.isRenderView()) {
    return null;
  }
  if (explicitModelAndView != null) {
    return explicitModelAndView;
  }
  if (returnValue == null) {
    if (viewNameBlank) {
      return null;
    }
    Map model;
    if (!chainModel.isEmpty()) {
      model=new CompositeMap(chainModel,new GrailsControllerBeanMap(controller));
    }
 else {
      model=new GrailsControllerBeanMap(controller);
    }
    return new ModelAndView(viewName,model);
  }
  if (returnValue instanceof Map) {
    Map finalModel=new LinkedHashMap();
    if (!chainModel.isEmpty()) {
      finalModel.putAll(chainModel);
    }
    Map returnModel=(Map)returnValue;
    finalModel.putAll(returnModel);
    removeProxiesFromModelObjects(finalModel);
    return new ModelAndView(viewName,finalModel);
  }
  if (returnValue instanceof ModelAndView) {
    ModelAndView modelAndView=(ModelAndView)returnValue;
    Map modelMap=modelAndView.getModel();
    removeProxiesFromModelObjects(modelMap);
    if (!chainModel.isEmpty()) {
      modelAndView.addAllObjects(chainModel);
    }
    if (modelAndView.getView() == null && modelAndView.getViewName() == null) {
      if (viewNameBlank) {
        throw new NoViewNameDefinedException("ModelAndView instance returned by and no view name defined by nor for closure on property [" + closurePropertyName + "] in controller ["+ controller.getClass()+ "]!");
      }
      modelAndView.setViewName(viewName);
    }
    return modelAndView;
  }
  Map model;
  if (!chainModel.isEmpty()) {
    model=new CompositeMap(chainModel,new GrailsControllerBeanMap(controller));
  }
 else {
    model=new GrailsControllerBeanMap(controller);
  }
  return new ModelAndView(viewName,model);
}
