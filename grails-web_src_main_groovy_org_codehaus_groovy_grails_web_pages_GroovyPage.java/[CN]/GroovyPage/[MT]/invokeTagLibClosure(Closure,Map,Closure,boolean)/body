{
  Closure tag=(Closure)tagLibClosure.clone();
  if (!(attrs instanceof GroovyPageAttributes)) {
    attrs=new GroovyPageAttributes(attrs);
  }
  ((GroovyPageAttributes)attrs).setGspTagSyntaxCall(true);
  boolean encodeAsPushedToStack=false;
  try {
    if (attrs.containsKey("encodeAs")) {
      GroovyPageOutputStackAttributes.Builder builder=createOutputStackAttributesBuilder(webRequest,attrs);
      outputStack.push(builder.build());
      encodeAsPushedToStack=true;
    }
    Object tagresult=null;
switch (tag.getParameterTypes().length) {
case 1:
      tagresult=tag.call(new Object[]{attrs});
    if (returnsObject && tagresult != null && !(tagresult instanceof Writer)) {
      out.print(tagresult);
    }
  if (body != null && body != EMPTY_BODY_CLOSURE) {
    body.call();
  }
break;
case 2:
if (tag.getParameterTypes().length == 2) {
tagresult=tag.call(new Object[]{attrs,(body != null) ? body : EMPTY_BODY_CLOSURE});
if (returnsObject && tagresult != null && !(tagresult instanceof Writer)) {
  out.print(tagresult);
}
}
break;
}
}
  finally {
if (encodeAsPushedToStack) outputStack.pop();
}
}
