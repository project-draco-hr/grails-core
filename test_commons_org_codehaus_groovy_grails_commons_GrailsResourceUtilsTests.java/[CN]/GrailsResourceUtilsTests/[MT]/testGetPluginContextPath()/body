{
  Resource viewsDir=GrailsResourceUtils.getViewsDir(new UrlResource(TEST_CONTROLLER_URL));
  Resource pluginViews=GrailsResourceUtils.getViewsDir(new UrlResource(TEST_PLUGIN_CTRL));
  Resource webInfViews=GrailsResourceUtils.getViewsDir(new UrlResource(WEBINF_CONTROLLER));
  Resource webInfPluginViews=GrailsResourceUtils.getViewsDir(new UrlResource(WEBINF_PLUGIN_CTRL));
  String webInfViewsPath=GrailsResourceUtils.getRelativeInsideWebInf(webInfViews);
  String webInfPluginViewsPath=GrailsResourceUtils.getRelativeInsideWebInf(webInfPluginViews);
  String pluginViewsPath=GrailsResourceUtils.getRelativeInsideWebInf(pluginViews);
  String viewsPath=GrailsResourceUtils.getRelativeInsideWebInf(viewsDir);
  MockServletContext servletContext=new MockServletContext("/myapp");
  MockHttpServletRequest request=new MockHttpServletRequest(servletContext);
  request.setContextPath("/myapp");
  assertEquals("/myapp",GrailsResourceUtils.getStaticResourcePathForResource(new UrlResource(TEST_CONTROLLER_URL),request.getContextPath()));
  assertEquals("/myapp/plugins/myplugin",GrailsResourceUtils.getStaticResourcePathForResource(new UrlResource(TEST_PLUGIN_CTRL),request.getContextPath()));
  assertEquals("/myapp",GrailsResourceUtils.getStaticResourcePathForResource(new UrlResource(WEBINF_CONTROLLER),request.getContextPath()));
  assertEquals("/myapp/plugins/myplugin",GrailsResourceUtils.getStaticResourcePathForResource(new UrlResource(WEBINF_PLUGIN_CTRL),request.getContextPath()));
}
