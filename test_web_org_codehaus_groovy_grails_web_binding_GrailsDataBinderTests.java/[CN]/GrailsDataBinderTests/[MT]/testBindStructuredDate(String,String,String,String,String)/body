{
  MockHttpServletRequest request=new MockHttpServletRequest();
  request.addParameter("myDate","struct");
  assertNotNull(year);
  int expectedYearValue=Integer.parseInt(year);
  request.addParameter("myDate_year",year);
  int expectedMonthValue=0;
  if (month != null) {
    request.addParameter("myDate_month",month);
    expectedMonthValue=Integer.parseInt(month) - 1;
  }
  int expectedDayValue=1;
  if (day != null) {
    expectedDayValue=Integer.parseInt(day);
    request.addParameter("myDate_day",day);
  }
  int expectedHourValue=0;
  if (hour != null) {
    expectedHourValue=Integer.parseInt(hour);
    request.addParameter("myDate_hour",hour);
  }
  int expectedMinuteValue=0;
  if (minute != null) {
    expectedMinuteValue=Integer.parseInt(minute);
    request.addParameter("myDate_minute",minute);
  }
  TestBean testBean=new TestBean();
  GrailsDataBinder binder=GrailsDataBinder.createBinder(testBean,"testBean",request);
  binder.bind(request);
  assertNotNull(testBean.getMyDate());
  Calendar c=new GregorianCalendar();
  c.setTime(testBean.getMyDate());
  assertEquals(expectedYearValue,c.get(Calendar.YEAR));
  assertEquals(expectedMonthValue,c.get(Calendar.MONTH));
  assertEquals(expectedDayValue,c.get(Calendar.DAY_OF_MONTH));
  assertEquals(expectedHourValue,c.get(Calendar.HOUR_OF_DAY));
  assertEquals(expectedMinuteValue,c.get(Calendar.MINUTE));
}
