{
  assertNotNull(applicationContext);
  assertNotNull(grailsApplication);
  GrailsControllerClass controllerClass=grailsApplication.getController("TestController");
  if (controllerClass == null) {
    Class groovyClass=grailsApplication.getClassLoader().parseClass("class TestController {\n" + "@Property list = {}\n" + "}");
    controllerClass=grailsApplication.addControllerClass(groovyClass);
  }
  GrailsTagLibClass tagClass=grailsApplication.getTagLibClassForTag(name);
  if (tagClass == null)   return null;
  GroovyObject mockController=(GroovyObject)controllerClass.newInstance();
  GroovyObject tagLibrary=(GroovyObject)tagClass.newInstance();
  MockServletContext servletContext=new MockServletContext();
  servletContext.setAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT,applicationContext);
  GrailsControllerHelper helper=new SimpleGrailsControllerHelper(grailsApplication,applicationContext,servletContext);
  HttpServletRequest request=new MockHttpServletRequest();
  HttpServletResponse response=new MockHttpServletResponse();
  new ControllerDynamicMethods(mockController,helper,request,response);
  new TagLibDynamicMethods(tagLibrary,mockController);
  tagLibrary.setProperty(TagLibDynamicMethods.OUT_PROPERTY,out);
  return (Closure)tagLibrary.getProperty(name);
}
