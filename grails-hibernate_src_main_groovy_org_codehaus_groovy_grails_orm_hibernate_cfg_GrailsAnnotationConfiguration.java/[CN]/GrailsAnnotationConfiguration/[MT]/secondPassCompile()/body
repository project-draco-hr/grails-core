{
  final Thread currentThread=Thread.currentThread();
  final ClassLoader originalContextLoader=currentThread.getContextClassLoader();
  if (!configLocked) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("[GrailsAnnotationConfiguration] [" + domainClasses.size() + "] Grails domain classes to bind to persistence runtime");
    }
    DefaultGrailsDomainConfiguration.configureDomainBinder(grailsApplication,domainClasses);
    for (    GrailsDomainClass domainClass : domainClasses) {
      final String fullClassName=domainClass.getFullName();
      String hibernateConfig=fullClassName.replace('.','/') + ".hbm.xml";
      final ClassLoader loader=originalContextLoader;
      if (loader.getResource(hibernateConfig) != null)       continue;
      final Mappings mappings=super.createMappings();
      if (!GrailsHibernateUtil.usesDatasource(domainClass,dataSourceName)) {
        continue;
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("[GrailsAnnotationConfiguration] Binding persistent class [" + fullClassName + "]");
      }
      Mapping m=GrailsDomainBinder.getMapping(domainClass);
      mappings.setAutoImport(m == null || m.getAutoImport());
      GrailsDomainBinder.bindClass(domainClass,mappings,sessionFactoryBeanName);
    }
  }
  try {
    currentThread.setContextClassLoader(grailsApplication.getClassLoader());
    super.secondPassCompile();
  }
  finally {
    currentThread.setContextClassLoader(originalContextLoader);
  }
  configLocked=true;
}
