{
  active=true;
  for (  String directory : compiler.getSrcDirectories()) {
    addWatchDirectory(new File(directory),compilerExtensions);
  }
  Resource[] pluginSourceFiles=compiler.getPluginSettings().getPluginSourceFiles();
  for (  Resource pluginSourceFile : pluginSourceFiles) {
    try {
      if (pluginSourceFile.getFile().isDirectory()) {
        addWatchDirectory(pluginSourceFile.getFile(),compilerExtensions);
      }
    }
 catch (    IOException e) {
    }
  }
  addListener(new FileChangeListener(){
    public void onChange(    File file){
      LOG.info("File [" + file + "] changed. Applying changes to application.");
      if (descriptorToPluginMap.containsKey(file)) {
        reloadPlugin(file);
      }
 else {
        compileIfSource(file);
        informPluginManager(file,false);
      }
    }
    public void onNew(    File file){
      LOG.info("File [" + file + "] added. Applying changes to application.");
      sleep(5000);
      compileIfSource(file);
      informPluginManager(file,true);
    }
  }
);
  GrailsPlugin[] allPlugins=pluginManager.getAllPlugins();
  for (  GrailsPlugin plugin : allPlugins) {
    GrailsPluginInfo info=compiler.getPluginSettings().getPluginInfoForName(plugin.getFileSystemShortName());
    if (info != null && info.getDescriptor() != null) {
      try {
        Resource descriptor=info.getDescriptor();
        plugin.setDescriptor(descriptor);
        File pluginFile=descriptor.getFile();
        descriptorToPluginMap.put(pluginFile,plugin);
        addWatchFile(pluginFile);
      }
 catch (      IOException e) {
      }
    }
    List<WatchPattern> watchPatterns=plugin.getWatchedResourcePatterns();
    if (watchPatterns != null) {
      for (      WatchPattern watchPattern : watchPatterns) {
        if (watchPattern.getFile() != null) {
          addWatchFile(watchPattern.getFile());
        }
 else         if (watchPattern.getDirectory() != null) {
          addWatchDirectory(watchPattern.getDirectory(),watchPattern.getExtension());
        }
      }
    }
  }
  super.run();
}
