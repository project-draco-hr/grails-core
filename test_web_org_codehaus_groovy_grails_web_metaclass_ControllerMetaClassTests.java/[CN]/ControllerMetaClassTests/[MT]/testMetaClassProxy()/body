{
  GroovyClassLoader gcl=new GroovyClassLoader();
  Class groovyClass=gcl.parseClass("class TestClass {\n" + "def testMethod() {\n" + "}\n"+ "}");
  ProxyMetaClass pmc=ProxyMetaClass.getInstance(groovyClass);
  pmc.setInterceptor(new TracingInterceptor(){
    public boolean doInvoke(){
      return false;
    }
  }
);
  GroovyObject go=(GroovyObject)groovyClass.newInstance();
  go.setMetaClass(pmc);
  try {
    go.invokeMethod("testMethod",new Object[]{});
    go.invokeMethod("fakeMethod",new Object[]{});
  }
 catch (  MissingMethodException mme) {
    fail("Missing method exception should not have been thrown!");
  }
}
