{
  prop.setName(grailsProperty.getName());
  if (isBidirectionalManyToOneWithListMapping(grailsProperty,prop)) {
    prop.setInsertable(false);
    prop.setUpdateable(false);
  }
 else {
    prop.setInsertable(getInsertableness(grailsProperty));
    prop.setUpdateable(getUpdateableness(grailsProperty));
  }
  prop.setPropertyAccessorName(mappings.getDefaultAccess());
  prop.setOptional(grailsProperty.isOptional());
  setCascadeBehaviour(grailsProperty,prop);
  boolean isLazyable=grailsProperty.isOneToOne() || grailsProperty.isManyToOne() || grailsProperty.isEmbedded()|| grailsProperty.isPersistent() && !grailsProperty.isAssociation() && !grailsProperty.isIdentity();
  if (isLazyable) {
    final boolean isLazy=getLaziness(grailsProperty);
    prop.setLazy(isLazy);
    if (isLazy && (grailsProperty.isManyToOne() || grailsProperty.isOneToOne())) {
      HibernatePluginSupport.handleLazyProxy(grailsProperty.getDomainClass(),grailsProperty);
    }
  }
}
