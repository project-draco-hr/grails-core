{
  BlockStatement methodBody=new BlockStatement();
  ArgumentListExpression arguments=new ArgumentListExpression();
  arguments.addExpression(tagLibraryLookupMethodCall).addExpression(new MethodCallExpression(new VariableExpression("this"),GET_TAG_LIB_NAMESPACE_METHOD_NAME,new ArgumentListExpression())).addExpression(new ConstantExpression(tagName)).addExpression(includeAttrs ? new CastExpression(ClassHelper.make(Map.class),ATTRS_EXPRESSION) : new MapExpression()).addExpression(includeBody ? BODY_EXPRESSION : NULL_EXPRESSION).addExpression(new CastExpression(ClassHelper.make(GrailsWebRequest.class),CURRENT_REQUEST_ATTRIBUTES_METHOD_CALL));
  methodBody.addStatement(new ExpressionStatement(new MethodCallExpression(new ClassExpression(GROOVY_PAGE_CLASS_NODE),"captureTagOutput",arguments)));
  if (includeBody && includeAttrs) {
    if (!methodExists(classNode,tagName,MAP_CLOSURE_PARAMETERS)) {
      classNode.addMethod(new MethodNode(tagName,Modifier.PUBLIC,OBJECT_CLASS,MAP_CLOSURE_PARAMETERS,null,methodBody));
    }
  }
 else   if (includeAttrs && !includeBody) {
    if (!methodExists(classNode,tagName,MAP_PARAMETERS)) {
      classNode.addMethod(new MethodNode(tagName,Modifier.PUBLIC,OBJECT_CLASS,MAP_PARAMETERS,null,methodBody));
    }
  }
 else   if (includeBody) {
    if (!methodExists(classNode,tagName,CLOSURE_PARAMETERS)) {
      classNode.addMethod(new MethodNode(tagName,Modifier.PUBLIC,OBJECT_CLASS,CLOSURE_PARAMETERS,null,methodBody));
    }
  }
 else {
    if (!methodExists(classNode,tagName,Parameter.EMPTY_ARRAY)) {
      classNode.addMethod(new MethodNode(tagName,Modifier.PUBLIC,OBJECT_CLASS,Parameter.EMPTY_ARRAY,null,methodBody));
    }
  }
}
