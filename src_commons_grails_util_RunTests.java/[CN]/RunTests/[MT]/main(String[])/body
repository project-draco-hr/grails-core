{
  try {
    log.info("Bootstrapping Grails from classpath");
    ConfigurableApplicationContext appCtx=(ConfigurableApplicationContext)GrailsUtil.bootstrapGrailsFromClassPath();
    GrailsApplication application=(GrailsApplication)appCtx.getBean(GrailsApplication.APPLICATION_ID);
    Class[] allClasses=application.getAllClasses();
    log.debug("Going through [" + allClasses.length + "] classes");
    TestSuite s=new TestSuite();
    for (int i=0; i < allClasses.length; i++) {
      Class clazz=allClasses[i];
      if (TestCase.class.isAssignableFrom(clazz) && !Modifier.isAbstract(clazz.getModifiers())) {
        log.debug("Adding test [" + clazz.getName() + "]");
        s.addTest(new GrailsTestSuite(appCtx.getBeanFactory(),clazz));
      }
 else {
        log.debug("[" + clazz.getName() + "] is not a test case.");
      }
    }
    SessionFactory sessionFactory=(SessionFactory)appCtx.getBean(GrailsRuntimeConfigurator.SESSION_FACTORY_BEAN);
    try {
      Session session=SessionFactoryUtils.getSession(sessionFactory,true);
      TransactionSynchronizationManager.bindResource(sessionFactory,new SessionHolder(session));
      TestResult r=TestRunner.run(s);
      if (r.errorCount() > 0 || r.failureCount() > 0) {
        System.err.println("Tests failed!");
      }
    }
  finally {
      SessionHolder sessionHolder=(SessionHolder)TransactionSynchronizationManager.unbindResource(sessionFactory);
      SessionFactoryUtils.releaseSession(sessionHolder.getSession(),sessionFactory);
    }
  }
 catch (  Exception e) {
    log.error("Error executing tests: " + e.getMessage(),e);
  }
 finally {
    System.exit(0);
  }
}
