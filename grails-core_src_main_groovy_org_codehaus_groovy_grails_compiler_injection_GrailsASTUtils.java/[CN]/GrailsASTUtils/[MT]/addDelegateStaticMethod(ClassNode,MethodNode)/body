{
  ClassExpression classExpression=new ClassExpression(declaredMethod.getDeclaringClass());
  Parameter[] parameterTypes=declaredMethod.getParameters();
  if (!classNode.hasDeclaredMethod(declaredMethod.getName(),parameterTypes)) {
    BlockStatement methodBody=new BlockStatement();
    ArgumentListExpression arguments=new ArgumentListExpression();
    for (    Parameter parameterType : parameterTypes) {
      arguments.addExpression(new VariableExpression(parameterType.getName()));
    }
    methodBody.addStatement(new ExpressionStatement(new MethodCallExpression(classExpression,declaredMethod.getName(),arguments)));
    ClassNode returnType=declaredMethod.getReturnType().isGenericsPlaceHolder() ? classNode : declaredMethod.getReturnType();
    returnType.setRedirect(declaredMethod.getReturnType());
    MethodNode methodNode=new MethodNode(declaredMethod.getName(),Modifier.PUBLIC | Modifier.STATIC,returnType,copyParameters(parameterTypes),GrailsArtefactClassInjector.EMPTY_CLASS_ARRAY,methodBody);
    methodNode.setGenericsTypes(declaredMethod.getGenericsTypes());
    methodNode.addAnnotations(declaredMethod.getAnnotations());
    classNode.addMethod(methodNode);
  }
}
