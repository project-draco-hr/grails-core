{
  if (classInjectors != null) {
    return;
  }
  String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(INJECTOR_SCAN_PACKAGE) + "/**/*.class";
  ClassLoader classLoader=GrailsAwareInjectionOperation.class.getClassLoader();
  PathMatchingResourcePatternResolver resolver=new PathMatchingResourcePatternResolver(classLoader);
  Resource[] resources;
  try {
    resources=resolver.getResources(pattern);
    if (resources.length == 0) {
      classLoader=Thread.currentThread().getContextClassLoader();
      resolver=new PathMatchingResourcePatternResolver(classLoader);
      resources=resolver.getResources(pattern);
    }
    List<ClassInjector> injectors=new ArrayList<>();
    CachingMetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(classLoader);
    for (    org.codehaus.groovy.grails.io.support.Resource resource : resources) {
      try {
        MetadataReader metadataReader=readerFactory.getMetadataReader(new GrailsResource(resource));
        if (metadataReader.getAnnotationMetadata().hasAnnotation(AstTransformer.class.getName())) {
          String className=metadataReader.getClassMetadata().getClassName();
          Class<?> injectorClass=classLoader.loadClass(className);
          if (ClassInjector.class.isAssignableFrom(injectorClass))           injectors.add((ClassInjector)injectorClass.newInstance());
        }
      }
 catch (      ClassNotFoundException e) {
      }
catch (      InstantiationException e) {
      }
catch (      IllegalAccessException e) {
      }
catch (      IOException e) {
      }
    }
    Collections.sort(injectors,new Comparator<ClassInjector>(){
      @SuppressWarnings({"unchecked","rawtypes"}) public int compare(      ClassInjector classInjectorA,      ClassInjector classInjectorB){
        if (classInjectorA instanceof Comparable) {
          return ((Comparable)classInjectorA).compareTo(classInjectorB);
        }
        return 0;
      }
    }
);
    classInjectors=injectors.toArray(new ClassInjector[injectors.size()]);
  }
 catch (  IOException e) {
  }
}
