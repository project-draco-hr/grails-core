{
  if (templateFactory == null)   templateFactory=new ServletContextTemplateFactory(pageContext.getServletContext());
  if (StringUtils.isBlank(property)) {
    throw new JspException("Tag [scaffold] missing required attribute [property]");
  }
  if (StringUtils.isBlank(bean)) {
    throw new JspException("Tag [scaffold] missing required attribute [bean]");
  }
  if (!ExpressionEvaluationUtils.isExpressionLanguage(bean)) {
    throw new JspException("Attribute [bean] of tag [scaffold] must be a JSTL expression");
  }
  Writer out=pageContext.getOut();
  try {
    Object beanInstance=ExpressionEvaluationUtils.evaluate("bean",this.bean,Object.class,this.pageContext);
    if (beanInstance == null)     throw new JspTagException("Bean [" + this.bean + "] referenced by tag [scaffold] cannot be null");
    GrailsApplication application=(GrailsApplication)super.getRequestContext().getWebApplicationContext().getBean(GrailsApplication.APPLICATION_ID);
    if (application != null) {
      GrailsDomainClass domainClass=application.getGrailsDomainClass(beanInstance.getClass().getName());
      if (domainClass != null) {
        this.constrainedProperties=domainClass.getConstrainedProperties();
      }
    }
    this.beanWrapper=new BeanWrapperImpl(beanInstance);
    PropertyDescriptor pd=this.beanWrapper.getPropertyDescriptor(property);
    Template t=templateFactory.findTemplateForType(pd.getPropertyType());
    if (t == null)     throw new JspException("Type [" + pd.getPropertyType() + "] is unsupported by tag [scaffold]. No template found.");
    Map binding=new HashMap();
    binding.put("name",pd.getName());
    binding.put("value",this.beanWrapper.getPropertyValue(property));
    binding.put("request",this.pageContext.getRequest());
    binding.put("response",this.pageContext.getResponse());
    binding.put("application",this.pageContext.getServletContext());
    if (this.constrainedProperties.containsKey(property)) {
      binding.put("constraints",this.constrainedProperties.get(property));
    }
 else {
      binding.put("constraints",null);
    }
    out.write(t.make(binding).toString());
  }
 catch (  InvalidPropertyException ipe) {
    throw new JspException("Attribute [property] with value [" + property + "] is not a valid property of bean ["+ bean+ "] in tag [scaffold]",ipe);
  }
catch (  IOException e) {
    throw new JspException("I/O error writing tag [scaffold]: " + e.getMessage(),e);
  }
  return SKIP_BODY;
}
