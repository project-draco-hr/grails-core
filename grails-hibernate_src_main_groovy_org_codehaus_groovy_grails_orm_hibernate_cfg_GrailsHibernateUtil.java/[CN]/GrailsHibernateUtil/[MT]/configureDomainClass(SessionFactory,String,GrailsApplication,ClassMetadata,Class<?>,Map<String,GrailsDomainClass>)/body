{
  if (Modifier.isAbstract(persistentClass.getModifiers())) {
    return;
  }
  LOG.trace("Configuring domain class [" + persistentClass + "]");
  GrailsDomainClass dc=(GrailsDomainClass)application.getArtefact(DomainClassArtefactHandler.TYPE,persistentClass.getName());
  if (dc == null && sessionFactory.getClassMetadata(persistentClass) != null) {
    GrailsHibernateDomainClass ghdc=new GrailsHibernateDomainClass(persistentClass,sessionFactory,sessionFactoryName,application,cmd);
    hibernateDomainClassMap.put(persistentClass.getName(),ghdc);
    dc=(GrailsDomainClass)application.addArtefact(DomainClassArtefactHandler.TYPE,ghdc);
  }
}
