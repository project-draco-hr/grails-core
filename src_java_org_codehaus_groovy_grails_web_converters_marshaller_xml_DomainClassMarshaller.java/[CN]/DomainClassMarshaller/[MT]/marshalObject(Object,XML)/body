{
  Class clazz=value.getClass();
  GrailsDomainClass domainClass=ConverterUtil.getDomainClass(clazz.getName());
  BeanWrapper beanWrapper=new BeanWrapperImpl(value);
  GrailsDomainClassProperty id=domainClass.getIdentifier();
  Object idValue=beanWrapper.getPropertyValue(id.getName());
  if (idValue != null)   xml.attribute("id",String.valueOf(idValue));
  if (includeVersion) {
    Object versionValue=beanWrapper.getPropertyValue(domainClass.getVersion().getName());
    xml.attribute("version",String.valueOf(versionValue));
  }
  GrailsDomainClassProperty[] properties=domainClass.getPersistentProperties();
  for (  GrailsDomainClassProperty property : properties) {
    xml.startNode(property.getName());
    if (!property.isAssociation()) {
      Object val=beanWrapper.getPropertyValue(property.getName());
      xml.convertAnother(val);
    }
 else {
      Object referenceObject=beanWrapper.getPropertyValue(property.getName());
      if (isRenderDomainClassRelations()) {
        if (referenceObject == null) {
        }
 else {
          referenceObject=proxyHandler.unwrapIfProxy(referenceObject);
          if (referenceObject instanceof SortedMap) {
            referenceObject=new TreeMap((SortedMap)referenceObject);
          }
 else           if (referenceObject instanceof SortedSet) {
            referenceObject=new TreeSet((SortedSet)referenceObject);
          }
 else           if (referenceObject instanceof Set) {
            referenceObject=new HashSet((Set)referenceObject);
          }
 else           if (referenceObject instanceof Map) {
            referenceObject=new HashMap((Map)referenceObject);
          }
 else           if (referenceObject instanceof Collection) {
            referenceObject=new ArrayList((Collection)referenceObject);
          }
          xml.convertAnother(referenceObject);
        }
      }
 else {
        if (referenceObject != null) {
          GrailsDomainClass referencedDomainClass=property.getReferencedDomainClass();
          if (referencedDomainClass == null || property.isEmbedded() || GrailsClassUtils.isJdk5Enum(property.getType())) {
            xml.convertAnother(referenceObject);
          }
 else           if (property.isOneToOne() || property.isManyToOne() || property.isEmbedded()) {
            asShortObject(referenceObject,xml,referencedDomainClass.getIdentifier(),referencedDomainClass);
          }
 else {
            GrailsDomainClassProperty referencedIdProperty=referencedDomainClass.getIdentifier();
            @SuppressWarnings("unused") String refPropertyName=referencedDomainClass.getPropertyName();
            if (referenceObject instanceof Collection) {
              Collection o=(Collection)referenceObject;
              for (              Object el : o) {
                xml.startNode(xml.getElementName(el));
                asShortObject(el,xml,referencedIdProperty,referencedDomainClass);
                xml.end();
              }
            }
 else             if (referenceObject instanceof Map) {
              Map<Object,Object> map=(Map<Object,Object>)referenceObject;
              for (              Map.Entry<Object,Object> entry : map.entrySet()) {
                String key=String.valueOf(entry.getKey());
                Object o=entry.getValue();
                xml.startNode("entry").attribute("key",key);
                asShortObject(o,xml,referencedIdProperty,referencedDomainClass);
                xml.end();
              }
            }
          }
        }
      }
    }
    xml.end();
  }
}
