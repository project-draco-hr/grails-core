{
  if (application == null || !application.isWarDeployed()) {
    return;
  }
  if (application != null) {
    ClassLoader classLoader=application.getClassLoader();
    if (classLoader instanceof GroovyClassLoader) {
      MetaClassRegistry metaClassRegistry=GroovySystem.getMetaClassRegistry();
      Class<?>[] loadedClasses=((GroovyClassLoader)classLoader).getLoadedClasses();
      for (      Class<?> loadedClass : loadedClasses) {
        metaClassRegistry.removeMetaClass(loadedClass);
      }
    }
  }
  WebApplicationContext ctx=WebApplicationContextUtils.getWebApplicationContext(servletContext);
  GrailsPluginManager pluginManager=null;
  if (ctx.containsBean(GrailsPluginManager.BEAN_NAME)) {
    pluginManager=ctx.getBean(GrailsPluginManager.BEAN_NAME,GrailsPluginManager.class);
  }
  if (pluginManager != null) {
    try {
      pluginManager.shutdown();
    }
 catch (    Exception e) {
      GrailsUtil.sanitize(e);
      LOG.error("Error occurred shutting down plug-in manager: " + e.getMessage(),e);
    }
  }
  ConfigurableApplicationContext parent=ctx != null ? (ConfigurableApplicationContext)ctx.getParent() : null;
  super.closeWebApplicationContext(servletContext);
  if (parent != null) {
    LOG.info("Destroying Spring parent WebApplicationContext " + parent.getDisplayName());
    parent.close();
  }
  try {
    Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
  }
 catch (  AccessControlException e) {
  }
  PluginManagerHolder.setPluginManager(null);
  ConfigurationHolder.setConfig(null);
  ExpandoMetaClass.disableGlobally();
  MimeType.reset();
  application=null;
}
