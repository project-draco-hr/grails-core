{
  try {
    String property=(String)name;
    ConstrainedProperty cp;
    if (constrainedProperties.containsKey(property)) {
      cp=(ConstrainedProperty)constrainedProperties.get(property);
    }
 else {
      PropertyDescriptor pd=this.bean.getPropertyDescriptor(property);
      cp=new ConstrainedProperty(this.target.getClass(),property,pd.getPropertyType());
      cp.setOrder(order++);
      constrainedProperties.put(property,cp);
    }
    for (Iterator i=attributes.keySet().iterator(); i.hasNext(); ) {
      String constraintName=(String)i.next();
      if (cp.supportsContraint(constraintName)) {
        cp.applyConstraint(constraintName,attributes.get(constraintName));
      }
 else {
        GrailsUtil.warn("Property [" + cp.getPropertyName() + "] of type ["+ cp.getPropertyType().getName()+ "] doesn't support constraint ["+ constraintName+ "]. This constraint will not be checked during validation.");
      }
    }
    return cp;
  }
 catch (  InvalidPropertyException ipe) {
    throw new MissingMethodException((String)name,target.getClass(),new Object[]{attributes});
  }
}
