{
  if (!finalPass)   return;
  String tagName=scan.getToken().trim();
  String ns=scan.getNamespace();
  if (tagMetaStack.isEmpty())   throw new GrailsTagException("Found closing Grails tag with no opening [" + tagName + "]");
  TagMeta tm=(TagMeta)tagMetaStack.remove(this.tagMetaStack.size() - 1);
  String lastInStack=tm.name;
  String lastNamespaceInStack=tm.namespace;
  if (StringUtils.isBlank(tagName))   tagName=lastInStack;
  if (!lastInStack.equals(tagName) || !lastNamespaceInStack.equals(ns)) {
    throw new GrailsTagException("Grails tag [" + lastNamespaceInStack + ":"+ lastInStack+ "] was not closed");
  }
  if (GroovyPage.DEFAULT_NAMESPACE.equals(ns) && tagRegistry.isSyntaxTag(tagName)) {
    if (tm.instance instanceof GroovySyntaxTag) {
      GroovySyntaxTag tag=(GroovySyntaxTag)tm.instance;
      tag.doEndTag();
    }
 else {
      throw new GrailsTagException("Grails tag [" + tagName + "] was not closed");
    }
  }
 else {
    out.println("}");
    if (jspTags.containsKey(ns)) {
      String uri=(String)jspTags.get(ns);
      out.println("jspTag = tagLibraryResolver?.resolveTagLibrary('" + uri + "')?.getTag('"+ tagName+ "')");
      out.println("if(!jspTag) throw new GrailsTagException('Unknown JSP tag " + ns + ":"+ tagName+ "')");
      out.println("jspTag.doTag(out,attrs" + tagIndex + ", body"+ tagIndex+ ")");
    }
 else {
      if (tm.hasAttributes) {
        out.println("invokeTag('" + tagName + "','"+ ns+ "',"+ getCurrentOutputLineNumber()+ ",attrs"+ tagIndex+ ",body"+ tagIndex+ ")");
      }
 else {
        out.println("invokeTag('" + tagName + "','"+ ns+ "',"+ getCurrentOutputLineNumber()+ ",[:],body"+ tagIndex+ ")");
      }
    }
  }
  tagIndex--;
}
