{
  String className=theClass.getName();
  String constraintsScript=className.replaceAll("\\.","/") + ConstraintsEvaluator.CONSTRAINTS_GROOVY_SCRIPT;
  InputStream stream=getClass().getClassLoader().getResourceAsStream(constraintsScript);
  if (stream != null) {
    GroovyClassLoader gcl=new GroovyClassLoader();
    try {
      Class<?> scriptClass=gcl.parseClass(GrailsIOUtils.toString(stream,"UTF-8"));
      Script script=(Script)scriptClass.newInstance();
      script.run();
      Binding binding=script.getBinding();
      if (binding.getVariables().containsKey(ConstraintsEvaluator.PROPERTY_NAME)) {
        return (Closure<?>)binding.getVariable(ConstraintsEvaluator.PROPERTY_NAME);
      }
      LOG.warn("Unable to evaluate constraints from [" + constraintsScript + "], constraints closure not found!");
      return null;
    }
 catch (    CompilationFailedException e) {
      LOG.error("Compilation error evaluating constraints for class [" + className + "]: "+ e.getMessage(),e);
      return null;
    }
catch (    InstantiationException e) {
      LOG.error("Instantiation error evaluating constraints for class [" + className + "]: "+ e.getMessage(),e);
      return null;
    }
catch (    IllegalAccessException e) {
      LOG.error("Illegal access error evaluating constraints for class [" + className + "]: "+ e.getMessage(),e);
      return null;
    }
  }
  return null;
}
