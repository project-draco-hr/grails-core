{
  if (criterion instanceof FunctionCallingCriterion) {
    org.hibernate.criterion.Criterion sqlRestriction=getRestrictionForFunctionCall((FunctionCallingCriterion)criterion,getEntity());
    if (sqlRestriction != null) {
      addToCriteria(sqlRestriction);
    }
  }
 else   if (criterion instanceof PropertyCriterion) {
    PropertyCriterion pc=(PropertyCriterion)criterion;
    Object value=pc.getValue();
    if (value instanceof QueryableCriteria) {
      DetachedCriteria hibernateDetachedCriteria=HibernateCriteriaBuilder.getHibernateDetachedCriteria((QueryableCriteria)value);
      pc.setValue(hibernateDetachedCriteria);
    }
 else {
      doTypeConversionIfNeccessary(getEntity(),pc);
    }
  }
  if (criterion instanceof DetachedAssociationCriteria) {
    DetachedAssociationCriteria associationCriteria=(DetachedAssociationCriteria)criterion;
    Association association=associationCriteria.getAssociation();
    CriteriaAndAlias criteriaAndAlias=getCriteriaAndAlias(association);
    aliasInstanceStack.add(criteriaAndAlias.criteria);
    aliasStack.add(criteriaAndAlias.alias);
    associationStack.add(association);
    entityStack.add(association.getAssociatedEntity());
    try {
      @SuppressWarnings("unchecked") List<Criterion> associationCriteriaList=associationCriteria.getCriteria();
      for (      Criterion c : associationCriteriaList) {
        add(c);
      }
    }
  finally {
      aliasInstanceStack.removeLast();
      aliasStack.removeLast();
      entityStack.removeLast();
      associationStack.removeLast();
    }
  }
 else {
    final org.hibernate.criterion.Criterion hibernateCriterion=new HibernateCriterionAdapter(getEntity(),criterion,getCurrentAlias()).toHibernateCriterion(this);
    if (hibernateCriterion != null) {
      addToCriteria(hibernateCriterion);
    }
  }
}
