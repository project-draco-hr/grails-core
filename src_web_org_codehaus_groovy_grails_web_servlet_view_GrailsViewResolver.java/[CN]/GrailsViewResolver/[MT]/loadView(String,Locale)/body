{
  if (this.templateEngine == null)   throw new IllegalStateException("Property [templateEngine] cannot be null");
  if (this.pluginMetaManager == null)   throw new IllegalStateException("Property [pluginMetaManager] cannot be null");
  ResourceLoader resourceLoader=establishResourceLoader();
  GrailsWebRequest webRequest=(GrailsWebRequest)RequestContextHolder.currentRequestAttributes();
  HttpServletRequest request=webRequest.getCurrentRequest();
  GroovyObject controller=webRequest.getAttributes().getController(request);
  GrailsApplication application=webRequest.getAttributes().getGrailsApplication();
  String format=request.getAttribute(GrailsApplicationAttributes.CONTENT_FORMAT) != null ? request.getAttribute(GrailsApplicationAttributes.CONTENT_FORMAT).toString() : null;
  String gspView=localPrefix + viewName + DOT+ format+ GSP_SUFFIX;
  Resource res=null;
  if (format != null) {
    res=resourceLoader.getResource(gspView);
    if (!res.exists()) {
      gspView=resolveViewForController(controller,application,viewName,resourceLoader);
      res=resourceLoader.getResource(gspView);
    }
  }
  if (res == null || !res.exists()) {
    gspView=localPrefix + viewName + GSP_SUFFIX;
    res=resourceLoader.getResource(gspView);
    if (!res.exists()) {
      gspView=resolveViewForController(controller,application,viewName,resourceLoader);
      res=resourceLoader.getResource(gspView);
    }
  }
  if (res.exists()) {
    return createGroovyPageView(webRequest,gspView);
  }
 else {
    AbstractUrlBasedView view=buildView(viewName);
    view.setApplicationContext(getApplicationContext());
    view.afterPropertiesSet();
    return view;
  }
}
