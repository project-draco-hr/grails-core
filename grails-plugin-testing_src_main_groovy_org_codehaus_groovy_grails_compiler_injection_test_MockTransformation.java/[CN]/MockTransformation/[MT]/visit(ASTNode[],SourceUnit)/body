{
  if (!(astNodes[0] instanceof AnnotationNode) || !(astNodes[1] instanceof AnnotatedNode)) {
    throw new RuntimeException("Internal error: wrong types: $node.class / $parent.class");
  }
  AnnotatedNode parent=(AnnotatedNode)astNodes[1];
  AnnotationNode node=(AnnotationNode)astNodes[0];
  if (!MY_TYPE.equals(node.getClassNode()) || !(parent instanceof ClassNode)) {
    return;
  }
  ClassNode classNode=(ClassNode)parent;
  String cName=classNode.getName();
  if (classNode.isInterface()) {
    error(source,"Error processing interface '" + cName + "'. "+ MY_TYPE_NAME+ " not allowed for interfaces.");
  }
  ListExpression values=getListOfClasses(node);
  if (values != null) {
    for (    Expression expression : values.getExpressions()) {
      if (expression instanceof ClassExpression) {
        ClassExpression ce=(ClassExpression)expression;
        weaveMock(classNode,ce,false);
      }
    }
  }
 else {
    error(source,"Error processing class '" + cName + "'. "+ MY_TYPE_NAME+ " annotation expects a class or a list of classes to mock");
  }
}
