{
  Assert.state(grailsApplication != null,"Property [grailsApplication] must be set!");
  List urlMappings=new ArrayList();
  List excludePatterns=new ArrayList();
  GrailsClass[] mappings=grailsApplication.getArtefacts(UrlMappingsArtefactHandler.TYPE);
  mappingEvaluator=new DefaultUrlMappingEvaluator(servletContext);
  for (  GrailsClass mapping : mappings) {
    GrailsUrlMappingsClass mappingClass=(GrailsUrlMappingsClass)mapping;
    List grailsClassMappings;
    if (Script.class.isAssignableFrom(mappingClass.getClass())) {
      grailsClassMappings=mappingEvaluator.evaluateMappings(mappingClass.getClazz());
    }
 else {
      grailsClassMappings=mappingEvaluator.evaluateMappings(mappingClass.getMappingsClosure());
    }
    urlMappings.addAll(grailsClassMappings);
    if (mappingClass.getExcludePatterns() != null) {
      excludePatterns.addAll(mappingClass.getExcludePatterns());
    }
  }
  Properties props=grailsApplication.getConfig().toProperties();
  String maxUrlCacheSize=props.getProperty(URL_MAPPING_CACHE_MAX_SIZE);
  if (maxUrlCacheSize == null) {
    urlMappingsHolder=new DefaultUrlMappingsHolder(urlMappings,excludePatterns);
  }
 else {
    int cacheSize=Integer.valueOf(maxUrlCacheSize);
    urlMappingsHolder=new DefaultUrlMappingsHolder(urlMappings,excludePatterns,cacheSize);
  }
}
