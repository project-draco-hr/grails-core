{
  Parameter[] parameterTypes=thisAsFirstArgument ? getRemainingParameterTypes(declaredMethod.getParameters()) : declaredMethod.getParameters();
  if (classNode.hasDeclaredMethod(declaredMethod.getName(),parameterTypes)) {
    return null;
  }
  BlockStatement methodBody=new BlockStatement();
  ArgumentListExpression arguments=createArgumentListFromParameters(parameterTypes,thisAsFirstArgument);
  ClassNode returnType=nonGeneric(declaredMethod.getReturnType());
  MethodCallExpression methodCallExpression=new MethodCallExpression(delegate,declaredMethod.getName(),arguments);
  methodCallExpression.setMethodTarget(declaredMethod);
  methodBody.addStatement(new ExpressionStatement(methodCallExpression));
  MethodNode methodNode=new MethodNode(declaredMethod.getName(),Modifier.PUBLIC,returnType,copyParameters(parameterTypes),GrailsArtefactClassInjector.EMPTY_CLASS_ARRAY,methodBody);
  methodNode.addAnnotations(declaredMethod.getAnnotations());
  classNode.addMethod(methodNode);
  return methodNode;
}
