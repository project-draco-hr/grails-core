{
  HttpServletRequest request=(HttpServletRequest)rq;
  HttpServletResponse response=(HttpServletResponse)rs;
  ServletContext servletContext=filterConfig.getServletContext();
  SiteMeshWebAppContext webAppContext=new SiteMeshWebAppContext(request,response,servletContext);
  ContentProcessor contentProcessor=initContentProcessor(webAppContext);
  DecoratorSelector decoratorSelector=initDecoratorSelector(webAppContext);
  if (filterAlreadyAppliedForRequest(request)) {
    chain.doFilter(request,response);
    return;
  }
  if (!contentProcessor.handles(webAppContext)) {
    chain.doFilter(request,response);
    return;
  }
  request.removeAttribute(RequestConstants.PAGE);
  if (containerTweaks.shouldAutoCreateSession()) {
    request.getSession(true);
  }
  boolean dispatched=false;
  try {
    Content content=obtainContent(contentProcessor,webAppContext,request,response,chain);
    if (content == null || response.isCommitted()) {
      return;
    }
    detectContentTypeFromPage(content,response);
    Decorator decorator=decoratorSelector.selectDecorator(content,webAppContext);
    persistenceInterceptor.reconnect();
    decorator.render(content,webAppContext);
    dispatched=true;
  }
 catch (  IllegalStateException e) {
    if (!containerTweaks.shouldIgnoreIllegalStateExceptionOnErrorPage()) {
      throw e;
    }
  }
 finally {
    if (!dispatched) {
      request.setAttribute(ALREADY_APPLIED_KEY,null);
    }
    if (persistenceInterceptor.isOpen()) {
      persistenceInterceptor.destroy();
    }
  }
}
