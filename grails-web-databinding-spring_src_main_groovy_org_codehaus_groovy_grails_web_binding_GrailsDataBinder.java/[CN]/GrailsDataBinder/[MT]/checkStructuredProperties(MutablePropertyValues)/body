{
  Map<String,PropertyValue> valuesByName=new HashMap<String,PropertyValue>();
  List<String> valueNames=new ArrayList<String>();
  mapPropertyValues(propertyValues.getPropertyValues(),valuesByName,valueNames);
  while (!valueNames.isEmpty()) {
    String name=valueNames.remove(0);
    PropertyValue propertyValue=valuesByName.get(name);
    if (!isStructured(propertyValue)) {
      continue;
    }
    String propertyName=getNameOf(propertyValue);
    Class<?> type=bean.getPropertyType(propertyName);
    if (type == null) {
      continue;
    }
    PropertyEditor editor=findCustomEditor(type,propertyName);
    if (editor instanceof CompositeEditor) {
      CompositeEditor composite=(CompositeEditor)editor;
      List<PropertyEditor> propertyEditors=composite.getPropertyEditors();
      for (      PropertyEditor propertyEditor : propertyEditors) {
        if (null == propertyEditor || !StructuredPropertyEditor.class.isAssignableFrom(propertyEditor.getClass())) {
          continue;
        }
        StructuredPropertyEditor structuredEditor=(StructuredPropertyEditor)propertyEditor;
        processStructuredProperty(structuredEditor,propertyName,type,valueNames,propertyValues);
      }
    }
 else {
      if (null == editor || !StructuredPropertyEditor.class.isAssignableFrom(editor.getClass())) {
        continue;
      }
      StructuredPropertyEditor structuredEditor=(StructuredPropertyEditor)editor;
      processStructuredProperty(structuredEditor,propertyName,type,valueNames,propertyValues);
    }
  }
}
