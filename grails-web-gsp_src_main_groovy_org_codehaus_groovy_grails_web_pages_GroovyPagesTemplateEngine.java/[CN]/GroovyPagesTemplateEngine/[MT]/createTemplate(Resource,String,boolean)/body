{
  GroovyPageMetaInfo meta;
  if (cacheable) {
    meta=CacheEntry.getValue(pageCache,pageName,-1,null,new Callable<CacheEntry<GroovyPageMetaInfo>>(){
      public CacheEntry<GroovyPageMetaInfo> call(){
        return new CacheEntry<GroovyPageMetaInfo>(){
          @Override protected boolean hasExpired(          long timeout,          Object cacheRequestObject){
            GroovyPageMetaInfo meta=getValue();
            Resource resource=(Resource)cacheRequestObject;
            return meta == null || isGroovyPageReloadable(resource,meta);
          }
          @Override protected GroovyPageMetaInfo updateValue(          GroovyPageMetaInfo oldValue,          Callable<GroovyPageMetaInfo> updater,          Object cacheRequestObject) throws Exception {
            if (oldValue != null) {
              oldValue.removePageMetaClass();
            }
            Resource resource=(Resource)cacheRequestObject;
            return buildPageMetaInfo(resource,pageName);
          }
        }
;
      }
    }
,true,resource);
  }
 else {
    meta=buildPageMetaInfo(resource,pageName);
  }
  return new GroovyPageTemplate(meta);
}
