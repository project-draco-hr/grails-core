{
  RuntimeSpringConfiguration springConfig=new DefaultRuntimeSpringConfiguration();
  BeanConfiguration serviceClassBean=springConfig.createSingletonBean(MethodInvokingFactoryBean.class).addProperty("targetObject",new RuntimeBeanReference(GrailsApplication.APPLICATION_ID,true)).addProperty("targetMethod","getGrailsServiceClass").addProperty("arguments",grailsServiceClass.getFullName());
  context.registerBeanDefinition(grailsServiceClass.getFullName() + "Class",serviceClassBean.getBeanDefinition());
  BeanConfiguration serviceInstance=springConfig.createSingletonBean(grailsServiceClass.getFullName() + "Instance").setFactoryBean(grailsServiceClass.getFullName() + "Class").setFactoryMethod("newInstance");
  if (grailsServiceClass.byName()) {
    serviceInstance.setAutowire(BeanConfiguration.AUTOWIRE_BY_NAME);
  }
 else   if (grailsServiceClass.byType()) {
    serviceInstance.setAutowire(BeanConfiguration.AUTOWIRE_BY_TYPE);
  }
 else {
    serviceInstance.setAutowire(BeanConfiguration.AUTOWIRE_BY_TYPE);
  }
  context.registerBeanDefinition(grailsServiceClass.getFullName() + "Instance",serviceInstance.getBeanDefinition());
  if (grailsServiceClass.isTransactional()) {
    Properties transactionAttributes=new Properties();
    transactionAttributes.put("*","PROPAGATION_REQUIRED");
    BeanConfiguration transactionalProxyBean=springConfig.createSingletonBean(TransactionProxyFactoryBean.class).addProperty("target",new RuntimeBeanReference(grailsServiceClass.getFullName() + "Instance")).addProperty("proxyTargetClass",Boolean.TRUE).addProperty("transactionAttributes",transactionAttributes).addProperty(TRANSACTION_MANAGER_BEAN,new RuntimeBeanReference(TRANSACTION_MANAGER_BEAN));
    context.registerBeanDefinition(grailsServiceClass.getPropertyName(),transactionalProxyBean.getBeanDefinition());
  }
 else {
    BeanConfiguration instanceRef=springConfig.createSingletonBean(BeanReferenceFactoryBean.class).addProperty("targetBeanName",grailsServiceClass.getFullName() + "Instance");
    context.registerBeanDefinition(grailsServiceClass.getName() + "Service",instanceRef.getBeanDefinition());
  }
}
