{
  if (Closure.class.isAssignableFrom(clazz)) {
    return false;
  }
  if (clazz.isEnum())   return false;
  if (clazz.getAnnotation(Entity.class) != null) {
    return true;
  }
  Class<?> testClass=clazz;
  while (testClass != null && !testClass.equals(GroovyObject.class) && !testClass.equals(Object.class)) {
    try {
      testClass.getDeclaredField(GrailsDomainClassProperty.IDENTITY);
      testClass.getDeclaredField(GrailsDomainClassProperty.VERSION);
      return true;
    }
 catch (    SecurityException e) {
    }
catch (    NoSuchFieldException e) {
    }
    testClass=testClass.getSuperclass();
  }
  return false;
}
