{
  final HttpServletRequest request=getRequest(controllerInstance);
  Object commandObjectInstance=null;
  try {
    final DataBindingSource dataBindingSource=DataBindingUtils.createDataBindingSource(getGrailsApplication(controllerInstance),type,request);
    final DataBindingSource commandObjectBindingSource=WebMetaUtils.getCommandObjectBindingSourceForPrefix(commandObjectParameterName,dataBindingSource);
    Object entityIdentifierValue=null;
    final boolean isDomainClass=DomainClassArtefactHandler.isDomainClass(type);
    if (isDomainClass) {
      entityIdentifierValue=commandObjectBindingSource.getIdentifierValue();
      if (entityIdentifierValue == null) {
        final GrailsWebRequest webRequest=GrailsWebRequest.lookup(request);
        entityIdentifierValue=webRequest != null ? webRequest.getParams().getIdentifier() : null;
      }
    }
    if (entityIdentifierValue instanceof String) {
      entityIdentifierValue=((String)entityIdentifierValue).trim();
      if ("".equals(entityIdentifierValue) || "null".equals(entityIdentifierValue)) {
        entityIdentifierValue=null;
      }
    }
    final HttpMethod requestMethod=HttpMethod.valueOf(request.getMethod());
    if (entityIdentifierValue != null) {
      try {
        commandObjectInstance=InvokerHelper.invokeStaticMethod(type,"get",entityIdentifierValue);
      }
 catch (      Exception e) {
        final Errors errors=getErrors(controllerInstance);
        if (errors != null) {
          errors.reject(controllerInstance.getClass().getName() + ".commandObject." + commandObjectParameterName+ ".error",e.getMessage());
        }
      }
    }
 else     if (requestMethod == HttpMethod.POST || !isDomainClass) {
      commandObjectInstance=type.newInstance();
    }
    if (commandObjectInstance != null && commandObjectBindingSource != null) {
      final boolean shouldDoDataBinding;
      if (entityIdentifierValue != null) {
switch (requestMethod) {
case PATCH:
case POST:
case PUT:
          shouldDoDataBinding=true;
        break;
default :
      shouldDoDataBinding=false;
  }
}
 else {
  shouldDoDataBinding=true;
}
if (shouldDoDataBinding) {
  bindData(controllerInstance,commandObjectInstance,commandObjectBindingSource,Collections.EMPTY_MAP,null);
}
}
}
 catch (InvalidRequestBodyException e) {
commandObjectInstance=type.newInstance();
final Object o=GrailsMetaClassUtils.invokeMethodIfExists(commandObjectInstance,"getErrors");
if (o instanceof BindingResult) {
final BindingResult errors=(BindingResult)o;
String msg="Error occurred initializing command object [" + commandObjectParameterName + "]. "+ e.getMessage();
ObjectError error=new ObjectError(commandObjectParameterName,msg);
errors.addError(error);
}
}
if (commandObjectInstance != null) {
final ApplicationContext applicationContext=getApplicationContext(controllerInstance);
final AutowireCapableBeanFactory autowireCapableBeanFactory=applicationContext.getAutowireCapableBeanFactory();
autowireCapableBeanFactory.autowireBeanProperties(commandObjectInstance,AutowireCapableBeanFactory.AUTOWIRE_BY_NAME,false);
}
return commandObjectInstance;
}
