{
  UrlMappingsHolder holder=lookupUrlMappings();
  GrailsApplication application=lookupApplication();
  GrailsWebRequest webRequest=(GrailsWebRequest)request.getAttribute(GrailsApplicationAttributes.WEB_REQUEST);
  GrailsClass[] controllers=application.getArtefacts(ControllerArtefactHandler.TYPE);
  if (controllers == null || controllers.length == 0 || holder == null) {
    processFilterChain(request,response,filterChain);
    return;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Executing URL mapping filter...");
    LOG.debug(holder);
  }
  String uri=urlHelper.getPathWithinApplication(request);
  UrlMappingInfo[] urlInfos=holder.matchAll(uri);
  WrappedResponseHolder.setWrappedResponse(response);
  boolean dispatched=false;
  try {
    for (int i=0; i < urlInfos.length; i++) {
      UrlMappingInfo info=urlInfos[i];
      if (info != null) {
        String action=info.getActionName() == null ? "" : info.getActionName();
        GrailsClass controller=application.getArtefactForFeature(ControllerArtefactHandler.TYPE,SLASH + info.getControllerName() + SLASH+ action);
        if (controller == null) {
          continue;
        }
        dispatched=true;
        info.configure(webRequest);
        String forwardUrl=buildDispatchUrlForMapping(request,info);
        if (LOG.isDebugEnabled()) {
          LOG.debug("Matched URI [" + uri + "] to URL mapping ["+ info+ "], forwarding to ["+ forwardUrl+ "] with response ["+ response.getClass()+ "]");
        }
        RequestDispatcher dispatcher=request.getRequestDispatcher(forwardUrl);
        populateWebRequestWithInfo(webRequest,info);
        WebUtils.exposeForwardRequestAttributes(request);
        dispatcher.forward(request,response);
        break;
      }
    }
  }
  finally {
    WrappedResponseHolder.setWrappedResponse(null);
  }
  if (!dispatched) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("No match found, processing remaining filter chain.");
    }
    processFilterChain(request,response,filterChain);
  }
}
