{
  active=true;
  for (  String directory : compiler.getSrcDirectories()) {
    addWatchDirectory(new File(directory),compilerExtensions);
  }
  org.codehaus.groovy.grails.io.support.Resource[] pluginSourceFiles=compiler.getPluginSettings().getPluginSourceFiles();
  for (  org.codehaus.groovy.grails.io.support.Resource pluginSourceFile : pluginSourceFiles) {
    try {
      if (pluginSourceFile.getFile().isDirectory()) {
        addWatchDirectory(pluginSourceFile.getFile(),compilerExtensions);
      }
    }
 catch (    IOException e) {
    }
  }
  addListener(new FileChangeListener(){
    public void onChange(    File file){
      if (fileIsReloadable(file)) {
        LOG.info("File [" + file + "] changed. Applying changes to application.");
        if (descriptorToPluginMap.containsKey(file)) {
          reloadPlugin(file);
        }
 else {
          compileIfSource(file);
          informPluginManager(file,false);
        }
      }
    }
    public void onNew(    File file){
      if (fileIsReloadable(file)) {
        LOG.info("File [" + file + "] added. Applying changes to application.");
        String fileName=file.getName();
        if (fileName.endsWith(".groovy") || fileName.endsWith(".java")) {
          sleep(5000);
        }
        compileIfSource(file);
        informPluginManager(file,true);
      }
    }
  }
);
  if (pluginManager != null) {
    initPluginWatchPatterns();
  }
  super.run();
}
