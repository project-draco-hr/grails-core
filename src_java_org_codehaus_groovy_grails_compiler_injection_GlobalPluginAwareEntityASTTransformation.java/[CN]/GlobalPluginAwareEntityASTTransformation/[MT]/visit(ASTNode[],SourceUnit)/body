{
  if (disableTransformation)   return;
  ASTNode astNode=astNodes[0];
  if (astNode instanceof ModuleNode) {
    ModuleNode moduleNode=(ModuleNode)astNode;
    List classes=moduleNode.getClasses();
    if (classes.size() > 0) {
      ClassNode classNode=(ClassNode)classes.get(0);
      if (classNode.isAnnotationDefinition())       return;
      File sourcePath=new File(sourceUnit.getName());
      try {
        String absolutePath=sourcePath.getCanonicalPath();
        PluginBuildSettings pluginBuildSettings=GrailsPluginUtils.getPluginBuildSettings();
        if (pluginBuildSettings != null) {
          PluginInfo info=pluginBuildSettings.getPluginInfoForSource(absolutePath);
          if (info != null) {
            final ClassNode annotation=new ClassNode(GrailsPlugin.class);
            final List list=classNode.getAnnotations(annotation);
            if (list.size() == 0) {
              final AnnotationNode annotationNode=new AnnotationNode(annotation);
              annotationNode.addMember(org.codehaus.groovy.grails.plugins.GrailsPlugin.NAME,new ConstantExpression(info.getName()));
              annotationNode.addMember(org.codehaus.groovy.grails.plugins.GrailsPlugin.VERSION,new ConstantExpression(info.getVersion()));
              annotationNode.setRuntimeRetention(true);
              annotationNode.setClassRetention(true);
              classNode.addAnnotation(annotationNode);
            }
          }
        }
      }
 catch (      IOException e) {
      }
    }
  }
}
