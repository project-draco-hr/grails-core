{
  PropertyDescriptor[] pds=this.bean.getPropertyDescriptors();
  for (int i=0; i < pds.length; i++) {
    PropertyDescriptor pd=pds[i];
    if (pd.getPropertyType() == String.class && !pd.getName().equals(NAME_ATTRIBUTE) && this.bean.isWritableProperty(pd.getName()) && this.bean.isReadableProperty(pd.getName())) {
      String propertyValue=(String)this.bean.getPropertyValue(pd.getName());
      if (propertyValue != null) {
        if (ExpressionEvaluationUtils.isExpressionLanguage(propertyValue)) {
          this.attributes.put(pd.getName(),ExpressionEvaluationUtils.evaluate(pd.getName(),propertyValue,Object.class,super.pageContext));
        }
 else {
          this.attributes.put(pd.getName(),propertyValue);
        }
      }
    }
  }
  return doStartTagInternal();
}
