{
  if (pluginUrl != null) {
    long currentModified=-1;
    try {
      currentModified=pluginUrl.openConnection().getLastModified();
    }
 catch (    IOException e) {
      LOG.warn("Error reading plugin [" + pluginClass + "] last modified date, cannot reload following change: "+ e.getMessage());
    }
    if (currentModified > pluginLastModified) {
      initialisePlugin(attemptClassReload(this.pluginClass.getName()));
      return true;
    }
  }
  if (onChangeListener != null) {
    checkForNewResources(this);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Plugin " + this + " checking ["+ watchedResources.length+ "] resources for changes..");
    }
    for (int i=0; i < watchedResources.length; i++) {
      final Resource r=watchedResources[i];
      long modifiedFlag=checkModified(r,modifiedTimes[i]);
      if (modifiedFlag > -1) {
        if (LOG.isDebugEnabled())         LOG.debug("[GrailsPlugin] plugin resource [" + r + "] changed, firing event if possible..");
        modifiedTimes[i]=modifiedFlag;
        fireModifiedEvent(r,this);
        refreshInfluencedPlugins();
      }
    }
  }
  return false;
}
