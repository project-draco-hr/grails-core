{
  GroovyClassLoader cl=new GroovyClassLoader();
  Class c1=cl.parseClass("class TestController {\n" + "@Property Closure test = {\n" + "return [ \"test\" : \"123\" ]\n"+ "}\n"+ "}");
  Class c2=cl.parseClass("class SimpleController {\n" + "@Property Closure test = {\n" + "}\n"+ "}");
  Class c3=cl.parseClass("class NoViewController {\n" + "@Property Closure test = {\n" + "request, response ->\n"+ "new grails.util.OpenRicoBuilder(response).ajax { element(id:\"test\") { } };\n"+ "return null;\n"+ "}\n"+ "}");
  Thread.currentThread().setContextClassLoader(cl);
  this.localContext=new GenericApplicationContext();
  ConstructorArgumentValues args=new ConstructorArgumentValues();
  args.addGenericArgumentValue(new Class[]{c1,c2,c3});
  args.addGenericArgumentValue(cl);
  MutablePropertyValues propValues=new MutablePropertyValues();
  BeanDefinition grailsApplicationBean=new RootBeanDefinition(DefaultGrailsApplication.class,args,propValues);
  localContext.registerBeanDefinition("grailsApplication",grailsApplicationBean);
  this.localContext.refresh();
  this.grailsApplication=(GrailsApplication)localContext.getBean("grailsApplication");
  SpringConfig springConfig=new SpringConfig(grailsApplication);
  this.appCtx=(ConfigurableApplicationContext)new XmlApplicationContextDriver().getApplicationContext(springConfig.getBeanReferences(),this.localContext);
  this.controller=(SimpleGrailsController)appCtx.getBean("simpleGrailsController");
  MockServletContext servletContext=new MockServletContext();
  servletContext.setAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT,appCtx);
  controller.setServletContext(servletContext);
  assertNotNull(appCtx);
  super.setUp();
}
