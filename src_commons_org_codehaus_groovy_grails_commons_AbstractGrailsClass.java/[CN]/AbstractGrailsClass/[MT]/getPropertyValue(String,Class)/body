{
  BeanWrapper ref=getReference();
  if (ref.isReadableProperty(name)) {
    Object value=ref.getPropertyValue(name);
    if (value != null && (type.isAssignableFrom(value.getClass()) || GrailsClassUtils.isMatchBetweenPrimativeAndWrapperTypes(type,value.getClass()))) {
      return value;
    }
  }
  try {
    Field field=ref.getWrappedClass().getField(name);
    if (Modifier.isStatic(field.getModifiers()) && Modifier.isPublic(field.getModifiers())) {
      Object value=field.get(ref.getWrappedInstance());
      if (value != null && (type.equals(value.getClass()) || GrailsClassUtils.isMatchBetweenPrimativeAndWrapperTypes(type,value.getClass()))) {
        return value;
      }
 else {
        return null;
      }
    }
  }
 catch (  NoSuchFieldException e) {
  }
catch (  IllegalAccessException e) {
  }
  return null;
}
