{
  BuildSettings buildSettings=settings;
  @SuppressWarnings("rawtypes") Map argsMap=new LinkedHashMap(commandLine.getUndeclaredOptions());
  argsMap.put("params",commandLine.getRemainingArgs());
  binding.setVariable(ARGS_MAP,argsMap);
  binding.setVariable("args",commandLine.getRemainingArgsLineSeparated());
  URLClassLoader classLoader=this.classLoader;
  final GrailsConsole grailsConsole=GrailsConsole.getInstance();
  final File basedir=buildSettings.getBaseDir();
  BaseSettingsApi cla=initBinding(binding,buildSettings,classLoader,grailsConsole,interactive);
  binding.setVariable("Ant",binding.getVariable("ant"));
  setUIListener(binding);
  try {
    List<File> descriptors=new ArrayList<File>();
    File desc=pluginPathSupport.getPluginDescriptor(basedir);
    if (desc != null) {
      descriptors.add(desc);
    }
    for (    File dir : pluginPathSupport.listKnownPluginDirs()) {
      File pluginDescriptor=pluginPathSupport.getPluginDescriptor(dir);
      if (pluginDescriptor != null) {
        descriptors.add(pluginDescriptor);
      }
 else {
        grailsConsole.log("Cannot find plugin descriptor for path '" + dir.getPath() + "'.");
      }
    }
    for (    File file : descriptors) {
      Matcher matcher=pluginDescriptorPattern.matcher(file.getName());
      matcher.find();
      String pluginName=GrailsNameUtils.getPropertyName(matcher.group(1));
      binding.setVariable(pluginName + "PluginDir",file.getParentFile());
    }
  }
 catch (  Exception e) {
  }
  return binding;
}
