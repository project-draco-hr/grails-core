{
  UrlMappingsHolder holder=lookupUrlMappings();
  if (LOG.isTraceEnabled()) {
    LOG.trace("Executing URL mapping filter");
  }
  UrlMapping[] mappings=holder.getUrlMappings();
  String uri=urlHelper.getPathWithinApplication(request);
  if (uri.substring(uri.lastIndexOf(SLASH)).indexOf(".") > -1) {
    filterChain.doFilter(request,response);
    return;
  }
  UrlMappingInfo info=null;
  for (int i=0; i < mappings.length; i++) {
    UrlMapping mapping=mappings[i];
    if (LOG.isDebugEnabled())     LOG.debug("Attempting to match URI [" + uri + "] with pattern ["+ mapping.getUrlData().getUrlPattern()+ "]");
    info=mapping.match(uri);
    if (info != null) {
      break;
    }
  }
  if (info != null) {
    String forwardUrl=buildDispatchUrlForMapping(request,info);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Matched URI [" + uri + "] to URL mapping, forwarding to ["+ forwardUrl+ "] with response ["+ response.getClass()+ "]");
    }
    RequestDispatcher dispatcher=request.getRequestDispatcher(forwardUrl);
    RequestDispatcherWrapper wrapper=new RequestDispatcherWrapper(dispatcher);
    WrappedResponseHolder.setWrappedResponse(response);
    wrapper.include(request,response);
  }
 else {
    if (filterChain != null)     filterChain.doFilter(request,response);
  }
}
