{
  enhanceCommandObjectClass(commandObjectTypeClassNode,actionName,source);
  final Expression constructorCallExpression=new ConstructorCallExpression(commandObjectTypeClassNode,EMPTY_TUPLE);
  final Statement newCommandCode=new ExpressionStatement(new DeclarationExpression(new VariableExpression(paramName,commandObjectTypeClassNode),Token.newSymbol(Types.EQUALS,0,0),constructorCallExpression));
  wrapper.addStatement(newCommandCode);
  final Statement autoWireCommandObjectStatement=getAutoWireCommandObjectStatement(paramName);
  wrapper.addStatement(autoWireCommandObjectStatement);
  final Statement statement=getCommandObjectDataBindingStatement(classNode,paramName,commandObjectTypeClassNode);
  wrapper.addStatement(statement);
  final MethodCallExpression validateMethodCallExpression=new MethodCallExpression(new VariableExpression(paramName),"validate",EMPTY_TUPLE);
  MethodNode validateMethod=commandObjectTypeClassNode.getMethod("validate",new Parameter[0]);
  if (validateMethod != null) {
    validateMethodCallExpression.setMethodTarget(validateMethod);
  }
  wrapper.addStatement(new ExpressionStatement(validateMethodCallExpression));
  boolean argumentIsValidateable=false;
  List<AnnotationNode> validateableAnnotations=commandObjectTypeClassNode.getAnnotations(new ClassNode(grails.validation.Validateable.class));
  if (validateableAnnotations.size() > 0) {
    argumentIsValidateable=true;
  }
 else {
    validateableAnnotations=commandObjectTypeClassNode.getAnnotations(new ClassNode(org.codehaus.groovy.grails.validation.Validateable.class));
    if (validateableAnnotations.size() > 0) {
      argumentIsValidateable=true;
    }
  }
  if (!argumentIsValidateable) {
    final String warningMessage="The [" + actionName + "] action in ["+ classNode.getName()+ "] accepts a parameter of type ["+ commandObjectTypeClassNode.getName()+ "] which has not been marked with @grails.validation.Validateable.  This may lead to reloading problems related to the validation "+ "capabilities added to command object classes.  "+ "It is recommended that command object classes be marked with @grails.validation.Validateable.  In a future "+ "version of Grails the @grails.validation.Validateable annotation will be required for command object classes "+ "which use validation.";
    warning(source,actionNode,warningMessage);
  }
}
