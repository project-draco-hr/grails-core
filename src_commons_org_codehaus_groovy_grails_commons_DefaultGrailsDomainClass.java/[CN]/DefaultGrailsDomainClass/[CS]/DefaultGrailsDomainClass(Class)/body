{
  super(clazz,"");
  PropertyDescriptor[] propertyDescriptors=getReference().getPropertyDescriptors();
  if (!clazz.getSuperclass().equals(GroovyObject.class) && !clazz.getSuperclass().equals(Object.class) && !Modifier.isAbstract(clazz.getSuperclass().getModifiers())) {
    this.root=false;
  }
  this.propertyMap=new HashMap();
  this.relationshipMap=getAssociationMap();
  if (getPropertyOrStaticPropertyOrFieldValue(GrailsDomainClassProperty.MAPPED_BY,String.class) != null)   this.mappedBy=(String)getPropertyOrStaticPropertyOrFieldValue(GrailsDomainClassProperty.MAPPED_BY,String.class);
  establishRelationshipOwners();
  populateDomainClassProperties(propertyDescriptors);
  if (this.identifier == null) {
    throw new GrailsDomainException("Identity property not found, but required in domain class [" + getFullName() + "]");
  }
  if (this.version == null) {
    throw new GrailsDomainException("Version property not found, but required in domain class [" + getFullName() + "]");
  }
  this.properties=(GrailsDomainClassProperty[])this.propertyMap.values().toArray(new GrailsDomainClassProperty[this.propertyMap.size()]);
  establishRelationships();
  establishPersistentProperties();
  evaluateConstraints();
}
