{
  this.pluginManager=PluginManagerHolder.getPluginManager();
  if (pluginManager == null) {
    if (descriptor == null)     throw new IllegalStateException("Cannot create PluginManager, /WEB-INF/grails.xml not found!");
    ClassLoader classLoader=application.getClassLoader();
    List classes=new ArrayList();
    InputStream inputStream=null;
    try {
      inputStream=descriptor.getInputStream();
      GPathResult root=new XmlSlurper().parse(inputStream);
      GPathResult plugins=(GPathResult)root.getProperty("plugins");
      GPathResult nodes=(GPathResult)plugins.getProperty("plugin");
      for (int i=0; i < nodes.size(); i++) {
        GPathResult node=(GPathResult)nodes.getAt(i);
        final String pluginName=node.text();
        Class clazz;
        if (classLoader instanceof GroovyClassLoader) {
          clazz=classLoader.loadClass(pluginName);
        }
 else {
          clazz=Class.forName(pluginName,true,classLoader);
        }
        classes.add(clazz);
      }
    }
  finally {
      if (inputStream != null)       inputStream.close();
    }
    Class[] loadedPlugins=(Class[])classes.toArray(new Class[classes.size()]);
    pluginManager=new DefaultGrailsPluginManager(loadedPlugins,application);
    pluginManager.setApplicationContext(applicationContext);
    PluginManagerHolder.setPluginManager(pluginManager);
    pluginManager.loadPlugins();
  }
  this.pluginManager.setApplication(application);
  this.pluginManager.doArtefactConfiguration();
  application.initialise();
}
