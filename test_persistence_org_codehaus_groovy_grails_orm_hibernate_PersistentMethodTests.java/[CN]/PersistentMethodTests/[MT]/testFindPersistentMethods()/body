{
  GrailsDomainClass domainClass=(GrailsDomainClass)this.grailsApplication.getArtefact(DomainClassArtefactHandler.TYPE,"PersistentMethodTests");
  GroovyObject obj=(GroovyObject)domainClass.newInstance();
  obj.setProperty("id",new Long(1));
  obj.setProperty("firstName","fred");
  obj.setProperty("lastName","flintstone");
  obj.setProperty("age",new Integer(45));
  obj.invokeMethod("save",null);
  List params=new ArrayList();
  params.add("fre%");
  Object returnValue=obj.getMetaClass().invokeStaticMethod(obj,"find",new Object[]{"from PersistentMethodTests where firstName like ?",params});
  assertNotNull(returnValue);
  Binding b=new Binding();
  b.setVariable("test","fre%");
  GString gs=(GString)new GroovyShell(b).evaluate("\"$test\"");
  params.clear();
  ;
  params.add(gs);
  returnValue=obj.getMetaClass().invokeStaticMethod(obj,"find",new Object[]{"from PersistentMethodTests where firstName like ?",params});
  assertNotNull(returnValue);
  returnValue=obj.getMetaClass().invokeStaticMethod(obj,"findAll",new Object[]{"from PersistentMethodTests where firstName like ?",params});
  assertNotNull(returnValue);
  assertTrue(returnValue instanceof List);
  List returnList=(List)returnValue;
  assertEquals(1,returnList.size());
  b.setVariable("className","PersistentMethodTests");
  gs=(GString)new GroovyShell(b).evaluate("\"from ${className} where firstName like ?\"");
  returnValue=obj.getMetaClass().invokeStaticMethod(obj,"find",new Object[]{gs,params});
  assertNotNull(returnValue);
  returnValue=obj.getMetaClass().invokeStaticMethod(obj,"findAll",new Object[]{gs,params});
  assertNotNull(returnValue);
}
