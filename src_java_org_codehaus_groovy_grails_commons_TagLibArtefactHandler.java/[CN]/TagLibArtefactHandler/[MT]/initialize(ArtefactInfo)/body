{
  tag2libMap=new HashMap<String,GrailsTagLibClass>();
  GrailsClass[] classes=artefacts.getGrailsClasses();
  for (  GrailsClass aClass : classes) {
    GrailsTagLibClass taglibClass=(GrailsTagLibClass)aClass;
    String namespace=taglibClass.getNamespace();
    namespace2tagLibMap.put(namespace,taglibClass);
    for (    Object o : taglibClass.getTagNames()) {
      String tagName=namespace + ":" + o;
      if (!tag2libMap.containsKey(tagName)) {
        tag2libMap.put(tagName,taglibClass);
      }
 else {
        GrailsTagLibClass current=tag2libMap.get(tagName);
        if (!taglibClass.equals(current)) {
          LOG.info("There are conflicting tags: " + taglibClass.getFullName() + "."+ tagName+ " vs. "+ current.getFullName()+ "."+ tagName+ ". The former will take precedence.");
          tag2libMap.put(tagName,taglibClass);
        }
 else {
          throw new GrailsConfigurationException("Cannot configure tag library [" + taglibClass.getName() + "]. Library ["+ current.getName()+ "] already contains a tag called ["+ tagName+ "]");
        }
      }
    }
  }
}
