{
  GroovyClassLoader cl=new GroovyClassLoader();
  GrailsDomainClass oneClass=new DefaultGrailsDomainClass(cl.parseClass("class TestOneSide {\n" + "    Long id \n" + "    Long version \n"+ "    String fooName \n"+ "    String barDescriPtion \n"+ "}"));
  GrailsDomainClass domainClass=new DefaultGrailsDomainClass(cl.parseClass("class TestManySide {\n" + "    Long id \n" + "    Long version \n"+ "    TestOneSide testOneSide \n"+ "\n"+ "    static mapping = {\n"+ "        columns {\n"+ "            testOneSide column:'EXPECTED_COLUMN_NAME'"+ "        }\n"+ "    }\n"+ "}"));
  DefaultGrailsDomainConfiguration config=getDomainConfig(cl,new Class[]{oneClass.getClazz(),domainClass.getClazz()});
  PersistentClass persistentClass=config.getClassMapping("TestOneSide");
  assertEquals("test_one_side",persistentClass.getTable().getName());
  Column column=(Column)persistentClass.getProperty("id").getColumnIterator().next();
  assertEquals("id",column.getName());
  column=(Column)persistentClass.getProperty("version").getColumnIterator().next();
  assertEquals("version",column.getName());
  column=(Column)persistentClass.getProperty("fooName").getColumnIterator().next();
  assertEquals("foo_name",column.getName());
  column=(Column)persistentClass.getProperty("barDescriPtion").getColumnIterator().next();
  assertEquals("bar_descri_ption",column.getName());
  persistentClass=config.getClassMapping("TestManySide");
  assertEquals("test_many_side",persistentClass.getTable().getName());
  column=(Column)persistentClass.getProperty("id").getColumnIterator().next();
  assertEquals("id",column.getName());
  column=(Column)persistentClass.getProperty("version").getColumnIterator().next();
  assertEquals("version",column.getName());
  column=(Column)persistentClass.getProperty("testOneSide").getColumnIterator().next();
  assertEquals("EXPECTED_COLUMN_NAME",column.getName());
}
