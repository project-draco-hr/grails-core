{
  GroovyClassLoader gcl=new GroovyClassLoader();
  Class s1=gcl.parseClass("class TestService { boolean transactional = false;def serviceMethod() { 'hello' } }");
  Thread.sleep(1000);
  Class s2=gcl.parseClass("class AnotherService { boolean transactional = false;TestService testService; def anotherMethod() { testService.serviceMethod() } }");
  GrailsApplication app=new DefaultGrailsApplication(new Class[]{s1,s2},gcl);
  MockApplicationContext parent=new MockApplicationContext();
  parent.registerMockBean(GrailsApplication.APPLICATION_ID,app);
  GrailsRuntimeConfigurator conf=new GrailsRuntimeConfigurator(app,parent);
  conf.setLoadExternalPersistenceConfig(false);
  GrailsWebApplicationContext ctx=(GrailsWebApplicationContext)conf.configure(new MockServletContext());
  assertNotNull(ctx);
  assertEquals(s1,ctx.getBean("testService").getClass());
  assertEquals(s2,ctx.getBean("anotherService").getClass());
  GroovyObject anotherService=(GroovyObject)ctx.getBean("anotherService");
  assertNotNull(anotherService.getProperty("testService"));
  assertEquals("hello",anotherService.invokeMethod("anotherMethod",null));
}
