{
  if (arguments.length == 0) {
    throw new MissingMethodException(METHOD_SIGNATURE,target.getClass(),arguments);
  }
  Map argMap=arguments[0] instanceof Map ? (Map)arguments[0] : Collections.EMPTY_MAP;
  if (argMap.isEmpty()) {
    throw new MissingMethodException(METHOD_SIGNATURE,target.getClass(),arguments);
  }
  GrailsWebRequest webRequest=(GrailsWebRequest)RequestContextHolder.currentRequestAttributes();
  UrlMappingsHolder urlMappingsHolder=getUrlMappingsHolder(webRequest);
  HttpServletRequest request=webRequest.getCurrentRequest();
  if (request.getAttribute(GRAILS_REDIRECT_ISSUED) != null) {
    throw new CannotRedirectException("Cannot issue a redirect(..) here. A previous call to redirect(..) has already redirected the response.");
  }
  HttpServletResponse response=webRequest.getCurrentResponse();
  if (response.isCommitted()) {
    throw new CannotRedirectException("Cannot issue a redirect(..) here. The response has already been committed either by another redirect or by directly writing to the response.");
  }
  GroovyObject controller=(GroovyObject)target;
  Errors controllerErrors=(Errors)controller.getProperty(ControllerDynamicMethods.ERRORS_PROPERTY);
  Errors errors=(Errors)argMap.get(ARGUMENT_ERRORS);
  if (controllerErrors != null) {
    controllerErrors.addAllErrors(errors);
  }
 else {
    controller.setProperty(ControllerDynamicMethods.ERRORS_PROPERTY,errors);
  }
  Object uri=argMap.get(ARGUMENT_URI);
  String url=argMap.containsKey(ARGUMENT_URL) ? argMap.get(ARGUMENT_URL).toString() : null;
  String actualUri;
  if (uri != null) {
    GrailsApplicationAttributes attrs=webRequest.getAttributes();
    actualUri=attrs.getApplicationUri(request) + uri.toString();
  }
 else   if (url != null) {
    actualUri=url;
  }
 else {
    Object actionRef=argMap.get(ARGUMENT_ACTION);
    String actionName=establishActionName(actionRef,target);
    String controllerName=getControllerName(target,argMap);
    controllerName=controllerName != null ? controllerName : webRequest.getControllerName();
    Map params=(Map)argMap.get(ARGUMENT_PARAMS);
    if (params == null) {
      params=new HashMap();
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Dynamic method [redirect] looking up URL mapping for controller [" + controllerName + "] and action ["+ actionName+ "] and params ["+ params+ "] with ["+ urlMappingsHolder+ "]");
    }
    Object id=argMap.get(ARGUMENT_ID);
    try {
      if (id != null) {
        params.put(ARGUMENT_ID,id);
      }
      UrlCreator urlMapping=urlMappingsHolder.getReverseMapping(controllerName,actionName,params);
      if (urlMapping == null && LOG.isDebugEnabled()) {
        LOG.debug("Dynamic method [redirect] no URL mapping found for params [" + params + "]");
      }
      String frag=argMap.get(ARGUMENT_FRAGMENT) != null ? argMap.get(ARGUMENT_FRAGMENT).toString() : null;
      actualUri=urlMapping.createURL(controllerName,actionName,params,request.getCharacterEncoding(),frag);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Dynamic method [redirect] mapped to URL [" + actualUri + "]");
      }
    }
  finally {
      if (id != null) {
        params.remove(ARGUMENT_ID);
      }
    }
  }
  return redirectResponse(actualUri,request,response);
}
