{
  if (values != null) {
    for (    Expression current : values.getExpressions()) {
      if (current instanceof ClassExpression) {
        ClassExpression ce=(ClassExpression)current;
        ClassNode mixinClassNode=ce.getType();
        final String fieldName='$' + GrailsNameUtils.getPropertyName(mixinClassNode.getName());
        GrailsASTUtils.addFieldIfNonExistent(classNode,mixinClassNode,fieldName);
        VariableExpression fieldReference=new VariableExpression(fieldName,mixinClassNode);
        while (!mixinClassNode.getName().equals(OBJECT_CLASS)) {
          final List<MethodNode> mixinMethods=mixinClassNode.getMethods();
          for (          MethodNode mixinMethod : mixinMethods) {
            if (isCandidateMethod(mixinMethod) && !hasDeclaredMethod(classNode,mixinMethod)) {
              if (mixinMethod.isStatic()) {
                GrailsASTUtils.addCompileStaticAnnotation(GrailsASTUtils.addDelegateStaticMethod(classNode,mixinMethod));
              }
 else {
                GrailsASTUtils.addCompileStaticAnnotation(GrailsASTUtils.addDelegateInstanceMethod(classNode,fieldReference,mixinMethod,false));
              }
            }
          }
          mixinClassNode=mixinClassNode.getSuperClass();
        }
      }
    }
  }
}
