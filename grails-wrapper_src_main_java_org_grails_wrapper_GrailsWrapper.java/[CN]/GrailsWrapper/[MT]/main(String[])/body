{
  final ResourceBundle applicationBundle=ResourceBundle.getBundle("application");
  final ResourceBundle wrapperBundle=ResourceBundle.getBundle("grails-wrapper");
  final String grailsVersion=applicationBundle.getString("app.grails.version");
  String distUrl=wrapperBundle.getString("wrapper.dist.url");
  if (distUrl == null) {
    distUrl="https://github.com/grails/grails-core/releases/download/v" + grailsVersion + "/";
  }
  if (!distUrl.endsWith("/")) {
    distUrl+="/";
  }
  addSystemProperties(wrapperBundle);
  final File grailsHome=configureGrailsInstallation(distUrl,grailsVersion);
  System.setProperty("grails.home",grailsHome.getAbsolutePath());
  final List<String> newArgsList=new ArrayList<String>();
  for (int i=0; i < args.length; i++) {
    final String arg=args[i];
    if ("--main".equals(arg) && i < args.length - 1) {
      i++;
    }
 else     if ("--conf".equals(arg) && i < args.length - 1) {
      newArgsList.add(arg);
      final File groovyStarterConf=new File(grailsHome,"conf/groovy-starter.conf");
      newArgsList.add(groovyStarterConf.getAbsolutePath());
      i++;
    }
 else {
      newArgsList.add(arg);
    }
  }
  final String[] newArgsArray=newArgsList.toArray(new String[0]);
  final URL[] urls=new URL[2];
  urls[0]=new File(grailsHome,"dist/grails-bootstrap-" + grailsVersion + ".jar").toURI().toURL();
  final File directoryToSearchForGroovyAllJar=new File(grailsHome,"/lib/org.codehaus.groovy");
  final File groovyJar=findGroovyAllJar(directoryToSearchForGroovyAllJar);
  if (groovyJar == null) {
    System.err.println("An error occurred locating the groovy jar under " + directoryToSearchForGroovyAllJar.getAbsolutePath());
    System.exit(-1);
  }
  final URI groovyJarUri=groovyJar.toURI();
  final URL groovyJarUrl=groovyJarUri.toURL();
  urls[1]=groovyJarUrl;
  final URLClassLoader urlClassLoader=new URLClassLoader(urls);
  final Class<?> loadClass=urlClassLoader.loadClass("org.codehaus.groovy.grails.cli.support.GrailsStarter");
  final Method mainMethod=loadClass.getMethod("main",String[].class);
  mainMethod.invoke(null,new Object[]{newArgsArray});
}
