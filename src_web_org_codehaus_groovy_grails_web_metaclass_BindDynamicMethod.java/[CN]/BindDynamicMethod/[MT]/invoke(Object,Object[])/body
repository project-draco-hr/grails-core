{
  if (arguments.length < 2)   throw new MissingMethodException(METHOD_SIGNATURE,target.getClass(),arguments);
  if (arguments[0] == null)   throw new IllegalArgumentException("Argument [target] is required by method [bindData] on class [" + target.getClass() + "]");
  Object targetObject=arguments[0];
  Object bindParams=arguments[1];
  Object disallowed=null;
  if (arguments.length > 2) {
    disallowed=arguments[2];
    if (!(disallowed instanceof List)) {
      throw new IllegalArgumentException("Argument [disallowed] for method [bindData] must implement the interface [java.util.List]");
    }
  }
  GrailsDataBinder dataBinder;
  if (bindParams instanceof GrailsParameterMap) {
    GrailsParameterMap parameterMap=(GrailsParameterMap)bindParams;
    HttpServletRequest request=parameterMap.getRequest();
    dataBinder=GrailsDataBinder.createBinder(targetObject,targetObject.getClass().getName(),request);
    updateDisallowed(dataBinder,(List)disallowed);
    dataBinder.bind(request);
  }
 else   if (bindParams instanceof HttpServletRequest) {
    GrailsWebRequest webRequest=(GrailsWebRequest)RequestContextHolder.currentRequestAttributes();
    dataBinder=GrailsDataBinder.createBinder(targetObject,targetObject.getClass().getName(),webRequest.getCurrentRequest());
    updateDisallowed(dataBinder,(List)disallowed);
    dataBinder.bind((HttpServletRequest)arguments[1]);
  }
 else   if (bindParams instanceof Map) {
    dataBinder=new GrailsDataBinder(targetObject,targetObject.getClass().getName());
    PropertyValues pv=new MutablePropertyValues((Map)bindParams);
    updateDisallowed(dataBinder,(List)disallowed);
    dataBinder.bind(pv);
  }
 else {
    GrailsWebRequest webRequest=(GrailsWebRequest)RequestContextHolder.currentRequestAttributes();
    dataBinder=GrailsDataBinder.createBinder(targetObject,targetObject.getClass().getName(),webRequest.getCurrentRequest());
    updateDisallowed(dataBinder,(List)disallowed);
    dataBinder.bind(webRequest.getCurrentRequest());
  }
  return targetObject;
}
