{
  if (!(o instanceof UrlMapping)) {
    throw new IllegalArgumentException("Cannot compare with Object [" + o + "]. It is not an instance of UrlMapping!");
  }
  if (equals(o))   return 0;
  UrlMapping other=(UrlMapping)o;
  final int otherDoubleWildcardCount=getDoubleWildcardCount(other);
  final int thisDoubleWildcardCount=getDoubleWildcardCount(this);
  final int doubleWildcardDiff=otherDoubleWildcardCount - thisDoubleWildcardCount;
  if (doubleWildcardDiff != 0)   return doubleWildcardDiff;
  final int otherSingleWildcardCount=getSingleWildcardCount(other);
  final int thisSingleWildcardCount=getSingleWildcardCount(this);
  final int singleWildcardDiff=otherSingleWildcardCount - thisSingleWildcardCount;
  if (singleWildcardDiff != 0)   return singleWildcardDiff;
  final int thisStaticTokenCount=getStaticTokenCount(this);
  final int otherStaticTokenCount=getStaticTokenCount(other);
  if (otherStaticTokenCount == 0 && thisStaticTokenCount > 0) {
    return 1;
  }
  if (thisStaticTokenCount == 0 && otherStaticTokenCount > 0) {
    return -1;
  }
  final int thisStaticAndWildcardTokenCount=getStaticAndWildcardTokenCount(this);
  final int otherStaticAndWildcardTokenCount=getStaticAndWildcardTokenCount(other);
  if (otherStaticAndWildcardTokenCount == 0 && thisStaticAndWildcardTokenCount > 0) {
    return 1;
  }
  if (thisStaticAndWildcardTokenCount == 0 && otherStaticAndWildcardTokenCount > 0) {
    return -1;
  }
  final int staticDiff=thisStaticTokenCount - otherStaticTokenCount;
  if (staticDiff != 0)   return staticDiff;
  String[] thisTokens=getUrlData().getTokens();
  String[] otherTokens=other.getUrlData().getTokens();
  for (int i=0; i < thisTokens.length; i++) {
    boolean thisTokenIsWildcard=isSingleWildcard(thisTokens[i]);
    boolean otherTokenIsWildcard=isSingleWildcard(otherTokens[i]);
    if (thisTokenIsWildcard && !otherTokenIsWildcard) {
      return -1;
    }
    if (!thisTokenIsWildcard && otherTokenIsWildcard) {
      return 1;
    }
  }
  int constraintDiff=getAppliedConstraintsCount(this) - getAppliedConstraintsCount(other);
  if (constraintDiff != 0)   return constraintDiff;
  String thisVersion=getVersion();
  String thatVersion=other.getVersion();
  if ((thisVersion.equals(thatVersion))) {
    return 0;
  }
 else   if (thisVersion.equals(UrlMapping.ANY_VERSION) && !thatVersion.equals(UrlMapping.ANY_VERSION)) {
    return -1;
  }
 else   if (!thisVersion.equals(UrlMapping.ANY_VERSION) && thatVersion.equals(UrlMapping.ANY_VERSION)) {
    return 1;
  }
 else {
    return new VersionComparator().compare(thisVersion,thatVersion);
  }
}
