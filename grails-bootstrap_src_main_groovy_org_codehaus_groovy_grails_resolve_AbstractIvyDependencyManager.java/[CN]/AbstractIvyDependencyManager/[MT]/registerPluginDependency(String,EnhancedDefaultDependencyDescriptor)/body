{
  ModuleId dependencyId=descriptor.getDependencyId();
  String name=dependencyId.getName();
  DependencyDescriptor existing=pluginNameToDescriptorMap.get(name);
  if (existing != null && descriptor.isTransitivelyIncluded()) {
    ModuleRevisionId dependencyRevisionId=existing.getDependencyRevisionId();
    if (dependencyRevisionId.equals(descriptor.getDependencyRevisionId()))     return;
 else     if (descriptor.getPlugin() != null && (existing instanceof EnhancedDefaultDependencyDescriptor) && ((EnhancedDefaultDependencyDescriptor)existing).getPlugin() == null) {
      return;
    }
  }
  registerDependencyCommon(scope,descriptor,true);
  pluginNameToDescriptorMap.put(name,descriptor);
  pluginDependencyDescriptors.add(descriptor);
  if (shouldIncludeDependency(descriptor)) {
    addToModuleDescriptor(scope,descriptor,moduleDescriptor);
  }
}
