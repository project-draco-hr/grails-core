{
  UrlMappingsHolder holder=lookupUrlMappings();
  GrailsApplication application=lookupApplication();
  GrailsClass[] controllers=application.getArtefacts(ControllerArtefactHandler.TYPE);
  if (controllers == null || controllers.length == 0) {
    filterChain.doFilter(request,response);
    return;
  }
  if (LOG.isTraceEnabled()) {
    LOG.trace("Executing URL mapping filter");
  }
  String uri=urlHelper.getPathWithinApplication(request);
  UrlMappingInfo info=holder.match(uri);
  try {
    WrappedResponseHolder.setWrappedResponse(response);
    if (info != null) {
      String action=info.getActionName() == null ? "" : info.getActionName();
      GrailsClass controller=application.getArtefactForFeature(ControllerArtefactHandler.TYPE,SLASH + info.getControllerName() + SLASH+ action);
      if (controller == null) {
        if (filterChain != null)         filterChain.doFilter(request,response);
        return;
      }
      String forwardUrl=buildDispatchUrlForMapping(request,info);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Matched URI [" + uri + "] to URL mapping, forwarding to ["+ forwardUrl+ "] with response ["+ response.getClass()+ "]");
      }
      RequestDispatcher dispatcher=request.getRequestDispatcher(forwardUrl);
      WebUtils.exposeForwardRequestAttributes(request);
      dispatcher.forward(request,response);
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("No match found, processing remaining filter chain.");
      }
      if (filterChain != null)       filterChain.doFilter(request,response);
    }
  }
  finally {
    WrappedResponseHolder.setWrappedResponse(null);
  }
}
