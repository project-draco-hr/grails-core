{
  CorePluginFinder finder=new CorePluginFinder(application);
  finder.setParentApplicationContext(parentCtx);
  List<GrailsPlugin> grailsCorePlugins=new ArrayList<GrailsPlugin>();
  final Class<?>[] corePluginClasses=finder.getPluginClasses();
  for (  Class<?> pluginClass : corePluginClasses) {
    if (pluginClass == null || Modifier.isAbstract(pluginClass.getModifiers()) || pluginClass == DefaultGrailsPlugin.class) {
      continue;
    }
    final BinaryGrailsPluginDescriptor binaryDescriptor=finder.getBinaryDescriptor(pluginClass);
    GrailsPlugin plugin;
    if (binaryDescriptor == null) {
      plugin=createGrailsPlugin(pluginClass);
    }
 else {
      plugin=createBinaryGrailsPlugin(pluginClass,binaryDescriptor);
    }
    plugin.setApplicationContext(applicationContext);
    grailsCorePlugins.add(plugin);
  }
  return grailsCorePlugins;
}
