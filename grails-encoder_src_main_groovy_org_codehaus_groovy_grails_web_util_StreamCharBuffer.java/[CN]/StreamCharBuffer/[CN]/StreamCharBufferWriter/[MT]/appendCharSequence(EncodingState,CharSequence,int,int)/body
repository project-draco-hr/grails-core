{
  final Class<?> csqClass=csq.getClass();
  if (csqClass == String.class || csqClass == StringBuffer.class || csqClass == StringBuilder.class || csq instanceof CharArrayAccessible) {
    int len=end - start;
    int charsLeft=len;
    int currentOffset=start;
    while (charsLeft > 0) {
      int spaceLeft=allocateSpace(encodingState);
      int writeChars=Math.min(spaceLeft,charsLeft);
      if (csqClass == String.class) {
        allocBuffer.writeString((String)csq,currentOffset,writeChars);
      }
 else       if (csqClass == StringBuffer.class) {
        allocBuffer.writeStringBuffer((StringBuffer)csq,currentOffset,writeChars);
      }
 else       if (csqClass == StringBuilder.class) {
        allocBuffer.writeStringBuilder((StringBuilder)csq,currentOffset,writeChars);
      }
 else       if (csq instanceof CharArrayAccessible) {
        allocBuffer.writeCharArrayAccessible((CharArrayAccessible)csq,currentOffset,writeChars);
      }
      charsLeft-=writeChars;
      currentOffset+=writeChars;
    }
  }
 else {
    String str=csq.subSequence(start,end).toString();
    write(encodingState,str,0,str.length());
  }
}
